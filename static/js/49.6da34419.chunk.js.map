{"version":3,"sources":["../../../../src/Popover/usePopoverProviderState.js","PageHeader/PUI-2976.js","../../../../src/TruncatedTooltipText/TooltipTextProvider.js","../../../../src/TruncatedTooltipText/DSTruncatedTooltipText.js","../../../../../src/form/RequiredMark/RequiredMark.js","../../../../src/hooks/useExecutionTimer.js","../../../../../../src/PageHeader/v2/components/blocks.js","../../../../../../src/PageHeader/v2/components/PageHeaderTitle/PageHeaderTitle.js","../../../../../../src/PageHeader/v2/components/PageHeaderSummary/PageHeaderSummary.js","../../../../../../src/PageHeader/v2/components/PageHeaderMenu/PageHeaderMenu.js","../../../../../../src/PageHeader/v2/components/PageHeaderToolbar/PageHeaderToolbar.js","../../../../../../src/PageHeader/v2/components/PageHeaderBack/PageHeaderBack.js","../../../../../src/PageHeader/v2/PageHeader.js"],"names":["initialState","reference","visible","value","options","delay","triggerRef","useRef","useState","tooltipState","setTooltipState","useExecutionTimer","state","prevState","showTooltip","hideTooltip","handleHideTooltip","useEffect","window","throttle","show","e","target","hide","memo","pageTitle","summary","label","data-testid","TruncatedTooltipContext","React","Provider","TooltipTextProvider","children","tooltipDelay","placement","tooltipOptions","usePopoverProviderState","zIndex","setZIndex","useMemo","boundaries","showArrow","content","referenceEl","style","pointerEvents","Text","styled","DSTruncatedTooltipText","containerProps","otherTextProps","tooltipContext","useContext","handlers","onMouseEnter","onMouseLeave","PropTypes","tooltipPlacement","positions","number","undefined","cssClassName","convertPropToCssClassName","required","optional","className","startFn","cleanFn","delayTime","startTimer","closeTimer","args","clearTimeout","setTimeout","blockName","PageHeaderTitleWrapper","aggregatedClasses","PageHeaderBackWrapper","PageHeaderSummaryWrapper","PageHeaderMenuWrapper","PageHeaderToolbarWrapper","PageHeaderTitle","showMarker","rest","PageHeaderSummary","string","PageHeaderMenu","PageHeaderToolbar","PageHeaderBack","Container","theme","ContainerWBorder","DSPageHeaderV2","breadcrumbs","backarrow","toolbar","menu","mainRow","compact","pageTitleRow","activeEditing","setActiveEditing","activeEditingStyle","opacity","cols","rows","onBlur","onFocus"],"mappings":"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","file":"static/js/49.6da34419.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { throttle } from 'lodash';\nimport { useExecutionTimer } from '@elliemae/ds-utilities/hooks';\n\nfunction usePopoverProviderState({\n  initialState = {\n    reference: null,\n    visible: false,\n    value: '',\n    options: {},\n  },\n  delay,\n}) {\n  const triggerRef = useRef();\n  const [tooltipState, setTooltipState] = useState(initialState);\n\n  const show = state => {\n    setTooltipState(prevState => ({\n      ...prevState,\n      ...state,\n      visible: true,\n    }));\n  };\n  const hide = state => {\n    setTooltipState(prevState => ({\n      ...prevState,\n      ...state,\n      visible: false,\n    }));\n  };\n\n  const [showTooltip, hideTooltip] = useExecutionTimer(show, hide, delay);\n\n  const handleShowTooltip = (state, e) => {\n    triggerRef.current = e.target;\n    showTooltip({ ...state, reference: e.target });\n  };\n\n  const handleHideTooltip = state => {\n    hideTooltip(state);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', throttle(handleHideTooltip, 300), true);\n    window.addEventListener('click', handleHideTooltip, true);\n    return () => {\n      window.removeEventListener(\n        'scroll',\n        throttle(handleHideTooltip, 300),\n        true,\n      );\n      window.addEventListener('click', handleHideTooltip, true);\n    };\n  }, [tooltipState.reference]);\n\n  return {\n    show: handleShowTooltip,\n    hide: handleHideTooltip,\n    state: tooltipState,\n  };\n}\n\nexport default usePopoverProviderState;\n","import React, { memo } from 'react';\nimport {\n  DSPageHeaderV2,\n  PageHeaderTitle,\n  PageHeaderSummary,\n} from '@elliemae/ds-basic/PageHeader';\n\nconst WorkflowRulesHeader = () => (\n  <DSPageHeaderV2\n    pageTitle={<PageHeaderTitle>Automation Rules</PageHeaderTitle>}\n    summary={\n      <PageHeaderSummary\n        label=\"Rules\"\n        value={0}\n        data-testid=\"workflow-rules-header-summary\"\n      />\n    }\n  />\n);\n\nexport default memo(WorkflowRulesHeader);\n","/* eslint-disable react/prop-types */\nimport React, { useMemo, useState } from 'react';\nimport DSPopover, { usePopoverProviderState } from '../Popover';\n\nexport const TruncatedTooltipContext = React.createContext();\n\nconst { Provider } = TruncatedTooltipContext;\n\nfunction TooltipTextProvider({\n  children,\n  tooltipDelay = 200,\n  placement = 'top',\n  ...tooltipOptions\n}) {\n  const {\n    show: showTooltip,\n    hide: hideTooltip,\n    state: tooltipState,\n  } = usePopoverProviderState({ delay: tooltipDelay });\n  const [zIndex, setZIndex] = useState(110);\n\n  const value = useMemo(\n    () => ({\n      showTooltip,\n      hideTooltip,\n      setZIndex,\n    }),\n    [],\n  );\n\n  return (\n    <Provider value={value}>\n      {children}\n      {tooltipState.visible ? (\n        <DSPopover\n          boundaries=\"window\"\n          placement={placement}\n          showArrow\n          {...tooltipOptions}\n          {...(tooltipState.options || {})}\n          content={tooltipState.value}\n          referenceEl={tooltipState.reference}\n          style={{ pointerEvents: 'none', zIndex }}\n          visible={tooltipState.visible}\n        />\n      ) : null}\n    </Provider>\n  );\n}\n\nTooltipTextProvider.propTypes = {};\nTooltipTextProvider.defaultProps = {};\n\nexport default TooltipTextProvider;\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { PopperPositions as positions } from '../Popper';\nimport { TruncatedTooltipContext } from './TooltipTextProvider';\n\nconst isEllipsisActive = ({ offsetWidth, scrollWidth }) =>\n  offsetWidth < scrollWidth;\n\n// reduce the possibility of error showing the tooltip (text-overflow: ellipsis) https://jira.elliemae.io/browse/PUI-1755\nconst Text = styled.span`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: inline-block;\n  max-width: 100%;\n`;\n\nfunction DSTruncatedTooltipText({\n  containerProps = {},\n  value = '',\n  zIndex = 110, // https://jira.elliemae.io/browse/PUI-1755\n  ...otherTextProps\n}) {\n  const tooltipContext = useContext(TruncatedTooltipContext);\n  useEffect(() => {\n    if (zIndex && tooltipContext) tooltipContext.setZIndex(zIndex);\n  }, [zIndex]);\n\n  if (!tooltipContext) return value;\n\n  const { showTooltip, hideTooltip } = tooltipContext;\n\n  const handleMouseEnter = (e) => {\n    const { target } = e;\n    if (target && isEllipsisActive(target, target.getBoundingClientRect())) {\n      showTooltip(\n        {\n          value,\n          reference: target,\n        },\n        e,\n      );\n    }\n  };\n\n  const handleMouseLeave = (e) => {\n    hideTooltip({ reference: e.target });\n  };\n\n  const handlers = showTooltip\n    ? { onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave }\n    : {};\n  return (\n    <Text {...containerProps} {...otherTextProps} {...handlers}>\n      {value}\n    </Text>\n  );\n}\n\nDSTruncatedTooltipText.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /** Text that when truncated will trigger the tooltip interaction */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  /** Position of the tooltip */\n  tooltipPlacement: PropTypes.oneOf([\n    positions.AUTO_START,\n    positions.AUTO_END,\n    positions.AUTO,\n    positions.TOP_START,\n    positions.TOP,\n    positions.TOP_END,\n    positions.RIGHT_START,\n    positions.RIGHT,\n    positions.RIGHT_END,\n    positions.BOTTOM_START,\n    positions.BOTTOM,\n    positions.BOTTOM_END,\n    positions.LEFT_START,\n    positions.LEFT,\n    positions.LEFT_END,\n  ]),\n  /** Delay to show the tooltip */\n  tooltipDelay: PropTypes.number,\n  /** override default zIndex */\n  zIndex: PropTypes.number,\n};\n\nDSTruncatedTooltipText.defaultProps = {\n  containerProps: {},\n  value: '',\n  tooltipPlacement: undefined,\n  tooltipDelay: undefined,\n};\n\nexport default DSTruncatedTooltipText;\n","import React from 'react';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\n\nconst { cssClassName } = convertPropToCssClassName('form-required-mark');\nconst RequiredMark = ({ required = false, optional = false }) => {\n  if (!required && !optional) return null;\n  if (required) {\n    return <span className={`${cssClassName}`}>&#9679;</span>;\n  }\n  return <span className={`${cssClassName} optional-mark`}>&#9900;</span>;\n};\n\nexport default RequiredMark;\n","import { useRef } from 'react';\n\nexport default function useExecutionDelay(startFn, cleanFn, delayTime) {\n  const startTimer = useRef();\n  const closeTimer = useRef();\n\n  const startFunction = (...args) => {\n    clearTimeout(closeTimer.current);\n    startTimer.current = setTimeout(() => startFn(...args), delayTime);\n  };\n\n  const cleanFunction = (...args) => {\n    clearTimeout(startTimer.current);\n    closeTimer.current = setTimeout(() => cleanFn(...args), 30);\n  };\n  return [startFunction, cleanFunction];\n}\n","import { cssPrefix } from '@elliemae/ds-classnames/aggregatedClasses';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport DSInput from '../../../form/Input';\n\nconst blockName = 'page-header-v2';\n\nexport const PageHeaderTitleWrapper = aggregatedClasses('div')(\n  `${blockName}-title`,\n  'title',\n);\nexport const EditableTitleComponent = aggregatedClasses(DSInput)(\n  `${blockName}-title`,\n  'editable-title',\n);\nexport const PageHeaderBackWrapper = aggregatedClasses('div')(\n  `${blockName}-back`,\n);\nexport const PageHeaderSummaryWrapper = aggregatedClasses('div')(\n  `${blockName}-summary`,\n);\nexport const PageHeaderMenuWrapper = aggregatedClasses('div')(\n  `${blockName}-menu`,\n);\nexport const PageHeaderToolbarWrapper = aggregatedClasses('div')(\n  `${blockName}-toolbar`,\n);\nexport { cssPrefix };\n","import React from 'react';\nimport DSTruncatedTooltipText from '../../../../TruncatedTooltipText';\nimport RequiredMark from '../../../../form/RequiredMark';\nimport { PageHeaderTitleWrapper } from '../blocks';\n\nexport const PageHeaderTitle = ({ children, showMarker = false, ...rest }) => (\n  <PageHeaderTitleWrapper {...rest}>\n    <DSTruncatedTooltipText value={children} />\n    {showMarker && <RequiredMark required />}\n  </PageHeaderTitleWrapper>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeaderSummaryWrapper } from '../blocks';\n\nconst PageHeaderSummary = ({ value = null, label = '', ...rest }) => (\n  <PageHeaderSummaryWrapper {...rest}>\n    {(value === 0 || value) && <div className=\"ph-summary-value\">{value}</div>}\n    {label && <div className=\"ph-summary-label\">{label}</div>}\n    {(value === 0 || value || label) && <div className=\"ph-summary-space\" />}\n  </PageHeaderSummaryWrapper>\n);\n\nPageHeaderSummary.propTypes = {\n  value: PropTypes.number,\n  label: PropTypes.string,\n};\n\nexport { PageHeaderSummary };\n","import React from 'react';\nimport { PageHeaderMenuWrapper } from '../blocks';\n\nexport const PageHeaderMenu = ({ children, ...rest }) => (\n  <PageHeaderMenuWrapper {...rest}>{children}</PageHeaderMenuWrapper>\n);\n","import React from 'react';\nimport { PageHeaderToolbarWrapper } from '../blocks';\n\nexport const PageHeaderToolbar = ({ children, ...rest }) => (\n  <PageHeaderToolbarWrapper {...rest}>{children}</PageHeaderToolbarWrapper>\n);\n","import React from 'react';\nimport { PageHeaderBackWrapper } from '../blocks';\n\nexport const PageHeaderBack = ({ children, ...rest }) => (\n  <PageHeaderBackWrapper {...rest}>{children}</PageHeaderBackWrapper>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { compact } from 'lodash';\nimport styled from 'styled-components';\nimport theme from '@elliemae/ds-system/theme';\nimport { Grid } from '../../Grid';\nimport { PageHeaderTitle } from './components/PageHeaderTitle/PageHeaderTitle';\nimport { PageHeaderEditableTitle } from './components/PageHeaderEditableTitle/PageHeaderEditableTitle';\nimport { PageHeaderSummary } from './components/PageHeaderSummary/PageHeaderSummary';\nimport { PageHeaderMenu } from './components/PageHeaderMenu/PageHeaderMenu';\nimport { PageHeaderToolbar } from './components/PageHeaderToolbar/PageHeaderToolbar';\nimport { PageHeaderBack } from './components/PageHeaderBack/PageHeaderBack';\nimport { cssPrefix } from './components/blocks';\n\nconst PageHeaderCustomRenderer = styled.div`\n  width: auto;\n  color: ${theme.colors.brand[800]};\n  font-style: italic;\n  font-size: 0.8rem;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  margin-bottom: 4px;\n`;\nconst ContainerWBorder = styled.div`\n  width: 100%;\n  padding-bottom: 4px;\n  border-bottom: solid 1px ${theme.colors.neutral[400]};\n`;\nconst getActiveEditing = editing =>\n  editing\n    ? {\n        opacity: 0.5,\n        pointerEvents: 'none',\n      }\n    : {};\n\nexport const DSPageHeaderV2 = ({\n  containerProps = {},\n  breadcrumbs = null,\n  pageTitle = null,\n  backarrow = null,\n  summary = null,\n  toolbar = null,\n  menu = null,\n}) => {\n  const wrapperRow = ['auto', 1];\n  const mainRow = compact([1, '268px']);\n  const pageTitleRow = compact(['auto', menu && '30px', summary && 'auto', 1]);\n  const [activeEditing, setActiveEditing] = useState(false);\n  const activeEditingStyle = getActiveEditing(activeEditing);\n  return (\n    <Container {...containerProps}>\n      <ContainerWBorder>\n        <Grid cols={wrapperRow}>\n          <Grid>\n            <PageHeaderBack style={activeEditingStyle}>\n              {backarrow}\n            </PageHeaderBack>\n          </Grid>\n          <Grid rows={['auto', 'auto']}>\n            <Grid\n              className={`${cssPrefix}-page-header-v2-breadcrumb`}\n              style={activeEditingStyle}\n            >\n              {breadcrumbs}\n            </Grid>\n            <Grid cols={mainRow}>\n              <Grid cols={pageTitleRow}>\n                {React.cloneElement(pageTitle, {\n                  onBlur: e => {\n                    setActiveEditing(false);\n                    if (pageTitle.props.onBlur) pageTitle.props.onBlur(e);\n                  },\n                  onFocus: e => {\n                    setActiveEditing(true);\n                    if (pageTitle.props.onFocus) pageTitle.props.onFocus(e);\n                  },\n                })}\n                {menu && <PageHeaderMenu>{menu}</PageHeaderMenu>}\n                {summary}\n                <div />\n              </Grid>\n              <Grid>\n                <PageHeaderToolbar>{toolbar}</PageHeaderToolbar>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </ContainerWBorder>\n    </Container>\n  );\n};\n\nDSPageHeaderV2.propTypes = {\n  containerProps: PropTypes.shape({}),\n};\n\nexport {\n  PageHeaderTitle,\n  PageHeaderEditableTitle,\n  PageHeaderSummary,\n  PageHeaderMenu,\n  PageHeaderCustomRenderer,\n};\n"],"sourceRoot":""}