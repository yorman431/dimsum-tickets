{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","TreeView/nodes.js","../../../src/DSCardBody.tsx","../../../src/DSCardHeader.tsx","../../../src/DSCard.tsx","TreeView/Highlighted.js"],"names":["_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","getNode","children","rest","id","uuidv4","name","modifiedNodes","type","parent","getDeepNodes","DSCardBody","className","data-testid","bodyProps","PropTypes","describe","DSCardBodyWithSchema","DSCardHeader","title","action","convertPropToCssClassName","cssClassName","classNameElement","cardHeader","DSCardHeaderWithSchema","DSCard","innerRef","undefined","containerProps","otherProps","ref","cardProps","DSCardWithSchema","Container","styled","div","items","nodes","slice","forEach","node","push","Highlighted","useState","selectedOnChange","setSelectedOnChange","selected","setSelected","clicked","setClicked","instanceRef","useRef","TreeView","data","fluid","groupIcon","Folder","itemIcon","FilePdf","onItemClick","plugins","SelectablePluginTree","onSelect","width","onSelectionChange","item","flat","filter","DSSeparator","orientation","style","height","maxWidth","padding"],"mappings":"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","file":"static/js/74.78245224.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { v4 as uuidv4 } from 'uuid';\n\nconst getNode = ({ children = [], ...rest }) => ({\n  id: uuidv4(),\n  name: `${children.length ? 'Group' : 'Child'}`,\n  children,\n  ...rest,\n});\n\nexport default [\n  {\n    id: '4548a528-a0b2-4ee5-8fb3-94628e3320a6',\n    name: 'Test123 (1)',\n    type: 'task',\n    parent: 'fd28f6e5-d055-4ed8-b3f1-a4c2473876a4',\n    children: [\n      {\n        id: '4548a528-a0b2-4e44-8fb3-94628e3320a6',\n        name: 'Child 1 (1)',\n        type: 'task',\n        parent: 'fd28f6e5-d055-4ed8-b3f1-a4c2473876a4',\n        children: [],\n      },\n      {\n        id: '0ba3e4bb-bce5-4c33-aafc-2f79670ac3b6',\n        name: 'Child 2 (1)',\n        type: 'task',\n        parent: 'fd28f6e5-d055-4ed8-b3f1-a4c2473876a4',\n        children: [],\n      },\n    ],\n  },\n  {\n    id: '0ba3e4bb-bce5-4c3c-aafc-2f79670ac3b6',\n    name: 'Test (1)',\n    type: 'task',\n    parent: 'fd28f6e5-d055-4ed8-b3f1-a4c2473876a4',\n    children: [],\n  },\n];\n\nexport const modifiedNodes = [\n  {\n    id: '4548a528-a0b2-4ee5-8fb3-94628e3320a6',\n    name: 'Test123 Group',\n    type: 'task',\n    parent: 'fd28f6e5-d055-4ed8-b3f1-a4c2473876a4',\n    children: [\n      {\n        id: '4548a528-a0b2-4e44-8fb3-2f79670ac3b6',\n        name: 'Child 1',\n        type: 'task',\n        parent: 'fd28f6e5-d055-4ed8-b3f1-a4c2473876a4',\n        children: [],\n      },\n      {\n        id: '0ba3e4bb-bce5-4c33-aafc-94628e3320a6',\n        name: 'Child 2',\n        type: 'task',\n        parent: 'fd28f6e5-d055-4ed8-b3f1-a4c2473876a4',\n        children: [],\n      },\n    ],\n  },\n  {\n    id: '0ba3e4bb-bce5-4c3c-aafc-2f79670ac3b6',\n    name: 'Test Task',\n    type: 'task',\n    parent: 'fd28f6e5-d055-4ed8-b3f1-a4c2473876a4',\n    children: [],\n  },\n];\n\nexport const getDeepNodes = () => [\n  getNode({\n    children: [\n      getNode({ children: [] }),\n      getNode({ children: [] }),\n      getNode({ children: [] }),\n    ],\n  }),\n  getNode({\n    children: [\n      getNode({\n        children: [\n          getNode({\n            children: [\n              getNode({ children: [] }),\n              getNode({ children: [] }),\n            ],\n          }),\n          getNode({\n            children: [getNode({ children: [] })],\n          }),\n        ],\n      }),\n      getNode({\n        children: [\n          getNode({\n            children: [\n              getNode({ children: [] }),\n              getNode({ children: [] }),\n              getNode({ children: [] }),\n            ],\n          }),\n          getNode({\n            children: [getNode({ children: [] })],\n          }),\n        ],\n      }),\n      getNode({ children: [] }),\n    ],\n  }),\n];\n","import React from 'react';\nimport { PropTypes, describe } from 'react-desc';\n\nconst DSCardBody = ({ children }) => (\n  <div className=\"em-ds-card-body\" data-testid=\"card-body\">\n    {children}\n  </div>\n);\n\nconst bodyProps = {\n  /** children */\n  children: PropTypes.element.description('children'),\n};\n\nDSCardBody.propTypes = bodyProps;\nconst DSCardBodyWithSchema = describe(DSCardBody);\nDSCardBodyWithSchema.propTypes = bodyProps;\n\nexport { DSCardBody, DSCardBodyWithSchema };\nexport default DSCardBody;\n","import React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\n\nconst DSCardHeader = ({ title, action }) => {\n  const { cssClassName, classNameElement } = convertPropToCssClassName(\n    'card-header',\n  );\n  return (\n    <div className={cssClassName} data-testid=\"card-header\">\n      <span className={classNameElement('heading')}>{title}</span>\n      <div\n        className={classNameElement('pull-right')}\n        data-testid=\"ds-card_header-action\"\n      >\n        {action}\n      </div>\n    </div>\n  );\n};\n\nconst cardHeader = {\n  /** card header title */\n  title: PropTypes.string.description('card header title'),\n  /** action */\n  action: PropTypes.node.description('action'),\n};\n\nDSCardHeader.propTypes = cardHeader;\nconst DSCardHeaderWithSchema = describe(DSCardHeader);\nDSCardHeaderWithSchema.propTypes = cardHeader;\n\nexport { DSCardHeader, DSCardHeaderWithSchema };\nexport default DSCardHeader;\n","import React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport DSCardBody from './DSCardBody';\nimport DSCardHeader from './DSCardHeader';\n\nconst DSCard = ({\n  innerRef = undefined,\n  children = null,\n  containerProps = {},\n  ...otherProps\n}) => {\n  const { cssClassName } = convertPropToCssClassName('card');\n\n  return (\n    <div\n      data-testid=\"card\"\n      {...containerProps}\n      ref={innerRef}\n      className={cssClassName}\n      {...otherProps}\n    >\n      {children}\n    </div>\n  );\n};\n\nconst cardProps = {\n  /** inject props to component wrapper */\n  containerProps: PropTypes.object.description(\n    'inject props to component wrapper',\n  ),\n  /**\n   * Get reference for the button\n   */\n  innerRef: PropTypes.string.description('Get reference for the button'),\n  /**\n   * DSCardBody and DSCardHeader\n   */\n  children: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.oneOf([DSCardHeader, DSCardBody]),\n    }),\n  ).description('DSCardBody and DSCardHeader'),\n};\n\nDSCard.propTypes = cardProps;\nconst DSCardWithSchema = describe(DSCard);\nDSCardWithSchema.propTypes = cardProps;\n\nexport { DSCard, DSCardWithSchema };\nexport default DSCard;\n","import React, { useState, useRef } from 'react';\nimport {\n  TreeView,\n  SelectablePluginTree,\n} from '@elliemae/ds-treeview';\nimport DSSeparator from '@elliemae/ds-basic/Separator';\nimport { DSCard, DSCardHeader, DSCardBody } from '@elliemae/ds-basic';\nimport Folder from '@elliemae/ds-icons/Folder';\nimport FilePdf from '@elliemae/ds-icons/FilePdf';\nimport styled from 'styled-components';\nimport { modifiedNodes as nodes } from './nodes';\n\nconst Container = styled.div`\n  display: flex;\n  height: 100%;\n`;\n\nlet items = nodes.slice();\nnodes.forEach((node) => {\n  if (node.children.length > 0) items.push(node.children);\n});\n\nconst Highlighted = () => {\n  const [selectedOnChange, setSelectedOnChange] = useState({});\n  const [selected, setSelected] = useState(false);\n  const [clicked, setClicked] = useState({});\n  const instanceRef = useRef(null);\n\n  const handleSelectedOnChange = (item) => {\n    setSelectedOnChange(\n      items.flat().filter((node) => {\n        return node.id == Object.keys(item);\n      })[0],\n    );\n  };\n\n  return (\n    <Container>\n      <Container>\n        <TreeView\n          data={nodes}\n          fluid\n          instanceRef={instanceRef}\n          groupIcon={<Folder />}\n          itemIcon={<FilePdf />}\n          onItemClick={setClicked}\n          plugins={[SelectablePluginTree]}\n          // showChildrenAmount\n          onSelect={setSelected}\n          width={256}\n          // selection={clicked}\n          onSelectionChange={handleSelectedOnChange}\n        />\n      </Container>\n      <DSSeparator\n        orientation=\"vertical\"\n        style={{ height: `100%` }}\n      />\n      <div style={{ maxWidth: '400px', padding: '1rem' }}>\n        <DSCard>\n          <DSCardHeader title=\"Item from onItemClick prop\" />\n          <DSCardBody>\n            {clicked.id && (\n              <div>\n                <p>ID: {clicked.id} </p>\n                <p>Name: {clicked.name}</p>\n              </div>\n            )}\n          </DSCardBody>\n        </DSCard>\n        <DSSeparator orientation=\"horizontal\" />\n        <DSCard>\n          <DSCardHeader title=\"Item from onSelectionChange prop\" />\n          <DSCardBody>\n            {selectedOnChange.id && (\n              <div>\n                <p>ID: {selectedOnChange.id} </p>\n                <p>Name: {selectedOnChange.name}</p>\n              </div>\n            )}\n          </DSCardBody>\n        </DSCard>\n        <DSSeparator orientation=\"horizontal\" />\n        <DSCard>\n          <DSCardHeader title=\"Item from onSelect prop\" />\n          <DSCardBody>\n            {selected.id && (\n              <div>\n                <p>ID: {selected.id} </p>\n                <p>Name: {selected.name}</p>\n              </div>\n            )}\n          </DSCardBody>\n        </DSCard>\n      </div>\n    </Container>\n  );\n};\n\nexport default Highlighted;\n"],"sourceRoot":""}