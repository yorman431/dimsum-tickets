{"version":3,"sources":["utils/randomTreeNodes.js","components/TreeToolbar.js","components/TreeContainer.js","TreeView/customHooks/useTreeProps.js","TreeView/SingleSelect.js","../../../../src/hooks/useDerivedStateFromProps.js","../../../../src/FocusGroup/useFocusGroupItem.js","../../../src/MoreOptionsVert.js","../../../src/CheckableGroup.js","../../../../src/Menu/MenuContext.js","../../../../src/Menu/VirtualMenuList.js","../../../../../src/Menu/utils/useHeightByAmountOfItems.js","../../../src/Search.js","../../../../../src/form/SearchBox/withSearchable.js","../../../../../src/Menu/MenuItems/SearchableGroup.js","../../../../../src/Menu/MenuItems/Separator.js","../../../src/Checkmark.js","../../../../../src/Menu/MenuItems/CheckboxGroup.js","../../../../../src/Menu/MenuItems/RadioGroup.js","../../../src/ChevronSmallRight.js","../../../../src/Toolbar/decorateToolbarChildren.js","../../../src/Menu/MenuItems/SelectionGroup.js","../../../src/Menu/MenuItems/MenuItemCheckbox.js","../../../src/Menu/MenuItems/menuItemFactory.js","../../../src/Menu/MenuItems/MenuItem.js","../../../src/Menu/MenuItems/MenuItemCheckable.js","../../../src/Menu/MenuItems/MenuItemRadio.js","../../../src/Menu/Menu.js","../../../src/Menu/MenuItems/SubMenu.js","../../../../../src/form/TextBox/DSTextBox.js","../../../../../src/form/SearchBox/SearchBoxImpl.js","../../../../../src/form/SearchBox/DSSearchBox.js","../../../../src/FocusGroup/focusGroupManagerHoc.js","../../../src/DropdownMenuContext.js","../../../src/DropdownMenuProvider.js","../../../src/MenuItemGroupSelectionHOC.js","../../../src/MenuItemClickableHOC.js","../../../src/decoratedMenuItemFactory.js","../../../src/DropdownMenuLoadingIndicator.js","../../../src/DropdownMenuRenderer.js","../../../src/DropdownMenuWrapper.js","../../../../../ds-basic/src/Popper/positions.js","../../../../../ds-basic/src/Popper/interaction.js","../../../src/DSDropdownMenu.js","../../../../src/Toolbar/DSToolbar.js","../../../../src/Icon/DSIconSize.js","../../../../../src/plugins/searchable/SearchableTreePlugin.js"],"names":["randomEntity","parentID","id","uuidv4","isGroup","random","children","randomEntities","undefined","name","type","parent","count","Array","fill","map","randomEntityNoChildren","randomEntitiesNoChildren","randomEntityMoreGroup","randomEntitiesMoreGroups","getOptions","toggleExpandAll","label","onClick","EllipsisMenu","useState","isOpen","setIsOpen","onOptionsClick","containerProps","onClickOutsideMenu","options","triggerComponent","buttonType","icon","size","DSIconSizes","M","TreeToolbar","searchQuery","setSearchQuery","withDepth","clearable","onSearch","value","placeholder","searchOnEnter","margin","orientation","TreeContainer","styled","div","props","offsetHeight","useTreeProps","disableGroups","setDisableGroups","toggleDisableGroups","nodes","onItemClick","item","console","log","SingleSelect","ref","useRef","useEffect","current","actions","expandAll","checked","labelText","onChange","data","fluid","instanceRef","groupIcon","isSingleSelect","itemIcon","plugins","SelectablePluginTree","SearchableTreePlugin","showChildrenAmount","defaultPropUpdateOnChange","prop","defaultShouldUpdate","prevProp","stateValue","isEqual","setStateWithUpdate","onUpdate","setState","state","prevState","isFunction","shouldUpdate","updateOnStateChange","handleSetState","nextProp","useFocusGroupWithState","useContext","register","unregister","otherActions","createIcon","paths","height","width","useCheckableGroup","activeProp","active","multi","onCheck","useDerivedStateFromProps","setActive","handleCheck","target","prevActive","nextActive","addOrRemove","child","cloneElement","runAll","CheckableGroup","PropTypes","func","React","MenuItem","index","style","key","items","itemHeight","amountItemsInWindow","computedListHeight","useHeightByAmountOfItems","amountItems","itemCount","itemData","itemSize","useMemo","itemsLength","calculateHeight","WrappedComponent","Searchable","debounce","this","onKeyUp","e","property","clearOnSearch","query","rest","buttonRef","prevPropValue","nextProps","string","SearchBoxWrapper","aggregatedClasses","NoOptionsWrapper","SearchableGroup","searchTerm","searchTermProp","noOptionsText","focusOnOpen","searchRef","setSearchTerm","visible","setTimeout","filteredChildren","innerRef","showIcon","focusGroupManagerHoc","Li","Title","title","showSeparator","CheckboxGroup","RadioGroup","extraProps","component","className","noop","SelectionGroup","searchable","onSelect","renderedItems","Component","menuItemFactory","decoratedGroupChildren","MenuItemCheckbox","leftAddon","role","itemTypes","separator","menuitem","radio","checkbox","submenu","fallback","defaultItem","itemsObject","parsedType","renderMenuItems","factory","option","ItemComponent","onMouseDown","Content","Addon","empty","fixedItem","renderAddon","addon","addonId","classProps","renderAddons","addons","Wrapper","disabled","disabledAddonInactive","customRenderer","calculateSize","length","as","rightAddon","tabIndex","onKeyDown","noAddon","maxOption","otherProps","menuCxt","useFocusGroupItem","closeMenu","wrapperProps","omit","mergeRefs","MouseEvent","view","bubbles","cancelable","maxWidth","MenuItemCheckable","checkIcon","color","checkableProps","useCheckable","checkAddon","MenuItemRadio","element","MenuComponent","menuComboBox","isChildOfType","DSMenu","MenuTag","animated","ul","onClickOutside","minWidth","responsiveHeight","menuRef","focusFirst","useHiddenTransition","hiddenProps","nextChildren","forceLeftAddon","useOnClickOutside","data-testid","overflowY","maxHeight","window","WrappedMenu","loop","SubMenu","interactionType","subitems","rightAddonType","itemRef","useHiddenController","interaction","onShow","onHide","focusItemByNode","hoverHandlers","onMouseEnter","onMouseLeave","aria-label","leftIcon","handleShowSubItemsWithMouse","variant","BUTTON_VARIANT","DEFAULT","contentComponent","focusKeyBindings","ArrowLeft","onExitFocusGroup","onOpen","opening","placement","showArrow","number","DSTextBox","autoFocus","maxLength","minLength","fluidWidth","hasError","readOnly","min","max","leftComponent","rightComponent","required","SearchBoxImpl","disableButton","onBlur","iconSize","borderColor","borderLeft","bool","withSearchable","DSSearchBox","searchIcon","onFocusPrevGroup","keyBindings","onSelectMenuItem","onOpenMenu","onClose","selection","singleGroupSelection","onSelectChange","isMenuOpen","setMenuOpen","useCallback","openMenu","handleItemClick","group","nextSelection","activeState","selectionItem","toggleInObject","handleCloseOnClick","valueProvider","handlerName","restProps","propHandler","handler","get","defaultConfig","config","Menu","MenuItemClickableHOC","MenuItemGroupSelectionHOC","preventOverflow","customMenu","contentOffset","contentStyle","menuProps","referenceNode","focusOnOpenProp","itemsRenderer","zIndex","loading","setFocusOnOpenMenu","o","String","nestedMax","getMax","optionsRendererd","renderOptions","dropdownBlockName","convertPropToCssClassName","getComponentFromProps","blockName","Position","positions","Interaction","interactions","DSDropdownMenu","ToolbarContainer","alignment","DSToolbar","autoFocusOnMount","containerRef","getContainer","Tab","decorateToolbarChildren","XXS","XS","S","L","XL","XXL"],"mappings":"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","file":"static/js/26.76bf1bcd.chunk.js","sourcesContent":["import { random } from 'lodash';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport const randomEntity = (parentID) => {\n  const id = uuidv4();\n  const isGroup = random(0, 4) < 1;\n  const children = isGroup\n    ? randomEntities(random(0, 5), id)\n    : undefined;\n  return {\n    id,\n    name: `${random(0, 1) > 0 ? 'John Doe' : 'Jon Snow'} ${id}`,\n    type: isGroup ? 'group' : 'single',\n    parent: parentID,\n    children,\n  };\n};\nexport const randomEntities = (count, parentID) =>\n  new Array(count).fill(0).map(() => {\n    return randomEntity(parentID);\n  });\n\n/** With increased chances of getting no children group */\nexport const randomEntityNoChildren = () => {\n  const id = uuidv4();\n  const isGroup = random(0, 4) < 2;\n  let children = isGroup\n    ? randomEntities(random(0, 2), id)\n    : undefined;\n  if (random(0, 4) < 2) children = [];\n  return {\n    id,\n    name: `${random(0, 1) > 0 ? 'John Doe' : 'Jon Snow'} ${id}`,\n    type: isGroup ? 'group' : 'single',\n    children,\n    isGroup,\n  };\n};\n/** With increased chances of getting no children groups */\nexport const randomEntitiesNoChildren = (count) =>\n  new Array(count).fill(0).map(() => {\n    return randomEntityNoChildren();\n  });\n\n/** With increased chances of getting a group */\nexport const randomEntityMoreGroup = () => {\n  const id = uuidv4();\n  const isGroup = random(0, 4) < 3;\n  let children = isGroup\n    ? randomEntities(random(0, 2), id)\n    : undefined;\n  if (random(0, 4) < 2) children = [];\n  return {\n    id,\n    name: `${random(0, 1) > 0 ? 'John Doe' : 'Jon Snow'} ${id}`,\n    type: isGroup ? 'group' : 'single',\n    children,\n    isGroup,\n  };\n};\n/** With increased chances of getting more groups */\nexport const randomEntitiesMoreGroups = (count) =>\n  new Array(count).fill(0).map(() => {\n    return randomEntityMoreGroup();\n  });\n","import React, { useState } from 'react';\nimport SearchBox from '@elliemae/ds-basic/form/SearchBox';\nimport DSToolbar from '@elliemae/ds-basic/Toolbar';\nimport DSSeparator from '@elliemae/ds-basic/Separator';\nimport DSButton from '@elliemae/ds-basic/Button';\n\nimport DSDropdownMenu from '@elliemae/ds-dropdownmenu';\nimport MoreOptionsVert from '@elliemae/ds-icons/MoreOptionsVert';\nimport { DSIconSizes } from '@elliemae/ds-basic/Icon';\n\nconst getOptions = (toggleExpandAll) => [\n  {\n    id: 'toggle-expand-collapse',\n    label: 'Expand All / Collapse All',\n    onClick: toggleExpandAll,\n  },\n];\nconst EllipsisMenu = ({ toggleExpandAll }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const onOptionsClick = () => setIsOpen((isOpen) => !isOpen);\n  return (\n    <DSDropdownMenu\n      containerProps={{ id: 'tree-options-dropdown' }}\n      isOpen={isOpen}\n      onClickOutsideMenu={onOptionsClick}\n      options={getOptions(toggleExpandAll)}\n      triggerComponent={\n        <DSButton\n          buttonType=\"link\"\n          icon={<MoreOptionsVert size={DSIconSizes.M} />}\n          onClick={onOptionsClick}\n        />\n      }\n    />\n  );\n};\n\nexport const TreeToolbar = ({\n  searchQuery,\n  setSearchQuery,\n  toggleExpandAll,\n}) => {\n  return (\n    <>\n      <DSToolbar withDepth={false}>\n        <SearchBox\n          clearable\n          containerProps={{ 'data-testid': 'tree-searchbox' }}\n          onSearch={({ value }) => setSearchQuery(value)}\n          placeholder=\"Search all\"\n          searchOnEnter={false}\n          value={searchQuery}\n        />\n        <EllipsisMenu toggleExpandAll={toggleExpandAll} />\n      </DSToolbar>\n      <DSSeparator\n        margin=\"none\"\n        orientation=\"horizontal\"\n        type=\"non-form\"\n      />\n    </>\n  );\n};\n","import styled from 'styled-components';\n\n/** Fixes tree height issue */\nexport const TreeContainer = styled.div`\n  height: calc(100% - ${(props) => props.offsetHeight || 80}px);\n`;\n","import { useState } from 'react';\n\nexport const useTreeProps = () => {\n  const [disableGroups, setDisableGroups] = useState(false);\n  const toggleDisableGroups = () => setDisableGroups(!disableGroups);\n  return { disableGroups, toggleDisableGroups };\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport {\n  TreeView,\n  SelectablePluginTree,\n  SearchableTreePlugin,\n  // TreeDndPlugin,\n  // TreeToolbarPlugin\n} from '@elliemae/ds-treeview';\nimport Folder from '@elliemae/ds-icons/Folder';\nimport FilePdf from '@elliemae/ds-icons/FilePdf';\nimport DSCheckbox from '@elliemae/ds-basic/form/Checkbox';\nimport { TreeToolbar } from '../components/TreeToolbar';\nimport { TreeContainer } from '../components/TreeContainer';\nimport { randomEntitiesNoChildren } from '../utils/randomTreeNodes';\nimport { useTreeProps } from './customHooks/useTreeProps';\n// import { TooltipTextProvider } from \"@elliemae/ds-basic/TruncatedTooltipText\";\n// import renderToolbar from \"./renderToolbar\";\n\nconst nodes = randomEntitiesNoChildren(1000);\n\nconst onItemClick = (item) => {\n  console.log(111, item);\n};\n\nconst SingleSelect = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const { disableGroups, toggleDisableGroups } = useTreeProps();\n\n  const ref = useRef(null);\n\n  const expandAll = () => {\n    const toggleExpandAll = ref.current.actions.toggleExpandAll;\n    console.log('REF', ref.current);\n    if (toggleExpandAll) toggleExpandAll();\n  };\n\n  useEffect(() => {\n    expandAll();\n  }, []);\n\n  return (\n    <TreeContainer>\n      <DSCheckbox\n        checked={disableGroups}\n        labelText=\"Disable Groups\"\n        onChange={toggleDisableGroups}\n      />\n      <TreeToolbar\n        searchQuery={searchQuery}\n        setSearchQuery={setSearchQuery}\n      />\n      <TreeView\n        data={nodes}\n        fluid\n        instanceRef={ref}\n        groupIcon={<Folder />}\n        isSingleSelect\n        itemIcon={<FilePdf />}\n        disableGroups={disableGroups}\n        // labelRenderer={value => value}\n        // onOrderChange={setData}\n        onItemClick={onItemClick}\n        plugins={[SelectablePluginTree, SearchableTreePlugin]}\n        // renderToolbar={renderToolbar}\n        searchQuery={searchQuery}\n        showChildrenAmount\n        // sortable\n        // width={400}\n      />\n    </TreeContainer>\n  );\n};\n\nexport default SingleSelect;\n","import { useRef, useState } from 'react';\nimport { isEqual, isFunction } from '../utils';\n\nconst defaultPropUpdateOnChange = prop => prop;\n\nfunction defaultShouldUpdate({ prop, prevProp, stateValue }) {\n  return !isEqual(prop, prevProp) && !isEqual(prop, stateValue);\n}\n\nfunction setStateWithUpdate(onUpdate, setState) {\n  return state => {\n    setState(prevState =>\n      onUpdate(isFunction(state) ? state(prevState) : state, prevState),\n    );\n  };\n}\n\nexport default function useDerivedStateFromProp(prop, options = {}) {\n  const {\n    onUpdate = defaultPropUpdateOnChange,\n    shouldUpdate = defaultShouldUpdate,\n    updateOnStateChange = false,\n  } = options;\n\n  const [stateValue, setState] = useState(onUpdate(prop, {}));\n  const handleSetState = updateOnStateChange\n    ? setStateWithUpdate(onUpdate, setState)\n    : setState;\n  const prevProp = useRef(prop);\n\n  if (\n    shouldUpdate({\n      prop,\n      prevProp: prevProp.current,\n      stateValue,\n    })\n  ) {\n    const nextProp = onUpdate(prop, prevProp.current);\n    setState(nextProp);\n  }\n  prevProp.current = prop;\n  return [stateValue, handleSetState];\n}\n","import { useContext, useEffect } from 'react';\nimport FocusGroupContext from './FocusGroupContext';\n\nexport default function useFocusGroupItem(ref = {}, props) {\n  const { register, unregister, ...otherActions } =\n    useContext(FocusGroupContext) || {};\n\n  useEffect(() => {\n    if (ref.current && register) register(ref.current, props);\n    return () => {\n      if (ref.current && unregister) unregister(ref.current);\n    };\n  });\n\n  // if the focus item is not wrapped with the focus provider then return null\n  if (!register) return {};\n  return otherActions;\n}\n\nexport const useFocusGroupWithState = (ref = {}, props) => {\n  const { register, unregister, ...otherActions } =\n    useContext(FocusGroupContext) || {};\n\n  useEffect(() => {\n    if (ref && register) register(ref, props);\n    return () => {\n      if (ref && unregister) unregister(ref);\n    };\n  }, [ref]);\n\n  // if the focus item is not wrapped with the focus provider then return null\n  if (!register) return {};\n  return otherActions;\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.496 12c-.828 0-1.5-.672-1.5-1.5S8.668 9 9.496 9s1.5.672 1.5 1.5-.672 1.5-1.5 1.5zM9.496 7c-.828 0-1.5-.672-1.5-1.5S8.668 4 9.496 4s1.5.672 1.5 1.5-.672 1.5-1.5 1.5zM9.496 17c-.828 0-1.5-.672-1.5-1.5s.672-1.5 1.5-1.5 1.5.672 1.5 1.5-.672 1.5-1.5 1.5z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React, { cloneElement, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addOrRemove, runAll } from '@elliemae/ds-utilities/utils';\nimport useDerivedStateFromProps from '@elliemae/ds-utilities/hooks/useDerivedStateFromProps';\n\nexport function useCheckableGroup({\n  children,\n  active: activeProp,\n  multi,\n  onCheck = () => null,\n}) {\n  const [active, setActive] = useDerivedStateFromProps(activeProp);\n\n  const handleCheck = ({ target: { value } }, item) => {\n    setActive(prevActive => {\n      const nextActive = multi ? addOrRemove(prevActive, value) : value;\n      onCheck(nextActive, item);\n      return nextActive;\n    });\n  };\n\n  return React.Children.map(children, child => {\n    const { props } = child;\n    const checked = Array.isArray(active)\n      ? active.indexOf(props.name) !== -1\n      : active === props.name;\n\n    return cloneElement(child, {\n      ...props,\n      checked,\n      onClick: runAll(handleCheck, props.onClick),\n    });\n  });\n}\n\nfunction CheckableGroup({\n  active = [],\n  multi = false, // checkbox or radio\n  children,\n}) {\n  return useCheckableGroup({ active, multi, children });\n}\n\nCheckableGroup.propTypes = {\n  /* The item (if multi false) or items (if multi true) selected */\n  active: PropTypes.arrayOf(PropTypes.string),\n  /* Whether is multi select or not */\n  multi: PropTypes.bool,\n  /* Handler when a user checks an item */\n  onCheck: PropTypes.func,\n};\n\nexport default CheckableGroup;\n","import React from 'react';\n\nexport default React.createContext();\n","import React from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport useHeightByAmountOfItems from './utils/useHeightByAmountOfItems';\n\nconst MenuItem = ({ data, index, style }) => (\n  <div key={index} style={style}>\n    {data[index]}\n  </div>\n);\n\n// eslint-disable-next-line no-unused-vars\nfunction resolveComputation(items, cb, timeout = 1000) {\n  return () =>\n    new Promise(resolve => {\n      const doResolve = result => {\n        cb(result);\n        resolve(result);\n      };\n      let result = 0;\n      const timer = setTimeout(() => doResolve(result), timeout);\n      items.forEach(option => {\n        result =\n          option.props.label.length > result\n            ? option.props.label.length\n            : result;\n      });\n\n      clearTimeout(timer);\n      doResolve(result);\n    });\n}\n\nexport default function VirtualMenuList({\n  items,\n  itemHeight = 32,\n  amountItemsInWindow = 5,\n  width,\n  height,\n}) {\n  const computedListHeight = useHeightByAmountOfItems({\n    amountItems: amountItemsInWindow,\n    itemHeight,\n    items,\n  });\n\n  return (\n    <List\n      height={height || computedListHeight}\n      itemCount={items.length}\n      itemData={items}\n      itemSize={itemHeight}\n      width={width}\n    >\n      {MenuItem}\n    </List>\n  );\n}\n","import { useMemo } from 'react';\n\nconst calculateHeight = (itemHeight, amountItemsInWindow, itemsLength) => {\n  const realAmountItemsInWindow =\n    itemsLength < amountItemsInWindow ? itemsLength : amountItemsInWindow;\n  return itemHeight * realAmountItemsInWindow;\n};\n\nexport default function useHeightByAmountOfItems({\n  itemHeight,\n  amountItems,\n  items,\n}) {\n  const calculatedHeight = useMemo(\n    () => calculateHeight(itemHeight, amountItems, items.length),\n    [amountItems, items],\n  );\n\n  return calculatedHeight;\n}\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M18.869 19.162l-5.943-6.484c1.339-1.401 2.075-3.233 2.075-5.178 0-2.003-.78-3.887-2.197-5.303S9.504 0 7.501 0 3.614.78 2.198 2.197.001 5.497.001 7.5s.78 3.887 2.197 5.303S5.498 15 7.501 15c1.726 0 3.362-.579 4.688-1.645l5.943 6.483a.497.497 0 0 0 .369.162.4997.4997 0 0 0 .369-.837l-.001-.001zM1 7.5C1 3.916 3.916 1 7.5 1S14 3.916 14 7.5 11.084 14 7.5 14 1 11.084 1 7.5z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce } from '@elliemae/ds-utilities/utils';\n\nconst withSearchable = (WrappedComponent) => {\n  class Searchable extends Component {\n    debouncedSearch = debounce(this.handleSearch, 200);\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: props.value,\n      };\n      this.handleSearch = this.handleSearch.bind(this);\n      this.handleKeyUp = this.handleKeyUp.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.buttonRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(nextProps, { prevPropValue }) {\n      if (nextProps.value !== prevPropValue) {\n        return {\n          value: nextProps.value,\n          prevPropValue: nextProps.value,\n        };\n      }\n      return null;\n    }\n\n    handleKeyUp(e) {\n      const { onKeyUp, searchOnEnter } = this.props;\n      const { key } = e;\n      if (searchOnEnter && key === 'Enter') {\n        this.handleSearch();\n      }\n      onKeyUp(e);\n    }\n\n    handleSearch() {\n      const { onSearch, property, clearOnSearch, searchOnEnter } = this.props;\n      const { value } = this.state;\n\n      if (clearOnSearch) this.setState({ value: '' });\n      if (searchOnEnter && !value) return;\n      onSearch({\n        query: { [property]: value },\n        property,\n        value,\n      });\n    }\n\n    handleChange({ target }) {\n      const { value } = target;\n      const { searchOnEnter, onChange } = this.props;\n      onChange(value);\n      this.setState({ value }, () => {\n        if (!searchOnEnter) this.debouncedSearch();\n      });\n    }\n\n    render() {\n      const { value } = this.state;\n      const { containerProps, ...rest } = this.props;\n\n      return (\n        <WrappedComponent\n          {...rest}\n          buttonRef={this.buttonRef}\n          containerProps={containerProps}\n          onChange={this.handleChange}\n          onKeyUp={this.handleKeyUp}\n          onSearch={this.handleSearch}\n          value={value}\n        />\n      );\n    }\n  }\n\n  Searchable.defaultProps = {\n    onChange: () => null,\n    onSearch: () => null,\n    onKeyUp: () => null,\n    property: 'all',\n    searchOnEnter: true,\n    clearOnSearch: false,\n    containerProps: {},\n  };\n\n  Searchable.propTypes = {\n    containerProps: PropTypes.shape({}),\n    onChange: PropTypes.func,\n    onSearch: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    property: PropTypes.string,\n    searchOnEnter: PropTypes.bool,\n    clearOnSearch: PropTypes.bool,\n    value: PropTypes.string,\n  };\n\n  return Searchable;\n};\n\nexport default withSearchable;\n","import React, { useEffect, useMemo, useState, useRef, useContext } from 'react';\nimport DSSearchBox from '@elliemae/ds-basic/form/SearchBox';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport { focusGroupManagerHoc } from '@elliemae/ds-shared/FocusGroup';\nimport PropTypes from 'prop-types';\nimport VirtualMenuList from '../VirtualMenuList';\nimport MenuContext from '../MenuContext';\n\nconst SearchBoxWrapper = aggregatedClasses('div')(\n  'menu-search-group',\n  'search-wrapper',\n);\nconst NoOptionsWrapper = aggregatedClasses('div')(\n  'menu-search-group',\n  'no-options',\n);\n\nfunction SearchableGroup({\n  children,\n  amountItemsInWindow = 5,\n  searchTerm: searchTermProp = '',\n  noOptionsText = 'No options',\n  height,\n  width,\n  focusOnOpen = false,\n}) {\n  const searchRef = useRef(null);\n  const [searchTerm, setSearchTerm] = useState(searchTermProp);\n\n  useEffect(() => {\n    if (searchRef.current) searchRef.current.focus();\n  }, []);\n\n  const { visible } = useContext(MenuContext) || {};\n\n  useEffect(() => {\n    if (focusOnOpen && visible) {\n      setTimeout(() => {\n        if (searchRef.current) searchRef.current.focus();\n      }, 0);\n    }\n  }, [focusOnOpen, visible]);\n\n  const filteredChildren = useMemo(\n    () =>\n      children.filter(\n        child =>\n          !searchTerm ||\n          child.props.label.toLowerCase().startsWith(searchTerm.toLowerCase()),\n      ),\n    [children, searchTerm],\n  );\n\n  return (\n    <>\n      <SearchBoxWrapper>\n        <DSSearchBox\n          innerRef={searchRef}\n          onSearch={({ value }) => setSearchTerm(value)}\n          searchOnEnter={false}\n          showIcon={false}\n          value={searchTerm}\n        />\n      </SearchBoxWrapper>\n      {!filteredChildren.length && (\n        <NoOptionsWrapper>{noOptionsText}</NoOptionsWrapper>\n      )}\n      <VirtualMenuList\n        amountItemsInWindow={amountItemsInWindow}\n        height={height}\n        items={filteredChildren}\n        width={width}\n      />\n    </>\n  );\n}\n\nSearchableGroup.propTypes = {\n  /** The amount of items that are going to be rendered in the group */\n  amountItemsInWindow: PropTypes.number,\n  /** A search term */\n  searchTerm: PropTypes.string,\n  /** Text to show when there's no options to show */\n  noOptionsText: PropTypes.string,\n};\n\nexport default focusGroupManagerHoc(SearchableGroup);\n","import React from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport DSSeparator from '@elliemae/ds-basic/Separator';\nimport styled from 'styled-components';\n\nconst blockName = 'menu-separator';\nconst Li = styled.li`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n`;\n\nconst Title = aggregatedClasses('h5')(blockName, 'title');\nconst MenuSeparator = ({ title, showSeparator = true }) => (\n  <Li>\n    {showSeparator && <DSSeparator />}\n    {title && <Title>{title}</Title>}\n  </Li>\n);\n\nexport default MenuSeparator;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: ['M7.5 12.875L4.625 10l-.875.875 3.75 3.75 8.75-8.75L15.375 5z'],\n  height: 20,\n  width: 20,\n});\n","import React from 'react';\nimport CheckableGroup from '@elliemae/ds-shared/CheckableGroup';\n\nfunction CheckboxGroup(props) {\n  return <CheckableGroup {...props} multi />;\n}\n\nCheckboxGroup.propTypes = {};\n\nexport default CheckboxGroup;\n","import React from 'react';\nimport CheckableGroup from '@elliemae/ds-shared/CheckableGroup';\n\nfunction RadioGroup(props) {\n  return <CheckableGroup {...props} multi={false} />;\n}\n\nRadioGroup.propTypes = {};\n\nexport default RadioGroup;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M12 10.5a.503.503 0 0 0-.109-.313l-4-5a.5013.5013 0 0 0-.703-.078c-.214.173-.25.488-.078.703l3.75 4.688-3.75 4.688c-.172.218-.136.531.078.703.216.172.53.138.703-.078l4-5A.501.501 0 0 0 12 10.5z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React, { cloneElement } from 'react';\n\nexport default (children, extraProps = {}) =>\n  React.Children.map(\n    children,\n    component =>\n      component\n        ? cloneElement(component, {\n            ...extraProps,\n            ...component.props,\n            className: `${component.props.className} toolbar-item`,\n          })\n        : component,\n    null,\n  );\n","import React, { useMemo } from 'react';\nimport { useCheckableGroup } from '@elliemae/ds-shared/CheckableGroup';\nimport SearchableGroup from './SearchableGroup';\nimport { menuItemFactory } from './menuItemFactory';\nimport VirtualMenuList from '../VirtualMenuList';\n\nconst noop = () => null;\n\nfunction SelectionGroup({\n  multi = false,\n  searchable = false,\n  focusOnOpen = false,\n  onSelect = noop,\n  children,\n  items = undefined,\n  active = multi ? [] : '',\n  width,\n  height,\n}) {\n  const renderedItems = useMemo(\n    () =>\n      items &&\n      items.map(item => {\n        const Component = menuItemFactory(multi ? 'checkbox' : 'radio');\n        return (\n          <Component\n            {...item}\n            key={item.name || item.id || item.key}\n            item={item}\n            name={item.id || item.name}\n          />\n        );\n      }),\n    [items],\n  );\n  const decoratedGroupChildren = useCheckableGroup({\n    children: renderedItems || children,\n    multi,\n    active,\n    onCheck: onSelect,\n  });\n\n  if (searchable) {\n    return (\n      <SearchableGroup\n        focusOnOpen={focusOnOpen}\n        height={height}\n        items={items}\n        width={width}\n      >\n        {decoratedGroupChildren}\n      </SearchableGroup>\n    );\n  }\n  return (\n    <VirtualMenuList\n      height={height}\n      items={decoratedGroupChildren}\n      width={width}\n    />\n  );\n}\n\nexport default SelectionGroup;\n","import React from 'react';\nimport DSCheckbox from '@elliemae/ds-basic/form/Checkbox';\nimport MenuItemCheckable from './MenuItemCheckable';\n\nfunction MenuItemCheckbox({ checked, ...rest }) {\n  return (\n    <MenuItemCheckable\n      {...rest}\n      leftAddon={<DSCheckbox checked={checked} />}\n      role=\"menuitemcheckbox\"\n    />\n  );\n}\n\nexport default MenuItemCheckbox;\n","/* eslint-disable import/no-cycle */\nimport React from 'react';\nimport { isFunction } from '@elliemae/ds-utilities/utils';\n\nimport Separator from './Separator';\nimport MenuItem from './MenuItem';\nimport SubMenu from './SubMenu';\nimport SelectionGroup from './SelectionGroup';\nimport MenuItemCheckbox from './MenuItemCheckbox';\nimport MenuItemRadio from './MenuItemRadio';\n\nconst itemTypes = {\n  separator: Separator,\n  menuitem: MenuItem,\n  radio: MenuItemRadio,\n  checkbox: MenuItemCheckbox,\n  submenu: SubMenu,\n  'selection-group': SelectionGroup,\n};\n\nconst fallback = {\n  SelectionGroup: 'selection-group',\n};\n\nexport function menuItemFactory(\n  type = '',\n  items,\n  defaultItem = itemTypes.menuitem,\n) {\n  const itemsObject = items || itemTypes;\n  const parsedType = fallback[type] || type.toLowerCase();\n  return itemsObject[parsedType] || defaultItem;\n}\n\nexport function renderMenuItems(options, factory = menuItemFactory) {\n  return options.map((option, index) => {\n    if (isFunction(option.renderer)) {\n      return option.renderer({\n        key: option.id,\n        item: option,\n      });\n    }\n    const ItemComponent = factory(option.type);\n    const children =\n      option.subItems && renderMenuItems(option.subItems, factory);\n    return (\n      <ItemComponent\n        {...option}\n        key={option.id || index}\n        item={option}\n        onClick={null}\n        onMouseDown={option.onClick}\n        // onClick callback called in onMouseDown due to events order issue\n      >\n        {children}\n      </ItemComponent>\n    );\n  });\n}\n","/* eslint-disable import/no-cycle */\nimport React, { useRef, useMemo, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { omit } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport { mergeRefs } from '@elliemae/ds-utilities/system';\nimport { useFocusGroupItem } from '@elliemae/ds-shared/FocusGroup';\nimport { runAll } from '@elliemae/ds-utilities/utils';\nimport DSTruncatedTooltipText from '@elliemae/ds-basic/TruncatedTooltipText';\nimport { renderMenuItems } from './menuItemFactory';\nimport SubMenu from './SubMenu';\nimport MenuContext from '../MenuContext';\n\nconst noop = () => null;\n\nconst blockName = 'menu-item';\n\nconst Content = aggregatedClasses('div')(blockName, 'content');\nconst Addon = aggregatedClasses('div')(\n  blockName,\n  'addon',\n  ({ empty, fixedItem }) => ({ empty, fixedItem }),\n);\n\nconst renderAddon = (addon, fixedItem, addonId) => (\n  <Addon key={addonId} classProps={{ fixedItem }}>\n    {addon}\n  </Addon>\n);\n\nconst renderAddons = (addons, fixedItem) =>\n  Array.isArray(addons)\n    ? addons.map(renderAddon)\n    : renderAddon(addons, fixedItem);\n\nconst Wrapper = aggregatedClasses('li')(\n  blockName,\n  null,\n  ({ disabled, disabledAddonInactive, customRenderer, fixedItem, type }) => ({\n    disabled,\n    disabledAddonInactive,\n    customRenderer,\n    fixedItem,\n    [`menu-type-${type}`]: type,\n  }),\n);\nconst calculateSize = (length = 0) => {\n  if (length > 45) return 45 * 7;\n  return length * 7;\n};\nfunction MenuItem(props) {\n  const {\n    innerRef,\n    as = 'li',\n    role = 'menuitem',\n    leftAddon = null,\n    rightAddon = undefined,\n    disabledAddonInactive = undefined,\n    label = undefined,\n    children,\n    tabIndex = -1,\n    onKeyDown = noop,\n    fixedItem = false,\n    noAddon,\n    disabled = false,\n    customRenderer,\n    maxOption,\n    closeMenu,\n    style,\n    ...otherProps\n  } = props;\n\n  const menuCxt = useContext(MenuContext);\n  const ref = useRef(null);\n  useFocusGroupItem(ref);\n  if (otherProps.subItems) {\n    return (\n      <SubMenu {...props} closeMenu={menuCxt.closeMenu}>\n        {renderMenuItems(otherProps.subItems)}\n      </SubMenu>\n    );\n  }\n\n  const wrapperProps = useMemo(() => omit(otherProps, ['icon']), [otherProps]);\n\n  const onClick = (...args) => {\n    if (wrapperProps.onClick) wrapperProps.onClick(...args);\n    if (wrapperProps.closeOnClick && menuCxt.closeMenu) {\n      menuCxt.closeMenu(...args);\n    }\n  };\n\n  return (\n    <Wrapper\n      as={as}\n      classProps={{\n        disabled,\n        disabledAddonInactive,\n        customRenderer,\n        fixedItem,\n        type: otherProps.type,\n      }}\n      id={otherProps.id}\n      innerRef={\n        otherProps.type !== 'disabled' ? mergeRefs(innerRef, ref) : innerRef\n      }\n      onKeyDown={\n        !fixedItem &&\n        runAll(e => {\n          if (e.key === ' ' || e.key === 'Enter') {\n            e.preventDefault();\n            e.target.dispatchEvent(\n              new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false,\n              }),\n            );\n          }\n        }, onKeyDown)\n      }\n      role={role}\n      style={style}\n      tabIndex={tabIndex}\n      {...wrapperProps}\n      onClick={onClick}\n    >\n      {!noAddon && renderAddons(leftAddon, fixedItem)}\n      {label && (\n        <Content\n          style={\n            maxOption > 0\n              ? {\n                  width: `${calculateSize(maxOption)}px`,\n                  maxWidth: `${calculateSize(maxOption)}px`,\n                }\n              : undefined\n          }\n        >\n          <DSTruncatedTooltipText value={label} />\n        </Content>\n      )}\n      {customRenderer}\n      {rightAddon && renderAddons(rightAddon)}\n      {children}\n    </Wrapper>\n  );\n}\n\nMenuItem.propTypes = {\n  /** Renders the MenuItem with a specific html element */\n  as: PropTypes.element,\n  /** Renders the passed element to the left */\n  leftAddon: PropTypes.element,\n  /** Renders the passed element to the right */\n  rightAddon: PropTypes.element,\n  /** Label for the menu item */\n  label: PropTypes.string,\n};\n\nexport default MenuItem;\n","/* eslint-disable import/no-cycle */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Checkmark from '@elliemae/ds-icons/Checkmark';\nimport { runAll } from '@elliemae/ds-utilities/utils';\nimport MenuItem from './MenuItem';\n\n// TODO: where to move this?\nfunction useCheckable({ checked }) {\n  return {\n    checked,\n    'aria-checked': checked,\n  };\n}\n\n/**\n * Reuses the same props as the MenuItem\n *\n * @param root0\n * @param root0.role\n * @param root0.checked\n * @param root0.name\n * @param root0.checkIcon\n * @param root0.children\n * @param root0.leftAddon\n * @param root0.item\n */\nfunction MenuItemCheckable({\n  role = 'menuitemcheckbox',\n  checked = false,\n  name = '',\n  checkIcon = <Checkmark color={['brand-primary', 600]} />,\n  children,\n  leftAddon,\n  item = undefined,\n  ...otherProps\n}) {\n  const checkableProps = useCheckable({ checked, name });\n  const handleClick = () =>\n    runAll(otherProps.onClick, checkableProps.onClick)(\n      { target: { value: name, checked } },\n      item,\n    );\n\n  const checkAddon =\n    leftAddon ||\n    (checkableProps.checked ? (\n      <div className=\"checkable-mark\">{checkIcon}</div>\n    ) : (\n      <div />\n    ));\n  return (\n    <MenuItem\n      {...item}\n      {...otherProps}\n      {...checkableProps}\n      customRenderer={\n        item && item.customRenderer ? item.customRenderer : () => {}\n      }\n      items={otherProps.subItems}\n      leftAddon={checkAddon}\n      onClick={handleClick}\n      role={role}\n    />\n  );\n}\n\nMenuItemCheckable.propTypes = {\n  /** Whether the item is checked or not */\n  checked: PropTypes.bool,\n  /** A custom item when the item is checked */\n  checkIcon: PropTypes.element,\n};\nexport default MenuItemCheckable;\n","import React from 'react';\nimport MenuItemCheckable from './MenuItemCheckable';\n\nfunction MenuItemRadio(props) {\n  return <MenuItemCheckable {...props} role=\"menuitemradio\" />;\n}\n\nMenuItemRadio.propTypes = {\n  ...MenuItemCheckable.propTypes,\n};\n\nexport default MenuItemRadio;\n","/* eslint-disable max-lines */\n/* eslint-disable react/prop-types */\n/* eslint-disable import/no-cycle */\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { omit } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport { animated } from 'react-spring/web.cjs';\nimport { useHiddenTransition } from '@elliemae/ds-basic/Hidden';\nimport { useOnClickOutside } from '@elliemae/ds-utilities/hooks';\nimport { mergeRefs } from '@elliemae/ds-utilities/system';\nimport {\n  focusGroupManagerHoc,\n  FocusGroupContext,\n} from '@elliemae/ds-shared/FocusGroup';\nimport MenuItemRadio from './MenuItems/MenuItemRadio';\nimport MenuItemCheckbox from './MenuItems/MenuItemCheckbox';\nimport CheckboxGroup from './MenuItems/CheckboxGroup';\nimport RadioGroup from './MenuItems/RadioGroup';\nimport Separator from './MenuItems/Separator';\nimport MenuItem from './MenuItems/MenuItem';\nimport SubMenu from './MenuItems/SubMenu';\nimport SearchableGroup from './MenuItems/SearchableGroup';\nimport SelectionGroup from './MenuItems/SelectionGroup';\nimport { renderMenuItems, menuItemFactory } from './MenuItems/menuItemFactory';\nimport MenuContext from './MenuContext';\n\nconst RESPONSIVE_HEIHGT_MARGIN = 120;\n\nconst blockName = 'menu';\n\nconst noop = () => {};\n\nconst MenuComponent = aggregatedClasses('div')(\n  blockName,\n  '',\n  ({ menuComboBox, type }) => ({\n    'menu-combo-box': menuComboBox,\n    [`type-${type}`]: type,\n  }),\n);\n\n/**\n * todo: -- IDEA -- each menu could have an overlay based on an overlay stack context so we can\n * capture the context of the clicks on very nested components\n */\n\nconst isChildOfType = (child, type) => child.type.name === type;\n\nfunction DSMenu({\n  containerProps = {},\n  innerRef,\n  as: MenuTag = animated.ul,\n  children = undefined,\n  onClickOutside = noop,\n  // handlers from hidden\n  visible = undefined,\n  focusOnOpen = false,\n  maxOption = 0,\n  style = {},\n  minWidth = undefined,\n  maxWidth = undefined,\n  closeMenu,\n  responsiveHeight = false,\n  ...otherProps\n}) {\n  const menuRef = useRef(null);\n  const { focusFirst } = useContext(FocusGroupContext);\n  const { destroyed, ...hiddenProps } = useHiddenTransition({ visible, style });\n\n  // force no addon to the children if the menu doesn't have any item with leftAddon like SelectionGroup\n  const nextChildren = useMemo(() => {\n    const forceLeftAddon = React.Children.toArray(children).some(\n      (child) =>\n        isChildOfType(child, 'SelectionGroup') ||\n        isChildOfType(child, 'MenuItemCheckbox') ||\n        isChildOfType(child, 'MenuItemRadio') ||\n        child.props.leftAddon,\n    );\n\n    return React.Children.map(\n      children,\n      (child) =>\n        child &&\n        React.cloneElement(child, {\n          ...child.props,\n          noAddon: !forceLeftAddon ? true : undefined,\n          maxOption,\n          closeMenu,\n        }),\n    );\n  }, [children]);\n\n  useOnClickOutside(menuRef, onClickOutside);\n\n  useEffect(() => {\n    if (focusOnOpen && visible) {\n      setTimeout(() => {\n        focusFirst();\n      }, 0);\n    }\n  }, [visible, focusOnOpen]);\n  // todo: find out a better approach to this\n  return !hiddenProps.destroyed ? (\n    <MenuContext.Provider value={{ visible, closeMenu }}>\n      <MenuComponent\n        data-testid=\"em-ds-menu\"\n        {...containerProps}\n        as={MenuTag}\n        classProps={{ ...(otherProps.classProps || {}), type: otherProps.type }}\n        innerRef={mergeRefs(innerRef, menuRef)}\n        role=\"menu\"\n        {...omit(otherProps, ['scheduleUpdate'])}\n        {...hiddenProps}\n      >\n        {/* eslint-disable indent */}\n        <div\n          className=\"menu-component-internal-wrapper\"\n          style={{\n            ...style,\n            minWidth,\n            maxWidth,\n            ...(responsiveHeight\n              ? {\n                  overflowY: 'scroll',\n                  maxHeight: responsiveHeight\n                    ? `${window.innerHeight - RESPONSIVE_HEIHGT_MARGIN}px`\n                    : undefined,\n                }\n              : {}),\n          }}\n        >\n          {/* eslint-enable indent */}\n          {nextChildren}\n        </div>\n      </MenuComponent>\n    </MenuContext.Provider>\n  ) : null;\n}\n\nconst WrappedMenu = focusGroupManagerHoc(DSMenu, { loop: true });\n\nDSMenu.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /** Renders the menu with a specific html element */\n  as: PropTypes.element,\n  /** Handler when a user clicks outside the menu */\n  onClickOutside: PropTypes.func,\n  /** Whether the menu is visible or not */\n  visible: PropTypes.bool,\n  /** When set to true, it's going to focus the first item */\n  focusOnOpen: PropTypes.bool,\n  /** Customize menu minWidth. Can be undefined or 'number' */\n  minWidth: PropTypes.number,\n  /** Customize menu maxWidth. Can be undefined or 'number' */\n  maxWidth: PropTypes.number,\n};\n\n// todo: add a handler to get this kind of exports for documentation\nWrappedMenu.Item = MenuItem;\nWrappedMenu.ItemCheckbox = MenuItemCheckbox;\nWrappedMenu.ItemRadio = MenuItemRadio;\nWrappedMenu.SubMenu = SubMenu;\nWrappedMenu.Separator = Separator;\nWrappedMenu.CheckboxGroup = CheckboxGroup;\nWrappedMenu.RadioGroup = RadioGroup;\nWrappedMenu.SearchableGroup = SearchableGroup;\nWrappedMenu.SelectionGroup = SelectionGroup;\n\nexport { menuItemFactory, renderMenuItems };\nexport default WrappedMenu;\n","/* eslint-disable import/no-cycle */\nimport React, { useRef } from 'react';\nimport DSButton, { BUTTON_VARIANT } from '@elliemae/ds-basic/Button';\nimport ChevronRight from '@elliemae/ds-icons/ChevronSmallRight';\nimport VerticalElipsis from '@elliemae/ds-icons/MoreOptionsVert';\nimport { useFocusGroupItem } from '@elliemae/ds-shared/FocusGroup';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport { useHiddenController } from '@elliemae/ds-basic/Hidden';\nimport Menu from '../Menu';\nimport MenuItem from './MenuItem';\n\nfunction SubMenu({\n  noAddon,\n  leftAddon = undefined,\n  label = undefined,\n  interactionType = 'hover',\n  children: subitems,\n  rightAddonType,\n  disabledAddonInactive,\n  checkableProps = {},\n  customRenderer,\n  onClick,\n  closeMenu,\n  id,\n}) {\n  const itemRef = useRef(null);\n  const focusOnOpen = useRef(false);\n  const { visible = false, onShow, onHide } = useHiddenController(undefined, {\n    interaction: 'click',\n  });\n\n  const { focusItemByNode } = useFocusGroupItem();\n  // todo: create a menu state to handle all related menu things\n  const handleShowSubItemsWithMouse = e => {\n    e.stopPropagation();\n    onShow();\n    focusOnOpen.current = true;\n  };\n  const handleShowWithMouse = e => {\n    if (onClick) onClick(e);\n  };\n  const handleShowWithMouseHover = () => {\n    onShow();\n    focusOnOpen.current = false;\n  };\n\n  const handleShowWithKeyboard = () => {\n    onShow();\n    focusOnOpen.current = true;\n  };\n\n  const hoverHandlers =\n    interactionType === 'hover'\n      ? {\n          onMouseEnter: handleShowWithMouseHover,\n          onMouseLeave: onHide,\n        }\n      : {\n          onClick: handleShowWithMouse,\n        };\n\n  const rightAddon =\n    rightAddonType === 'elipsis' ? (\n      <DSButton\n        aria-label=\"vertical-elipsis\"\n        buttonType=\"text\"\n        leftIcon={\n          <VerticalElipsis\n            className=\"submenu-arrow\"\n            color={['brand-primary', 600]}\n            size=\"s\"\n          />\n        }\n        onClick={e => handleShowSubItemsWithMouse(e)}\n        size=\"m\"\n        variant={BUTTON_VARIANT.DEFAULT}\n      />\n    ) : (\n      <ChevronRight\n        className=\"submenu-arrow\"\n        color={['brand-primary', 600]}\n        size=\"sm\"\n      />\n    );\n\n  return (\n    <>\n      <DSPopper\n        contentComponent={\n          <Menu\n            focusKeyBindings={{\n              ArrowLeft: [() => focusItemByNode(itemRef.current), 'exit'],\n            }}\n            focusOnOpen={focusOnOpen.current}\n            onExitFocusGroup={onHide}\n            {...hoverHandlers}\n            closeMenu={closeMenu}\n            visible={visible}\n          >\n            {subitems}\n          </Menu>\n        }\n        interactionType={interactionType}\n        isOpen={visible}\n        onOpen={opening => (opening ? onShow() : onHide())}\n        placement=\"right-start\"\n        showArrow={false}\n        triggerComponent={\n          <MenuItem\n            customRenderer={customRenderer}\n            disabledAddonInactive={disabledAddonInactive}\n            id={id}\n            innerRef={itemRef}\n            label={label}\n            leftAddon={leftAddon}\n            noAddon={noAddon}\n            {...hoverHandlers}\n            onKeyDown={e => {\n              if (\n                e.key === 'ArrowRight' ||\n                e.key === 'Enter' ||\n                e.keyCode === 32\n              ) {\n                handleShowWithKeyboard();\n              }\n            }}\n            rightAddon={rightAddon}\n            {...checkableProps}\n          />\n        }\n      />\n    </>\n  );\n}\n\nexport default SubMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport DSInput from '@elliemae/ds-basic/form/Input';\n\nconst DSTextBox = ({\n  containerProps = {},\n  autoFocus = false,\n  disabled = false,\n  maxLength = 255,\n  minLength = 0,\n  fluidWidth = false,\n  placeholder,\n  value = '',\n  hasError = false,\n  readOnly = false,\n  innerRef = null,\n  type = 'text',\n  min = undefined,\n  max = undefined,\n  clearable = false,\n  leftComponent = null,\n  rightComponent = null,\n  required = false,\n  variant,\n  ...otherProps\n}) => (\n  <DSInput\n    {...otherProps}\n    aria-label={otherProps['aria-label'] || 'Text Box'}\n    autoFocus={autoFocus}\n    clearable={clearable}\n    containerProps={containerProps}\n    disabled={disabled}\n    fluidWidth={fluidWidth}\n    hasError={hasError}\n    innerRef={innerRef}\n    leftComponent={leftComponent}\n    max={max}\n    maxLength={maxLength}\n    min={min}\n    minLength={minLength}\n    placeholder={placeholder}\n    readOnly={readOnly}\n    required={required}\n    rightComponent={rightComponent}\n    role=\"textbox\"\n    type={type}\n    value={value}\n    variant={variant}\n  />\n);\n\nDSTextBox.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /**\n   * Whether the text box uses auto focus or not\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * Whether the text box is disabled or not\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Max length for the text box\n   */\n  maxLength: PropTypes.number,\n  /**\n   * Min length for the text box\n   */\n  minLength: PropTypes.number,\n  /**\n   * Make the content of the text box fit the container or not\n   */\n  fluidWidth: PropTypes.bool,\n  /**\n   * Placeholder for the text box\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Default value once the component is initialized\n   */\n  value: PropTypes.string,\n  /**\n   * Whether the text box has error or not\n   */\n  hasError: PropTypes.bool,\n  /**\n   * Whether the text box is read only or not\n   */\n  readOnly: PropTypes.bool,\n  min: PropTypes.number,\n  max: PropTypes.number,\n  /**\n   * Whether the text box is clearable or not\n   */\n  clearable: PropTypes.bool,\n  /**\n   * Component to be added at the left side of the text box\n   */\n  leftComponent: PropTypes.element,\n  /**\n   * Component to be added at the right side of the text box\n   */\n  rightComponent: PropTypes.element,\n  /**\n   * Whether the text box is required or not\n   */\n  required: PropTypes.bool,\n  /**\n   * [\n   *  'variant-default',\n   *  'variant-focus',\n   *  'variant-active',\n   *  'variant-disabled',\n   * ]\n   */\n  variant: PropTypes.string,\n};\n\nexport default DSTextBox;\n","/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Search from '@elliemae/ds-icons/Search';\nimport DSButton from '@elliemae/ds-basic/Button';\nimport DSTextBox from '@elliemae/ds-basic/form/TextBox';\nimport withSearchable from './withSearchable';\n\nconst SearchBoxImpl = ({\n  containerProps,\n  placeholder,\n  className,\n  disabled,\n  disableButton,\n  innerRef,\n  showIcon,\n  style,\n  onChange,\n  onKeyUp,\n  onSearch,\n  onBlur,\n  readOnly,\n  value,\n  clearable,\n}) => (\n  <DSTextBox\n    className={className}\n    clearable={clearable}\n    containerProps={containerProps}\n    disabled={disabled}\n    innerRef={innerRef}\n    onChange={onChange}\n    onKeyUp={onKeyUp}\n    onBlur={onBlur}\n    placeholder={placeholder}\n    readOnly={readOnly}\n    rightComponent={\n      showIcon && (\n        <DSButton\n          disabled={disabled || disableButton}\n          buttonType=\"text\"\n          icon={<Search />}\n          iconSize=\"s\"\n          onClick={onSearch}\n          type=\"secondary\"\n          style={{ borderColor: '#A9B1BE', borderLeft: 'none' }}\n        />\n      )\n    }\n    style={style}\n    value={value}\n  />\n);\n\nSearchBoxImpl.propTypes = {\n  containerProps: PropTypes.shape({}),\n  className: PropTypes.string,\n  innerRef: PropTypes.any,\n  style: PropTypes.objectOf(PropTypes.string),\n  placeholder: PropTypes.string,\n  onKeyUp: PropTypes.func,\n  onSearch: PropTypes.func,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n  ]),\n  showIcon: PropTypes.bool,\n  disabled: PropTypes.bool,\n  disableButton: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  clearable: PropTypes.bool,\n};\n\nexport default withSearchable(SearchBoxImpl);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchBoxImpl from './SearchBoxImpl';\n\nconst DSSearchBox = ({\n  containerProps = {},\n  innerRef = undefined,\n  className = '',\n  disabled = false,\n  disableButton = false,\n  searchIcon = 'search',\n  style = {},\n  property = 'all',\n  placeholder = 'Search all', // todo: i18nize this\n  searchOnEnter = true,\n  clearOnSearch = false,\n  onKeyUp = () => null,\n  onSearch = () => null,\n  onChange = () => null,\n  onBlur = () => null,\n  readOnly = false,\n  value = undefined,\n  showIcon = true,\n}) => (\n  <SearchBoxImpl\n    className={className}\n    clearOnSearch={clearOnSearch}\n    containerProps={containerProps}\n    disabled={disabled}\n    disableButton={disableButton}\n    innerRef={innerRef}\n    onKeyUp={onKeyUp}\n    onSearch={onSearch}\n    onChange={onChange}\n    onBlur={onBlur}\n    placeholder={placeholder}\n    property={property}\n    readOnly={readOnly}\n    searchIcon={searchIcon}\n    searchOnEnter={searchOnEnter}\n    showIcon={showIcon}\n    style={style}\n    value={value}\n  />\n);\n\nDSSearchBox.propTypes = {\n  containerProps: PropTypes.shape({}),\n  className: PropTypes.string,\n  innerRef: PropTypes.any,\n  /**\n   * Icon to use in the search button\n   */\n  searchIcon: PropTypes.string,\n  /**\n   * Set style to the search box\n   */\n  style: PropTypes.objectOf(PropTypes.string),\n  property: PropTypes.string,\n  /**\n   * Placeholder for the search box\n   */\n  placeholder: PropTypes.string,\n  /**\n   * Whether to trigger the search once the enter is pressed\n   */\n  searchOnEnter: PropTypes.bool,\n  /**\n   * Whether to clear the input on search\n   */\n  clearOnSearch: PropTypes.bool,\n  /**\n   * Allows a function that is triggered once in the search box a keyboard key is released\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * Allows a function that is triggered once the search is clicked\n   */\n  onSearch: PropTypes.func,\n  /**\n   * Allows a function that is triggered on change\n   */\n  onChange: PropTypes.func,\n  /**\n   * Function that is triggered on blur\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Selected default active value\n   */\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n  ]),\n  /**\n   * Whether to show an icon or not\n   */\n  showIcon: PropTypes.bool,\n  /**\n   * Disables the search input and button\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Disables the search button\n   */\n  disableButton: PropTypes.bool,\n  readOnly: PropTypes.bool,\n};\n\nexport default DSSearchBox;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FocusGroupManager from './FocusGroupManager';\n\nexport default function FocusGroupHoc(WrappedComponent, options = {}) {\n  return ({\n    onExitFocusGroup,\n    onFocusPrevGroup,\n    focusKeyBindings,\n    ...props\n  }) => (\n    <FocusGroupManager\n      keyBindings={focusKeyBindings}\n      onExitFocusGroup={onExitFocusGroup}\n      onFocusPrevGroup={onFocusPrevGroup}\n      {...options}\n    >\n      <WrappedComponent {...props} {...options} />\n    </FocusGroupManager>\n  );\n}\n","import React from 'react';\n\nexport default React.createContext();\n","/* eslint-disable react/prop-types */\n/* eslint-disable indent */\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { runAll, toggleInObject } from '@elliemae/ds-utilities/utils';\nimport DropdownMenuContext from './DropdownMenuContext';\n\nconst noop = () => null;\n\nfunction DropdownMenuProvider({\n  onSelectMenuItem = noop,\n  onOpenMenu = noop,\n  onClose,\n  children,\n  isOpen,\n  selection,\n  singleGroupSelection,\n  onSelectChange = noop,\n}) {\n  const [isMenuOpen, setMenuOpen] = useState(isOpen);\n\n  const closeMenu = useCallback(() => {\n    setMenuOpen(false);\n    onOpenMenu(false);\n    onClose();\n  });\n  const openMenu = useCallback(() => {\n    setMenuOpen(true);\n    onOpenMenu(true);\n  });\n\n  const handleItemClick = ({ item, group }) => {\n    let activeState;\n    // reset selection if single selection group is activated\n    let nextSelection = !singleGroupSelection ? selection : {};\n\n    if (group) {\n      activeState = group.active;\n      nextSelection = {\n        ...nextSelection,\n        [group.id]: activeState,\n      };\n    } else {\n      const selectionItem = group || item;\n      activeState = selectionItem.active || selectionItem.checked;\n\n      // can be toggled (radio with unselection)\n      nextSelection = Array.isArray(activeState)\n        ? {\n            ...nextSelection,\n            [selectionItem.id]: activeState,\n          }\n        : toggleInObject(\n            nextSelection,\n            selectionItem.id,\n            item.label || activeState || true,\n          );\n    }\n    onSelectChange({\n      item,\n      group,\n      selection: nextSelection,\n    });\n    // todo: just pass item on item and group when selection callback,\n    //  use onSelectchange for nextSelection\n    onSelectMenuItem(item, activeState, nextSelection);\n  };\n\n  const handleCloseOnClick = useCallback(({ item, group = {} }) => {\n    if (item.closeOnClick !== undefined) {\n      if (item.closeOnClick) closeMenu();\n      return;\n    }\n    if (group.closeOnClick !== undefined) {\n      if (group.closeOnClick) closeMenu();\n    }\n  }, []);\n\n  const valueProvider = useMemo(\n    () => ({\n      onItemClick: runAll(handleItemClick, handleCloseOnClick),\n      closeMenu,\n      openMenu,\n      isMenuOpen,\n      selection,\n    }),\n    [isMenuOpen, selection],\n  );\n  return (\n    <DropdownMenuContext.Provider value={valueProvider}>\n      {children}\n    </DropdownMenuContext.Provider>\n  );\n}\n\nexport default DropdownMenuProvider;\n","/* eslint-disable react/display-name */\nimport React, { useContext } from 'react';\nimport { runAll, get } from '@elliemae/ds-utilities/utils';\nimport DropdownMenuContext from './DropdownMenuContext';\n\nconst noop = () => null;\n\nfunction MenuItemGroupSelectionHOC(WrappedComponent, handlerName = 'onSelect') {\n  return ({ item = {}, ...restProps }) => {\n    const { onItemClick, selection } = useContext(DropdownMenuContext);\n    const propHandler = restProps[handlerName] || noop;\n    const handler = {\n      [handlerName]: (active, itemOption) =>\n        runAll(\n          item.onSelect,\n          onItemClick,\n          propHandler,\n        )({ item: itemOption, group: { ...item, active } }),\n    };\n    return (\n      <WrappedComponent\n        {...restProps}\n        {...(selection\n          ? { active: get(selection, [item.id]) || item.active }\n          : {})}\n        {...handler}\n      />\n    );\n  };\n}\n\nexport default MenuItemGroupSelectionHOC;\n","/* eslint-disable react/display-name */\nimport React, { useContext } from 'react';\nimport { runAll, get } from '@elliemae/ds-utilities/utils';\nimport DropdownMenuContext from './DropdownMenuContext';\n\nconst noop = () => null;\n\nconst defaultConfig = { type: 'default', handlerName: 'onClick' };\n\nfunction MenuItemClickableHOC(WrappedComponent, config) {\n  return ({ item = {}, ...restProps }) => {\n    const { type, handlerName } = { ...defaultConfig, ...config };\n    const { onItemClick, selection } = useContext(DropdownMenuContext);\n    const propHandler = restProps[handlerName] || noop;\n    const handler = {\n      [handlerName]: () => runAll(onItemClick, propHandler)({ item, type }),\n    };\n    return (\n      <WrappedComponent\n        {...restProps}\n        {...(type === 'selectable' && selection\n          ? { checked: get(selection, [item.id]) }\n          : {})}\n        {...handler}\n      />\n    );\n  };\n}\n\nexport default MenuItemClickableHOC;\n","import {\n  Menu,\n  renderMenuItems,\n  menuItemFactory,\n} from '@elliemae/ds-basic/Menu';\n\nimport MenuItemClickableHOC from './MenuItemClickableHOC';\nimport MenuItemGroupSelectionHOC from './MenuItemGroupSelectionHOC';\n\nconst itemTypes = {\n  separator: Menu.Separator,\n  menuitem: MenuItemClickableHOC(Menu.Item),\n  radio: MenuItemClickableHOC(Menu.ItemRadio, { type: 'selectable' }),\n  checkbox: MenuItemClickableHOC(Menu.ItemCheckbox, { type: 'selectable' }),\n  submenu: Menu.SubMenu,\n  'selection-group': MenuItemGroupSelectionHOC(Menu.SelectionGroup),\n};\n\nexport const factory = type =>\n  menuItemFactory(type, itemTypes, itemTypes.menuitem);\nexport const renderOptions = options => renderMenuItems(options, factory);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { DSCircularProgressIndicator } from '@elliemae/ds-basic/CircularProgressIndicator';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 56px;\n`;\n\nconst LoadingIndicator = () => (\n  <Wrapper>\n    <DSCircularProgressIndicator size=\"m\" />\n  </Wrapper>\n);\n\nexport default LoadingIndicator;\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport { Menu } from '@elliemae/ds-basic/Menu';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport { runAll, isFunction } from '@elliemae/ds-utilities/utils';\nimport DropdownMenuContext from './DropdownMenuContext';\nimport { renderOptions, factory } from './decoratedMenuItemFactory';\nimport LoadingIndicator from './DropdownMenuLoadingIndicator';\n\nconst blockName = 'menu';\n\nconst getMax = options => {\n  let max = 0;\n  options.forEach(o => {\n    if (o && o.label && String(o.label).length > max)\n      max = String(o.label).length;\n  });\n  return max;\n};\n\nconst DropdownMenuRenderer = ({\n  containerProps,\n  className,\n  options = [],\n  triggerComponent,\n  placement,\n  interactionType,\n  preventOverflow,\n  customMenu,\n  contentOffset,\n  contentStyle,\n  isOpen,\n  children,\n  menuProps,\n  referenceNode,\n  focusOnOpen: focusOnOpenProp,\n  onClickOutsideMenu,\n  responsiveHeight,\n  itemsRenderer,\n  maxWidth,\n  minWidth,\n  zIndex,\n  type,\n  loading,\n}) => {\n  const [focusOnOpen, setFocusOnOpenMenu] = useState(focusOnOpenProp);\n  const { isMenuOpen, openMenu, closeMenu } = useContext(DropdownMenuContext);\n  const maxOption = useMemo(() => {\n    let max = 0;\n    options.forEach(o => {\n      if (o && o.label && String(o.label).length > max)\n        max = String(o.label).length;\n      if (o && o.items) {\n        const nestedMax = getMax(o.items);\n        if (nestedMax > max) max = nestedMax;\n      }\n    });\n    return max;\n  }, [options]);\n\n  const optionsRendererd = useMemo(() => {\n    if (options[0] && options[0].type === 'separator') {\n      options[0].showSeparator = false;\n    }\n    return isFunction(itemsRenderer)\n      ? itemsRenderer(options, factory)\n      : renderOptions(options);\n  }, [options]);\n\n  const dropdownBlockName = convertPropToCssClassName(blockName);\n\n  const menuContent = () => {\n    if (loading) return <LoadingIndicator />;\n    if (children) return children;\n    if (optionsRendererd) return optionsRendererd;\n  };\n\n  const MenuComponent = customMenu ? (\n    getComponentFromProps(customMenu, {\n      options,\n      focusOnOpen,\n      maxOption,\n      ...menuProps,\n      closeMenu,\n      loading,\n    })\n  ) : (\n    <Menu\n      closeMenu={closeMenu}\n      focusOnOpen={focusOnOpen}\n      maxOption={type === 'phone' ? maxOption : undefined}\n      maxWidth={maxWidth}\n      minWidth={minWidth}\n      onClickOutside={onClickOutsideMenu}\n      onExitFocusGroup={closeMenu}\n      responsiveHeight={responsiveHeight}\n      type={type}\n      visible\n      {...menuProps}\n    >\n      {menuContent()}\n    </Menu>\n  );\n\n  useEffect(() => {\n    setFocusOnOpenMenu(focusOnOpenProp);\n  });\n\n  return (\n    <DSPopper\n      blockName={dropdownBlockName}\n      containerProps={containerProps}\n      contentComponent={MenuComponent}\n      contentOffset={contentOffset}\n      contentStyle={contentStyle}\n      interactionType={interactionType}\n      isOpen={isOpen !== undefined ? isOpen : isMenuOpen}\n      onOpen={opening => (opening ? openMenu() : closeMenu())}\n      placement={placement}\n      preventOverflow={preventOverflow}\n      referenceNode={referenceNode}\n      showArrow={false}\n      triggerComponent={getComponentFromProps(triggerComponent, {\n        onClick:\n          interactionType === 'hover'\n            ? runAll(openMenu, triggerComponent.props.onClick)\n            : runAll(\n                !isMenuOpen ? openMenu : closeMenu,\n                triggerComponent.props.onClick,\n              ),\n        onMouseEnter: interactionType === 'hover' ? openMenu : undefined,\n        onKeyDown: e => {\n          if (e.key === 'ArrowDown' || e.key === ' ') {\n            e.preventDefault();\n            setFocusOnOpenMenu(true);\n            openMenu();\n          }\n        },\n        className: `${triggerComponent.props.className} ${className}`,\n      })}\n      zIndex={zIndex || menuProps.zIndex}\n    />\n  );\n};\n\nexport default DropdownMenuRenderer;\n","import React from 'react';\nimport DropdownMenuProvider from './DropdownMenuProvider';\nimport DropdownMenuRenderer from './DropdownMenuRenderer';\n\nfunction DropdownMenuWrapper(props) {\n  return (\n    <DropdownMenuProvider {...props}>\n      <DropdownMenuRenderer {...props} />\n    </DropdownMenuProvider>\n  );\n}\n\nexport default DropdownMenuWrapper;\n","export const Position = {\n  AUTO: 'auto',\n  AUTO_START: 'auto-start',\n  AUTO_END: 'auto-end',\n  BOTTOM: 'bottom',\n  BOTTOM_START: 'bottom-start',\n  BOTTOM_END: 'bottom-end',\n  LEFT: 'left',\n  LEFT_END: 'left-end',\n  LEFT_START: 'left-start',\n  RIGHT: 'right',\n  RIGHT_END: 'right-end',\n  RIGHT_START: 'right-start',\n  TOP: 'top',\n  TOP_START: 'top-start',\n  TOP_END: 'top-end',\n};\n\nexport const positions = [\n  Position.AUTO_START,\n  Position.AUTO_END,\n  Position.AUTO,\n  Position.TOP_START,\n  Position.TOP,\n  Position.TOP_END,\n  Position.RIGHT_START,\n  Position.RIGHT,\n  Position.RIGHT_END,\n  Position.BOTTOM_START,\n  Position.BOTTOM,\n  Position.BOTTOM_END,\n  Position.LEFT_START,\n  Position.LEFT,\n  Position.LEFT_END,\n];\n","export const Interaction = {\n  CLICK: 'click',\n  HOVER: 'hover',\n};\n\nexport const interactions = [Interaction.CLICK, Interaction.HOVER];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TooltipTextProvider } from '@elliemae/ds-basic/TruncatedTooltipText';\n// todo: docgen handlers at the moment don't get data from alias\nimport { positions, Position } from '../../../ds-basic/src/Popper/positions';\nimport {\n  interactions,\n  Interaction,\n} from '../../../ds-basic/src/Popper/interaction';\nimport DropdownMenuWrapper from './DropdownMenuWrapper';\n\nconst noop = () => null;\n\nconst DSDropdownMenu = ({\n  containerProps = {},\n  className = '',\n  contentStyle = null,\n  options = [],\n  onSelectMenuItem = noop,\n  onOpenMenu = noop,\n  onClickOutsideMenu = noop,\n  preventOverflow = 'viewport',\n  placement = Position.BOTTOM_START,\n  interactionType = Interaction.CLICK,\n  triggerComponent = noop,\n  customMenu = null,\n  isOpen = undefined,\n  selection = {},\n  menuProps = {},\n  referenceNode = undefined,\n  focusOnOpen = false,\n  onClose = noop,\n  itemsRenderer = undefined,\n  responsiveHeight = false,\n  singleGroupSelection = false,\n  onSelectChange = noop,\n  minWidth = undefined,\n  maxWidth = undefined,\n  zIndex,\n  type,\n  loading = false,\n}) => (\n  <TooltipTextProvider>\n    <DropdownMenuWrapper\n      className={className}\n      containerProps={containerProps}\n      contentStyle={contentStyle}\n      customMenu={customMenu}\n      focusOnOpen={focusOnOpen}\n      interactionType={interactionType}\n      isOpen={isOpen}\n      itemsRenderer={itemsRenderer}\n      maxWidth={maxWidth}\n      menuProps={menuProps}\n      minWidth={minWidth}\n      onClickOutsideMenu={onClickOutsideMenu}\n      onClose={onClose}\n      onOpenMenu={onOpenMenu}\n      onSelectChange={onSelectChange}\n      onSelectMenuItem={onSelectMenuItem}\n      options={options}\n      placement={placement}\n      preventOverflow={preventOverflow}\n      referenceNode={referenceNode}\n      responsiveHeight={responsiveHeight}\n      selection={selection}\n      singleGroupSelection={singleGroupSelection}\n      triggerComponent={triggerComponent}\n      type={type}\n      zIndex={zIndex}\n      loading={loading}\n    />\n  </TooltipTextProvider>\n);\n\nDSDropdownMenu.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /** Object style passed to the menu */\n  contentStyle: PropTypes.shape({}),\n  /** Options items for the dropdown menu. Check menu item types */\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string,\n      id: PropTypes.string,\n      label: PropTypes.string,\n    }),\n  ),\n  /** Handler when user clicks on a menu item */\n  onSelectMenuItem: PropTypes.func,\n  /** Handler when the menu shows up */\n  onOpenMenu: PropTypes.func,\n  /** Handler when user clicks outside the menu */\n  onClickOutsideMenu: PropTypes.func,\n  /** Prevent to move the menu outside of the container defined when interacting with the page */\n  preventOverflow: PropTypes.oneOf(['viewport', 'scrollParent', 'window']),\n  /** Menu placement */\n  placement: PropTypes.oneOf(positions),\n  /** How to open the menu with click, hover */\n  interactionType: PropTypes.oneOf(interactions),\n  /** The component that is going to open / close the menu */\n  triggerComponent: PropTypes.element,\n  /** Custom menu component */\n  customMenu: PropTypes.element,\n  /** Whether the menu is open or not */\n  isOpen: PropTypes.bool,\n  /** Selection state. Ex: { [itemId]: '{bool}', [idMultiSelectionItem]: '{string}' } */\n  selection: PropTypes.shape({}),\n  /** Props object passed to the menu component */\n  menuProps: PropTypes.shape({}),\n  /** Customize the items render */\n  itemsRenderer: PropTypes.func,\n  /** Customize menu format. Can be undefined or 'phone' */\n  type: PropTypes.string,\n  /** Customize menu minWidth. Can be undefined or 'number' */\n  minWidth: PropTypes.number,\n  /** Customize menu maxWidth. Can be undefined or 'number' */\n  maxWidth: PropTypes.number,\n  /** Make the menu responsive, it uses a margin of 120 px */\n  responsiveHeight: PropTypes.bool,\n  /** Customize menu zIndex. Can be undefined or 'number' */\n  zIndex: PropTypes.number,\n  className: PropTypes.string,\n  focusOnOpen: PropTypes.bool,\n  loading: PropTypes.bool,\n  referenceNode: PropTypes.any,\n  onClose: PropTypes.func,\n  onSelectChange: PropTypes.func,\n  singleGroupSelection: PropTypes.bool,\n};\n\nexport default DSDropdownMenu;\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport FocusGroupProvider from '@elliemae/ds-shared/FocusGroup/FocusGroupManager';\nimport { mergeRefs } from '@elliemae/ds-utilities/system';\nimport decorateToolbarChildren from './decorateToolbarChildren';\nimport Item from './ToolbarItem';\nimport ToolbarGroup from './ToolbarGroup';\nimport Divider from './ToolbarDivider';\n\nconst blockName = 'toolbar';\n\nconst ToolbarContainer = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ withDepth, alignment, size }) => ({\n    'without-depth': !withDepth,\n    [alignment]: !!alignment,\n    [size]: size,\n  }),\n);\n\nconst DSToolbar = ({\n  containerProps = {},\n  innerRef,\n  withDepth = true,\n  alignment = 'right', // left || right\n  autoFocusOnMount = true,\n  children = [],\n  size = 'normal',\n  ...otherProps\n}) => {\n  const containerRef = useRef(null);\n  return (\n    <FocusGroupProvider\n      autoFocusOnMount={autoFocusOnMount}\n      getContainer={() => containerRef.current}\n      keyBindings={{\n        Tab: 'next',\n      }}\n      orientation=\"horizontal\"\n    >\n      <ToolbarContainer\n        {...containerProps}\n        {...otherProps}\n        classProps={{ withDepth, alignment, size }}\n        innerRef={mergeRefs(innerRef, containerRef)}\n      >\n        {decorateToolbarChildren(children)}\n      </ToolbarContainer>\n    </FocusGroupProvider>\n  );\n};\n\nDSToolbar.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /** Shows a shadow rear the toolbar */\n  withDepth: PropTypes.bool,\n  /** Aligns the toolbar to the left or right */\n  alignment: PropTypes.oneOf(['right', 'left']),\n  /** Toolbar size */\n  size: PropTypes.oneOf(['normal', 'compact']),\n};\n\nexport { Item as ToolbarItem, ToolbarGroup, Divider as ToolbarDivider };\n\nexport default DSToolbar;\n","const ICONS_SIZES = {\n  XXS: 'xxs',\n  XS: 'xs',\n  S: 's',\n  M: 'm',\n  L: 'l',\n  XL: 'xl',\n  XXL: 'xxl',\n};\n\nexport default ICONS_SIZES;\n","export const SearchableTreePlugin = 'tree-searchable';\n"],"sourceRoot":""}