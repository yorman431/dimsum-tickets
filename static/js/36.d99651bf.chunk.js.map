{"version":3,"sources":["DatePicker/PUI-5427.js","../../../src/timeUtils.tsx","../../../../../src/DateInputV2/components/utils.tsx","../../../../../src/DateInputV2/components/helpers.tsx","../../../../../src/DateInputV2/components/styled.tsx","../../../../../src/DateInputV2/components/propsTypes.tsx","../../../src/DatePicker.tsx","../../../../../src/components/DatePickerPicker/DatePickerPicker.tsx","../../../../../src/DateInputV2/components/DateInputs.tsx","../../../../../src/components/DatePickerController/DatePickerController.tsx","../../../../src/components/DatePickerDropdown.tsx","../../../../../src/DateInputV2/components/props.tsx","../../../../../src/DateInputV2/components/DSDateInput.tsx","../../../../src/components/DSDatePickerImpl.tsx","../../../src/DSDatePicker.tsx"],"names":["memo","useState","date","setDate","label","show","toggle","setToggle","style","width","onClick","e","preventDefault","className","containerProps","id","disabled","enableOutsideDays","firstDayOfWeek","hasError","hideKeyboardShortcutsPanel","isDayBlocked","day","Date","isDayHighlighted","isOutsideRange","keepOpenOnDateSelect","onBlur","val","console","log","onChange","selectedDate","_i","_isValid","onClose","onFocus","placeholder","readOnly","required","screenReaderInputMessage","transitionDuration","value","verticalSpacing","tabIndex","pickerProps","tabindex","calendarProps","getVisibleTimeByFormat","format","showHours","showMinutes","showSeconds","use12Hours","addLeadingZeros","count","number","padStart","String","formatTimeNumber","shouldAddLeadingZeros","leadingZeros","getFormattedDay","v","parseInt","parseTimeNumberFromText","getShouldShortcircuitDay","parsedValue","getFormattedYear","getFormattedMonth","getShouldShortcircuitMonth","stringValue","parsedInt","isNaN","triggerOnBlur","blurEvent","currentEl","relatedTarget","nextElement","nextElementSibling","focusNextInput","elem","selector","sibling","getNextSibling","focusPreviousInput","getPreviousSibling","onInputFocus","commonInputProps","digits","onKeyDown","props","pattern","type","callChange","event","handlers","isArrowChange","setTarget","n","cloneDeep","newValue","onKeyDownHelper","DateInputFluidContainer","styled","DateInputWrapper","theme","DateInputInput","DateInputDivider","DateInputsPropTypes","innerRef","PropTypes","current","any","onDateChange","onCustomKeyDown","onError","showMonth","showDay","showYear","step","yearMaxRange","yearMinRange","time","createIcon","paths","height","Picker","icon","size","DSIconSizes","buttonActionType","rest","aria-label","buttonType","color","DSIconColors","data-testid","PickerPropsTypes","DateInputs","month","setMonth","setDay","year","setYear","onChangeDateTrigger","setOnChangeDateTrigger","dayRef","React","haveInputsOnChangeTriggered","setHaveInputsOnChangeTriggered","handleFluidClick","triggerOnDateChange","momentValue","moment","onMonthChange","shouldAdvance","onDayChange","onYearChange","useEffect","values","renderMonthInput","autoComplete","key","name","ref","renderDayInput","renderYearInput","cols","input","acc","index","convertPropToCssClassName","classNameElement","classNameBlock","DSDatePickerController","document","focusedElement","firstDay","restOfDays","lastDay","onClickEscape","defaultValue","Boolean","momentvalue","dataInput","prev","next","onPrevMonthClick","onNextMonthClick","nav","this","setTimeout","calendarDaySelected","numberOfMonths","initialVisibleMonth","phrases","displayFormatDay","onOutsideClick","safedate","safeinitialMonth","insideBlur","focused","navNext","navPrev","firstFocusableItem","renderMonthElement","onFocusChange","renderDayContents","onTab","Component","calendarLabel","closeDatePicker","clearDates","focusStartDate","jumpToPrevMonth","jumpToNextMonth","keyboardShortcuts","showKeyboardShortcutsPanel","openThisPanel","enterKey","leftArrowRightArrow","upArrowDownArrow","pageUpPageDown","homeEnd","escape","questionMark","selectFocusedDate","moveFocusByOneDay","moveFocusByOneWeek","moveFocusByOneMonth","moveFocustoStartAndEndOfWeek","returnFocusToInput","keyboardNavigationInstructions","chooseAvailableStartDate","chooseAvailableEndDate","dateIsUnavailable","dateIsSelected","func","noop","DatePickerDropdown","isOpen","menu","zIndex","pickerRef","contentComponent","modifiers","preventOverflow","enabled","padding","boundariesElement","showArrow","triggerComponent","defaultProps","DSDateInputV2","customInputType","ir","disableTooltip","describe","DSDateInputV2WithSchema","FORMAT","DSdatePickerImpl","inputFocused","safeValue","newState","newDate","autoClear","undefined","safeInputValue","hasSelectedDate","rightAddon","minHeight","prevState","prevVal","prevDate","nextVal","nextProps","nextDate","isPrevValMoment","isPrevDateMoment","prevValAsString","prevDateAsString","isNextValMoment","isNextDateMoment","nextValAsString","nextValAsMoment","nextDateAsString","nextDateAsMoment","hasValChanged","skipStateChange","DSDatePicker","appendToBody","SingleDatePickerPhrases","displayFormat","openDirection","cssClassName","safeDate","datePickerProps","DatePickerWithSchema"],"mappings":"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","file":"static/js/36.d99651bf.chunk.js","sourcesContent":["import React, {useState, memo} from 'react';\nimport moment from 'moment';\nimport DSDatePicker from '@elliemae/ds-date-picker';\n\nconst Component = () => {\n  const [date, setDate] = useState();\n  const [toggle, setToggle] = useState({\n    label: 'HIDE',\n    show: true\n  });\n\n  const toggleValue = (e) => {\n    e.preventDefault();\n    const show = !toggle.show;\n    const label = toggle.show ? 'SHOW' : 'HIDE';\n    setToggle({\n      label: label,\n      show: show\n    });\n  }\n  return (\n    <div style={{width: '200px'}}>\n      <button onClick={toggleValue}>{toggle.label}</button>\n      { toggle.show ?\n        <DSDatePicker\n          className=\"example-class-name\"\n          containerProps={{ id: 'my-custom-id' }}\n          disabled={false}\n          enableOutsideDays\n          firstDayOfWeek={0}\n          hasError={false}\n          hideKeyboardShortcutsPanel\n          isDayBlocked={(day) => new Date(day) < new Date(2020, 7, 5)}\n          isDayHighlighted={() => false}\n          isOutsideRange={false}\n          keepOpenOnDateSelect={false}\n          onBlur={(val) => {\n            //onBlur({ input: _i, isValid: _isValid });\n            console.log('OnBlur: ', val);\n          }}\n          onChange={(selectedDate) => {\n            const { _i, _isValid } = selectedDate;\n            //onChange({ input: _i, isValid: _isValid });\n            setDate(selectedDate);\n            console.log(selectedDate);\n          }}\n          onClose={() => {}}\n          onFocus={() => {}}\n          placeholder=\"Select Date\"\n          readOnly={false}\n          required={false}\n          screenReaderInputMessage=\"Select date\"\n          transitionDuration={0}\n          value={date}\n          verticalSpacing={0}\n          tabIndex={0}\n          pickerProps={{\n            tabindex: 1,\n          }}\n          calendarProps={{\n            tabindex: 2,\n          }}\n        />\n        : null\n      }\n    </div>\n  )\n}\nexport default  memo(Component);\n","import { padStart } from './utils';\n\nexport const getVisibleTimeByFormat = format => ({\n  showHours:\n    format.indexOf('H') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('k') > -1,\n  showMinutes: format.indexOf('m') > -1,\n  showSeconds: format.indexOf('s') > -1,\n  use12Hours:\n    format.indexOf('A') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('a') > -1,\n});\n\nexport const addLeadingZeros = count => number =>\n  padStart(String(number), count, '0');\n","/* eslint-disable max-params */\n/* eslint-disable complexity */\n/* eslint-disable max-lines */\nimport { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport moment from 'moment';\n\nconst currentYear = new Date().getFullYear();\n\nconst getNextSibling = (elem, selector) => {\n  // Get the next sibling element\n  let sibling = elem.nextElementSibling;\n  // If there's no selector, return the first sibling\n  if (!selector) return sibling;\n\n  // If the sibling matches our selector, use it\n  // If not, jump to the next sibling and continue the loop\n  while (sibling) {\n    if (sibling.matches(selector)) return sibling;\n    sibling = sibling.nextElementSibling;\n  }\n  return sibling;\n};\n\nconst getPreviousSibling = (elem, selector) => {\n  let sibling = elem.previousElementSibling;\n  if (!selector) return sibling;\n  while (sibling) {\n    if (sibling.matches(selector)) return sibling;\n    sibling = sibling.previousElementSibling;\n  }\n  return sibling;\n};\n\nexport const isArrowIncrementDecrement = (key) =>\n  key === 'ArrowDown' || key === 'ArrowUp';\n\n// TODO remove and keep `true` behavior ( PUI-4141 )\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros, leadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros\n    ? addLeadingZeros(leadingZeros)(value)\n    : String(value);\n};\n\nexport const getFormattedDay = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n\n  if (parsedValue > 31) return '31';\n  return formatTimeNumber(parseTimeNumberFromText(v), true, 2);\n};\n\nexport const getShouldShortcircuitDay = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n  if (parsedValue > 31) return true;\n  // if the first input is in range 4-9 then there is no other option\n  // so we auto advance\n  if (parsedValue > 3 && parsedValue < 10) return true;\n  return false;\n};\n\nexport const getFormattedYear = (value) => {\n  const v = value.length > 4 ? value.slice(-4) : value;\n  if (parseInt(v) > 9999) return '9999';\n  return formatTimeNumber(parseTimeNumberFromText(v), true, 4);\n};\n\nexport const getFormattedMonth = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n  if (parsedValue > 12) return '12';\n  return formatTimeNumber(parseTimeNumberFromText(v), true, 2);\n};\n\nexport const getShouldShortcircuitMonth = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n  if (parsedValue > 12) return true;\n  // if the first input is in range 2-9 then there is no other option\n  // so we auto advance\n  if (parsedValue > 1 && parsedValue < 10) return true;\n  return false;\n};\n\nexport const parseTimeNumberFromText = (stringValue) => {\n  const parsedInt = parseInt(stringValue);\n\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\n// trigger onBlur for entire DateInput control if focus is not in day, month, year\nexport const triggerOnBlur = (blurEvent, onBlur = () => {}) => {\n  const { target: currentEl = {}, relatedTarget } = blurEvent || {};\n  const nextElement = currentEl.nextElementSibling;\n  const { nextElementSibling } = nextElement || {};\n  // relatedTarget points to the element that is currently having focus\n  if (!nextElementSibling || nextElementSibling !== relatedTarget) {\n    onBlur(blurEvent);\n  }\n};\n\nexport const focusNextInput = (currentEl) => {\n  getNextSibling(currentEl, 'input').focus();\n};\n\nexport const focusPreviousInput = (currentEl) => {\n  getPreviousSibling(currentEl, 'input').focus();\n};\n\nexport const getValidTimeNumber = (\n  { min, max },\n  number,\n  valueString = '',\n  onError = () => null,\n) => {\n  if (valueString === '0' || number === 0) return null;\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    onError();\n    return max;\n  }\n  if (number < min) {\n    onError();\n    return min;\n  }\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  if (stringValue.length > 1) return true;\n  return number * 10 > max;\n};\n\nexport const getDateValuesFromTime = (time, format) => {\n  if (!time || !time.format) return {};\n  const month = time.format('MM');\n  const day = time.format('DD');\n  const year = time.format('YYYY');\n  return {\n    month: getFormattedMonth(format, month),\n    day: getFormattedDay(format, day),\n    year: getFormattedYear(format, year),\n  };\n};\n\nexport const resetTimeValues = () => ({\n  month: '',\n  day: '',\n  year: '',\n});\n\nexport const onInputFocus = (e) => {\n  e.preventDefault();\n  e.stopPropagation();\n  // we select the whole value to be able to override the value on first key\n  // we don't use selection color to be consistent with the highlight of the input\n  e.target.select();\n};\n\nexport const getNextTimeValue = (\n  value,\n  target,\n  yearMinRange,\n  yearMaxRange,\n  step = 1,\n  incrementing = true,\n) => {\n  const parsedValue = parseTimeNumberFromText(value);\n  let result = incrementing ? parsedValue + step : parsedValue - step;\n  if (target === 'year') {\n    if (result < yearMinRange) result = currentYear;\n    if (result > yearMaxRange) result = currentYear;\n  }\n  return result;\n};\n\nexport const focusNextInputIfNeeded = (\n  currentEl,\n  max,\n  number,\n  stringValue,\n  currentKey,\n) => {\n  if (\n    shouldFocusNextInput(max, number, stringValue) &&\n    !isArrowIncrementDecrement(currentKey)\n  ) {\n    focusNextInput(currentEl);\n  }\n};\n\nexport const commonInputProps = (digits = 2, onKeyDown, placeholder) => {\n  const props = {\n    pattern: '[0-9]*',\n    placeholder,\n    type: 'text',\n    onKeyDown,\n    onFocus: onInputFocus,\n  };\n  if (digits === 4) props.placeholder = 'YYYY';\n  return props;\n};\n\nexport const handleCompletedDate = (\n  time,\n  date,\n  show,\n  INTERNAL_V2_NO_MUTATION,\n) => {\n  // clone time to avoid mutation when INTERNAL_V2_NO_MUTATION is true\n  const newDate = INTERNAL_V2_NO_MUTATION\n    ? (time && moment(time)) || moment()\n    : time || moment();\n\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n\n  if (time && !year && !month && !day) return '';\n\n  newDate.value = `${year}-${month}-${day}`;\n\n  if (showMonth && month) newDate.month(parseInt(month - 1, 10));\n  if (showDay && day) newDate.date(parseInt(day, 10));\n  if (showYear && year) newDate.year(parseInt(year, 10));\n\n  return newDate;\n};\n\nexport const isTimeCompletelySet = (date, show, range) => {\n  let neededValues = [];\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n  const { yearMinRange, yearMaxRange } = range;\n\n  if (showMonth) neededValues = [...neededValues, month || null];\n  if (showDay) neededValues = [...neededValues, day || null];\n  if (showYear) neededValues = [...neededValues, year || null];\n\n  const isValidYear = year < yearMaxRange && year > yearMinRange;\n\n  return !neededValues.some((value) => !value) && isValidYear;\n};\n","import { cloneDeep } from 'lodash';\nimport { focusNextInput, focusPreviousInput } from './utils';\n\nconst callChange = (event, handlers, isArrowChange) => {\n  if (event.target.name === 'day') handlers.onDayChange(event, isArrowChange);\n  if (event.target.name === 'month')\n    handlers.onMonthChange(event, isArrowChange);\n  if (event.target.name === 'year') handlers.onYearChange(event, isArrowChange);\n};\n\nconst setTarget = (event, v) => {\n  const n = cloneDeep(event);\n  let newValue = parseInt(n.target.value || 0, 10) + v;\n  if (newValue < 1) newValue = '01';\n  if (event.target.name === 'day' && newValue > 31) newValue = 31;\n  if (event.target.name === 'month' && newValue > 12) newValue = 12;\n  n.target.value = newValue;\n  return n;\n};\n\n// eslint-disable-next-line max-statements, complexity\nexport const onKeyDownHelper = (event, handlers) => {\n  switch (event.key) {\n    case 'ArrowLeft': {\n      event.preventDefault();\n      focusPreviousInput(event.target);\n      break;\n    }\n    case 'ArrowUp': {\n      event.preventDefault();\n      const n = setTarget(event, 1);\n      callChange(n, handlers, true);\n      break;\n    }\n    case 'ArrowDown': {\n      event.preventDefault();\n      const n = setTarget(event, -1);\n      callChange(n, handlers, true);\n      break;\n    }\n    case 'ArrowRight': {\n      event.preventDefault();\n      focusNextInput(event.target);\n      break;\n    }\n    case 'Tab': {\n      if (event.shiftKey) break;\n      if (event.target.value.length > 0 && event.target.name !== 'year')\n        event.preventDefault();\n      callChange(event, handlers);\n      break;\n    }\n    case 'Backspace': {\n      // HTML Date input behavior, clear everything when deleting\n      event.preventDefault();\n      const n = cloneDeep(event);\n      n.target.value = '';\n      callChange(n, handlers, true);\n      break;\n    }\n    case 'Enter': {\n      break;\n    }\n    default:\n      break;\n  }\n};\n","import styled from 'styled-components';\nimport { Grid } from '@elliemae/ds-grid';\n\n\nexport const DateInputFluidContainer = styled(Grid)`\n  width: 100%;\n  height: 100%;\n  align-items: center;\n`;\n\nexport const DateInputWrapper = styled(Grid)`\n  align-items: center;\n  align-content: center;\n  ${({ disabled, theme }) =>\n    disabled\n      ? `\n    background: ${theme.colors.neutral[100]};\n    color: ${theme.colors.neutral[500]};\n    `\n      : ''}\n  width: 102px;\n\n  &:focus {\n    outline-style: none;\n    box-shadow: none;\n    border-color: transparent;\n  }\n`;\n\nexport const DateInputInput = styled.input`\n  outline: none;\n  border: none;\n  border-radius: 0;\n  width: ${(props) => (props.size === 'l' ? '38px' : '25px')};\n  height: ${(props) => props.theme.space.xs};\n  ${({ disabled, theme }) =>\n    disabled\n      ? `\n  background: ${theme.colors.neutral[100]};\n  color: ${theme.colors.neutral[500]};\n  `\n      : ''}\n  padding-left: 4px;\n  padding-right: 0px;\n  &::placeholder {\n    font-size: 95%;\n    font-style: italic;\n  }\n  :-moz-placeholder {\n    font-size: 95%;\n    font-style: italic;\n  }\n\n  ::-moz-placeholder {\n    font-size: 95%;\n    font-style: italic;\n  }\n  &:focus {\n    background: ${({ theme }) => theme.colors.brand['300']};\n    background-clip: content-box;\n  }\n  ::-moz-selection {\n    background: transparent;\n  }\n  ::selection {\n    background: transparent;\n  }\n`;\n\nexport const DateInputDivider = styled.div`\n  padding: 1px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nexport const DateInputsPropTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onDateChange: PropTypes.func,\n  onCustomKeyDown: PropTypes.func,\n  onError: PropTypes.func,\n  format: PropTypes.string,\n  showMonth: PropTypes.bool,\n  showDay: PropTypes.bool,\n  showYear: PropTypes.bool,\n  step: PropTypes.number,\n  yearMaxRange: PropTypes.number,\n  disabled: PropTypes.bool,\n  yearMinRange: PropTypes.number,\n  time: PropTypes.string,\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15.99 2H14v-.52c0-.27-.21-.48-.48-.48h-.05c-.26 0-.47.21-.47.48V2H7v-.52C7 1.21 6.79 1 6.52 1h-.04c-.27 0-.48.21-.48.48V2H4.01C2.9 2 2 2.9 2 4.01V17c0 1.1.9 2 2.01 2H16c1.1 0 2.01-.9 2.01-2.01V4.01C18 2.9 17.1 2 15.99 2zM17 16.99c0 .56-.45 1.01-1.01 1.01H4.01C3.45 18 3 17.55 3 16.99V6h14v10.99zM3 5v-.99C3 3.45 3.45 3 4.01 3H6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h1.99c.56 0 1.01.45 1.01 1.01V5H3z',\n    'M5 8h2v2H5V8zM13 8h2v2h-2V8zM9 8h2v2H9V8zM5 11h2v2H5v-2zM13 11h2v2h-2v-2zM9 11h2v2H9v-2zM5 14h2v2H5v-2zM9 14h2v2H9v-2z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DSIconColors, DSIconSizes } from '@elliemae/ds-basic/Icon';\nimport DatePicker from '@elliemae/ds-icons/DatePicker';\nimport DSButton, { buttonTypes } from '@elliemae/ds-basic/Button';\nimport { iconSizes } from '../../../../../shared-configs/prop-types';\n\nexport const Picker = ({\n  className = 'date-picker-icon',\n  disabled = false,\n  icon = <DatePicker />,\n  size = DSIconSizes.M,\n  buttonActionType = 'secondary',\n  onClick = () => null,\n  onBlur = () => null,\n  readOnly = false,\n  tabIndex = 0,\n  innerRef,\n  ...rest\n}) => (\n  <DSButton\n    innerRef={innerRef}\n    aria-label={rest['aria-label'] || 'Date Picker Button'}\n    buttonType={buttonActionType}\n    className={className}\n    color={!disabled ? DSIconColors.PRIMARY : DSIconColors.NEUTRAL}\n    disabled={disabled}\n    icon={icon}\n    onBlur={onBlur}\n    onClick={onClick}\n    readOnly={readOnly}\n    size={size}\n    tabIndex={tabIndex}\n    data-testid=\"btn-date-picker\"\n  />\n);\n\nexport const PickerPropsTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n  size: PropTypes.oneOf(iconSizes),\n  buttonActionType: PropTypes.oneOf(buttonTypes),\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  readOnly: PropTypes.bool,\n  tabIndex: PropTypes.number,\n};\n\nPicker.propTypes = PickerPropsTypes;\nexport default Picker;\n","/* eslint-disable indent */\n/* eslint-disable max-lines */\n/* eslint-disable complexity */\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport {\n  commonInputProps,\n  triggerOnBlur,\n  focusNextInput,\n  getFormattedDay,\n  getShouldShortcircuitDay,\n  getFormattedMonth,\n  getShouldShortcircuitMonth,\n  getFormattedYear,\n} from './utils';\nimport { onKeyDownHelper } from './helpers';\nimport {\n  DateInputDivider,\n  DateInputWrapper,\n  DateInputInput,\n  DateInputFluidContainer,\n} from './styled';\nimport { DateInputsPropTypes } from './propsTypes';\n\nconst FORMAT = 'MMDDYYYY';\n\nexport const DateInputs = ({\n  onBlur,\n  onChange,\n  onDateChange,\n  disabled,\n  onCustomKeyDown,\n  time,\n  tabIndex,\n  innerRef,\n}) => {\n  const [month, setMonth] = useState('');\n  const [day, setDay] = useState('');\n  const [year, setYear] = useState('');\n  const [onChangeDateTrigger, setOnChangeDateTrigger] = useState({});\n  const dayRef = React.useRef<HTMLInputElement>();\n  const [\n    haveInputsOnChangeTriggered,\n    setHaveInputsOnChangeTriggered,\n  ] = useState(false);\n\n  let digits = 2;\n  let placeholder = '';\n\n  const handleFluidClick = React.useCallback((e: React.MouseEvent<Element, MouseEvent>) => {\n    if(!(e.target as HTMLInputElement).type && dayRef.current) {\n      dayRef.current.focus();\n    }\n  }, [dayRef.current])\n  \n  const triggerOnDateChange = React.useCallback(() => {\n    if (month && day && year && haveInputsOnChangeTriggered) {\n      const momentValue = moment(`${month}${day}${year}`, 'MMDDYYYY', true);\n      if (momentValue.isValid()) {\n        onDateChange(momentValue);\n      }\n      setHaveInputsOnChangeTriggered(false);\n    }\n  }, [day, month, year, haveInputsOnChangeTriggered]);\n\n  // isArrowChange is coming from the onKeyDown handler in helpers\n  const onMonthChange = React.useCallback((e, isArrowChange) => {\n    const value = getFormattedMonth(e.target.value);\n    const shouldAdvance = getShouldShortcircuitMonth(e.target.value);\n    setMonth(value);\n    setHaveInputsOnChangeTriggered(true);\n    if (e.target.value.length > 1 || shouldAdvance) {\n      if (!isArrowChange) focusNextInput(e.target);\n      setOnChangeDateTrigger({});\n    }\n  },[]);\n\n  // isArrowChange is coming from the onKeyDown handler in helpers\n  const onDayChange = React.useCallback((e, isArrowChange) => {\n    const value = getFormattedDay(e.target.value);\n    const shouldAdvance = getShouldShortcircuitDay(e.target.value);\n    setDay(value);\n    setHaveInputsOnChangeTriggered(true);\n    if (e.target.value.length > 1 || shouldAdvance) {\n      if (!isArrowChange) focusNextInput(e.target);\n      setOnChangeDateTrigger({});\n    }\n  },[]);\n\n  const onYearChange = React.useCallback((e) => {\n    const value = getFormattedYear(e.target.value);\n    setYear(value);\n    setHaveInputsOnChangeTriggered(true);\n    setOnChangeDateTrigger({});\n  },[]);\n\n  useEffect(() => {\n    // When component mounts haveInputsOnChangeTriggered is set to false\n    // so this is not triggered on mount but is triggered with all other changes\n    if (haveInputsOnChangeTriggered) {\n      const momentValue = moment(`${month}${day}${year}`, FORMAT, true);\n      if (month || day || year)\n        onChange(\n          `${month}${day}${year}`,\n          momentValue.isValid() ? momentValue : null,\n        );\n    }\n  }, [day, month, year]);\n\n  useEffect(() => {\n    triggerOnDateChange();\n  }, [onChangeDateTrigger]);\n\n  useEffect(() => {\n    if (\n      time &&\n      time !== `${month}${day}${year}` &&\n      moment(time, 'MMDDYYYY').isValid()\n    ) {\n      const values = String(time || '');\n      if (values.slice(0, 2)) setMonth(values.slice(0, 2));\n      if (values.slice(2, 4)) setDay(values.slice(2, 4));\n      if (values.slice(4, 8)) setYear(values.slice(4, 8));\n    } else if (!time && (month || day || year)) {\n      setMonth('');\n      setDay('');\n      setYear('');\n    }\n  }, [time]);\n\n  const onKeyDown = (event) =>\n    onKeyDownHelper(event, {\n      onDayChange,\n      onMonthChange,\n      onYearChange,\n    });\n\n  const renderMonthInput = () => {\n    placeholder = 'MM';\n    const onMonthInputBlur = (e) => {\n      setOnChangeDateTrigger({});\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DateInputInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autoComplete=\"off\"\n        key=\"month-input\"\n        data-testid=\"month\"\n        disabled={disabled}\n        name=\"month\"\n        onBlur={onMonthInputBlur}\n        onChange={onMonthChange}\n        value={month}\n        tabIndex={tabIndex}\n        ref={dayRef}\n      />\n    );\n  };\n  const renderDayInput = () => {\n    placeholder = 'DD';\n    const onDayInputBlur = (e) => {\n      setOnChangeDateTrigger({});\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DateInputInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autoComplete=\"off\"\n        key=\"day-input\"\n        data-testid=\"day\"\n        disabled={disabled}\n        name=\"day\"\n        onBlur={onDayInputBlur}\n        onChange={onDayChange}\n        value={day}\n        tabIndex={tabIndex}\n      />\n    );\n  };\n  const renderYearInput = () => {\n    placeholder = 'YY';\n    digits = 4;\n    const onYearInputBlur = (e) => {\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DateInputInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autoComplete=\"off\"\n        key=\"year-input\"\n        data-testid=\"year\"\n        disabled={disabled}\n        name=\"year\"\n        onBlur={onYearInputBlur}\n        onChange={onYearChange}\n        value={year}\n        size=\"l\"\n        tabIndex={tabIndex}\n      />\n    );\n  };\n\n  const renderDateInputs = () => {\n    const inputs = [renderMonthInput(), renderDayInput(), renderYearInput()];\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? <DateInputDivider>/</DateInputDivider> : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n    ];\n  };\n\n  return (\n    <DateInputFluidContainer\n      onClick={handleFluidClick}\n      data-testid=\"date-input-fluidContainer\"\n    >\n    <DateInputWrapper\n      disabled={disabled}\n      ref={innerRef}\n      onKeyDown={onCustomKeyDown}\n      tabIndex={-1}\n      cols={['auto', '6px', 'auto', '6px', 'auto']}\n    >\n      {renderDateInputs()}\n    </DateInputWrapper>\n    </DateInputFluidContainer>\n  );\n};\n\nDateInputs.propTypes = DateInputsPropTypes;\n","/* eslint-disable react/prop-types */\n/* eslint-disable max-lines */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport 'react-dates/initialize';\nimport {\n  DayPickerSingleDateController,\n  SingleDatePickerPhrases,\n} from 'react-dates';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport ChevronLeft from '@elliemae/ds-icons/ChevronLeft';\nimport { renderMonthElement } from '../DatePickerRenderMonth/DatePickerRenderMonth';\nimport DatePickerNavigation from '../DatePickerNavigation/DatePickerNavigation';\nimport DatePickerDay from '../DatePickerDay/DatePickerDay';\n\nconst { classNameElement, classNameBlock } = convertPropToCssClassName(\n  'datepicker-range',\n);\n\nexport default class DSDatePickerController extends React.Component {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    date: '',\n    value: '',\n    enableOutsideDays: false,\n    initialVisibleMonth: moment(),\n    firstDayOfWeek: 0,\n    keepOpenOnDateSelect: true,\n    hideKeyboardShortcutsPanel: true,\n    onPrevMonthClick: () => null,\n    onNextMonthClick: () => null,\n    onClose: () => null,\n    onChange: () => null,\n    onClickEscape: () => null,\n    onDateChange: () => null,\n    phrases: SingleDatePickerPhrases,\n    // displayFormat: 'L',\n    displayFormatDay: 'D',\n    transitionDuration: 0,\n    // verticalSpacing: 0,\n    isDayBlocked: () => false,\n    isOutsideRange: () => false,\n    isDayHighlighted: () => false,\n    numberOfMonths: 1,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: this.getSafeValue(),\n    };\n    this.firstFocusableItem = React.createRef();\n  }\n\n  // eslint-disable-next-line react/state-in-constructor\n  state = {};\n\n  componentDidMount() {\n    this.datePicker.addEventListener('mouseup', this.handleMouseUp, false);\n    document.addEventListener('keydown', this.handleKeyDown, false);\n    setTimeout(() => {\n      if (this.datePicker) {\n        const [calendarDaySelected] = this.datePicker.getElementsByClassName(\n          'CalendarDay__selected',\n        );\n\n        if (calendarDaySelected) calendarDaySelected?.focus();\n        else\n          this.firstFocusableItem.current\n            .closest('.DayPickerNavigation_button')\n            .focus();\n      }\n    }, 400);\n  }\n\n  componentWillUnmount() {\n    this.datePicker.removeEventListener('mouseup', this.handleMouseUp, false);\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  handleMouseUp = () => {\n    const focusedElement = document.activeElement;\n\n    focusedElement.blur();\n  };\n\n  handleKeyDown = (event) => {\n    const [firstDay, ...restOfDays] = document\n      .getElementsByClassName('CalendarMonthGrid_month__horizontal')[1]\n      .getElementsByClassName('CalendarDay');\n    const [lastDay] = restOfDays.slice(-1);\n    const { onClickEscape } = this.props;\n\n    switch (event.key) {\n      case 'Home':\n        firstDay.focus();\n        break;\n      case 'End':\n        lastDay.focus();\n        break;\n      case 'Escape':\n        onClickEscape();\n        break;\n      default:\n        break;\n    }\n  };\n\n  getSafeValue = () => {\n    const { value, date, defaultValue } = this.props;\n    const { selectedDate } = this.state;\n    if (value) {\n      return moment(value);\n    }\n    if (date) {\n      return moment(date);\n    }\n    if (defaultValue) {\n      return moment(defaultValue);\n    }\n    if (selectedDate) {\n      return moment(selectedDate);\n    }\n    return null;\n  };\n\n  isControlled = () => {\n    const { value, date } = this.props;\n    return Boolean(value) || Boolean(date);\n  };\n\n  handleDateChange = (date) => {\n    const { readOnly, onDateChange, onChange } = this.props;\n    if (!readOnly) {\n      if (!this.isControlled()) {\n        this.setState({ selectedDate: date });\n      }\n      onDateChange(date);\n      onChange(date);\n    }\n  };\n\n  handleChange = (dataInput) => {\n    const { onDateChange, onChange } = this.props;\n    const momentvalue = moment(dataInput.target.value);\n    this.setState({ selectedDate: momentvalue });\n    onDateChange(momentvalue);\n    onChange(momentvalue);\n  };\n\n  handleNavClick = (date, nav) => {\n    const [prev, next] = document.getElementsByClassName(\n      'DayPickerNavigation_button',\n    );\n    const { onPrevMonthClick, onNextMonthClick } = this.props;\n\n    if (nav === 'prev') {\n      prev.focus();\n      onPrevMonthClick(date);\n    } else {\n      next?.focus();\n      onNextMonthClick(date);\n    }\n  };\n\n  insideBlur = (event) => {\n    if (!event.currentTarget.contains(event.relatedTarget)) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const {\n      numberOfMonths,\n      enableOutsideDays,\n      transitionDuration,\n      initialVisibleMonth,\n      firstDayOfWeek,\n      keepOpenOnDateSelect,\n      hideKeyboardShortcutsPanel,\n      onClose,\n      phrases,\n      displayFormatDay,\n      isDayBlocked,\n      isOutsideRange,\n      isDayHighlighted,\n      onOutsideClick,\n      key,\n      calendarProps,\n    } = this.props;\n\n    const safedate = this.getSafeValue();\n    const safeinitialMonth =\n      safedate && safedate.isValid()\n        ? () => safedate\n        : () => initialVisibleMonth;\n\n    return (\n      <div onBlur={this.insideBlur}>\n        <div\n          ref={(elem) => {\n            this.datePicker = elem;\n          }}\n          className={classNameBlock(\n            'wrapper-day-picker-single-date-controller',\n          )}\n          {...calendarProps}\n          data-testid=\"calendar-wrapper\"\n        >\n          <DayPickerSingleDateController\n            key={key}\n            date={safedate}\n            enableOutsideDays={enableOutsideDays}\n            firstDayOfWeek={firstDayOfWeek}\n            focused\n            hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n            initialVisibleMonth={safeinitialMonth}\n            isDayBlocked={isDayBlocked}\n            isDayHighlighted={isDayHighlighted}\n            isOutsideRange={isOutsideRange}\n            keepOpenOnDateSelect={keepOpenOnDateSelect}\n            navNext={\n              <DatePickerNavigation\n                className={classNameElement('navigation-next')}\n              />\n            }\n            navPrev={\n              <DatePickerNavigation\n                className={classNameElement('navigation-prev')}\n                icon={ChevronLeft}\n                innerRef={this.firstFocusableItem}\n              />\n            }\n            renderMonthElement={renderMonthElement}\n            numberOfMonths={numberOfMonths}\n            onClose={onClose}\n            onDateChange={this.handleDateChange}\n            onFocusChange={this.handleFocus}\n            onNextMonthClick={this.handleNavClick('next')}\n            onOutsideClick={onOutsideClick}\n            onPrevMonthClick={this.handleNavClick('prev')}\n            phrases={phrases}\n            renderDayContents={(date) => (\n              <DatePickerDay\n                className={classNameElement('day-contents')}\n                date={date.format(displayFormatDay)}\n              />\n            )}\n            transitionDuration={transitionDuration}\n            onTab={(e) => {\n              if (e.target.classList.contains('CalendarDay')) {\n                e.preventDefault();\n                onClose();\n              }\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDSDatePickerController.propTypes = {\n  date: PropTypes.instanceOf(Date, moment),\n  value: PropTypes.oneOf(\n    PropTypes.instanceOf(Date),\n    PropTypes.instanceOf(moment),\n  ),\n  enableOutsideDays: PropTypes.bool,\n  initialVisibleMonth: PropTypes.instanceOf(Date, moment),\n  firstDayOfWeek: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  hideKeyboardShortcutsPanel: PropTypes.bool,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n  onClickEscape: PropTypes.func,\n  onChange: PropTypes.func,\n  onDateChange: PropTypes.func,\n  phrases: SingleDatePickerPhrases,\n  // displayFormat: PropTypes.string,\n  displayFormatDay: PropTypes.string,\n  transitionDuration: PropTypes.number,\n  // verticalSpacing: PropTypes.number,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n  numberOfMonths: PropTypes.number,\n};\n\nDSDatePickerController.defaultProps = {\n  date: '',\n  value: '',\n  enableOutsideDays: false,\n  initialVisibleMonth: moment(),\n  firstDayOfWeek: 0,\n  keepOpenOnDateSelect: true,\n  hideKeyboardShortcutsPanel: true,\n  onPrevMonthClick: () => null,\n  onNextMonthClick: () => null,\n  onClose: () => null,\n  onClickEscape: () => null,\n  onChange: () => null,\n  onDateChange: () => null,\n  phrases: PropTypes.shape({\n    calendarLabel: PropTypes.string,\n    closeDatePicker: PropTypes.string,\n    clearDates: PropTypes.string,\n    focusStartDate: PropTypes.string,\n    jumpToPrevMonth: PropTypes.string,\n    jumpToNextMonth: PropTypes.string,\n    keyboardShortcuts: PropTypes.string,\n    showKeyboardShortcutsPanel: PropTypes.string,\n    hideKeyboardShortcutsPanel: PropTypes.string,\n    openThisPanel: PropTypes.string,\n    enterKey: PropTypes.string,\n    leftArrowRightArrow: PropTypes.string,\n    upArrowDownArrow: PropTypes.string,\n    pageUpPageDown: PropTypes.string,\n    homeEnd: PropTypes.string,\n    escape: PropTypes.string,\n    questionMark: PropTypes.string,\n    selectFocusedDate: PropTypes.string,\n    moveFocusByOneDay: PropTypes.string,\n    moveFocusByOneWeek: PropTypes.string,\n    moveFocusByOneMonth: PropTypes.string,\n    moveFocustoStartAndEndOfWeek: PropTypes.string,\n    returnFocusToInput: PropTypes.string,\n    keyboardNavigationInstructions: PropTypes.string,\n    chooseAvailableStartDate: PropTypes.func,\n    chooseAvailableEndDate: PropTypes.func,\n    dateIsUnavailable: PropTypes.func,\n    dateIsSelected: PropTypes.func,\n  }),\n  // displayFormat: 'L',\n  displayFormatDay: 'D',\n  transitionDuration: 0,\n  // verticalSpacing: 0,\n  isDayBlocked: () => false,\n  isOutsideRange: () => false,\n  isDayHighlighted: () => false,\n  numberOfMonths: 1,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport DatePickerPicker, {\n  PickerPropsTypes,\n} from './DatePickerPicker/DatePickerPicker';\nconst { classNameElement } = convertPropToCssClassName('datepicker-range');\n\nconst noop = () => null;\nfunction DatePickerDropdown({\n  disabled = false,\n  readOnly,\n  onClick = noop,\n  isOpen,\n  menu,\n  zIndex,\n  pickerProps,\n  pickerRef,\n}) {\n  return (\n    <DSPopper\n      contentComponent={menu}\n      isOpen={isOpen}\n      modifiers={{\n        preventOverflow: {\n          enabled: true,\n          padding: 0,\n          boundariesElement: 'window',\n        },\n      }}\n      showArrow={false}\n      triggerComponent={\n        <div>\n          <DatePickerPicker\n            innerRef={pickerRef}\n            {...pickerProps}\n            className={classNameElement('picker')}\n            disabled={disabled}\n            onClick={onClick}\n            readOnly={readOnly}\n          />\n        </div>\n      }\n      zIndex={zIndex}\n    />\n  );\n}\n\nDatePickerDropdown.propTypes = {\n  pickerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  onClick: PropTypes.func,\n  isOpen: PropTypes.bool,\n  menu: PropTypes.element,\n  zIndex: PropTypes.number,\n  pickerProps: PropTypes.shape(PickerPropsTypes),\n};\n\nexport default DatePickerDropdown;\n","import { PropTypes } from 'react-desc';\nimport { noop } from 'lodash';\n\nexport const props = {\n  /** Props to inject to date input wrapper */\n  containerProps: PropTypes.object.description(\n    'Props to inject to date input wrapper',\n  ),\n  /**\n   * Triggers the onBlur when focus moves out of date input\n   */\n  onBlur: PropTypes.func.description(\n    'Triggers the onBlur when focus moves out of date input',\n  ),\n  /**\n   * Triggers the onFocus when the component gets the focus\n   */\n  onFocus: PropTypes.func.description(\n    'Triggers the onFocus when the component gets the focus',\n  ),\n  /**\n   * Triggers the onKeyDown\n   */\n  onKeyDown: PropTypes.func.description('Triggers the onKeyDown'),\n  /**\n   * Allows a function that is triggered once the date input changes\n   */\n  onChange: PropTypes.func.description(\n    'Allows a function that is triggered once the date input changes',\n  ),\n  /**\n   * Triggers when the date is completely set and  only once you have blurred the\n   * corresponding input. For example if you are editing the day and the year and month\n   * are already set, once you completely set the day it will trigger.\n   */\n  onDateChange: PropTypes.func.description(\n    ' Triggers when the date is completely set and  only once you have blurred the corresponding input. For example if you are editing the day and the year and month are already set, once you completely set the day it will trigger.',\n  ),\n  /**\n   * Triggers the onError once one input date is wrong\n   */\n  onError: PropTypes.func.description(\n    'Triggers the onError once one input date is wrong',\n  ),\n  /**\n   * Default value once the component is initialized MMDDYYYY\n   */\n  value: PropTypes.string.description(\n    'Default value once the component is initialized MMDDYYYY',\n  ),\n  /**\n   * Whether the date input is disabled or not\n   */\n  disabled: PropTypes.bool.description(\n    'Whether the date input is disabled or not',\n  ),\n  /**\n   * tab index\n   */\n  tabIndex: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n  ]).description('tab index'),\n};\n\nexport const defaultProps = {\n  onFocus: noop,\n  onBlur: noop,\n  onChange: noop,\n  onDateChange: noop,\n  onKeyDown: noop,\n  onError: noop,\n  value: '',\n  disabled: false,\n  containerProps: {},\n};\n","import React from 'react';\nimport { describe } from 'react-desc';\nimport DSInput from '../../Input';\nimport { DateInputs } from './DateInputs';\nimport { props, defaultProps } from './props';\n\nconst DSDateInputV2 = ({\n  onFocus,\n  onBlur,\n  onChange,\n  onDateChange,\n  onKeyDown,\n  onError,\n  value,\n  disabled,\n  containerProps,\n  tabIndex,\n  innerRef,\n}) => (\n  <DSInput\n    innerRef={innerRef}\n    containerProps={containerProps}\n    customInputType={({ innerRef: ir }) => (\n      <DateInputs\n        disabled={disabled}\n        innerRef={ir}\n        onBlur={onBlur}\n        onChange={onChange}\n        onDateChange={onDateChange}\n        onCustomKeyDown={onKeyDown}\n        onError={onError}\n        time={value}\n        tabIndex={tabIndex}\n      />\n    )}\n    disableTooltip={false}\n    disabled={disabled}\n    onBlur={onBlur}\n    onFocus={onFocus}\n    onKeyDown={onKeyDown}\n    value={value}\n    tabIndex={tabIndex}\n  />\n);\n\nDSDateInputV2.defaultProps = defaultProps;\n\nDSDateInputV2.propTypes = props;\n\nconst DSDateInputV2WithSchema = describe(DSDateInputV2);\nDSDateInputV2WithSchema.propTypes = props;\n\nexport { DSDateInputV2, DSDateInputV2WithSchema };\n","/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable react/state-in-constructor */\n/* eslint-disable no-restricted-globals */\n/* eslint-disable react/prop-types */\n/* eslint-disable max-lines */\nimport React from 'react';\nimport moment from 'moment';\nimport DSInputGroup from '@elliemae/ds-basic/form/InputGroup';\nimport { DSDateInputV2 } from '@elliemae/ds-basic/form/DateInputV2';\nimport DSDatePickerController from './DatePickerController/DatePickerController';\nimport DatePickerDropdown from './DatePickerDropdown';\n\nconst FORMAT = 'MMDDYYYY';\nexport default class DSdatePickerImpl extends React.Component {\n  constructor(props) {\n    super(props);\n    this.pickerRef = React.createRef();\n    this.state = {\n      dataInput: '',\n      selectedDate: this.getSafeValue(),\n      inputFocused: false,\n    };\n  }\n\n  // don't remove this because the component explodes if you do\n  state = {};\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { dataInput: prevVal, selectedDate: prevDate } = prevState || {};\n    const { value: nextVal, date: nextDate } = nextProps;\n\n    const isPrevValMoment = prevVal instanceof moment;\n    const isPrevDateMoment = prevDate instanceof moment;\n    const prevValAsString = isPrevValMoment ? prevVal.format(FORMAT) : prevVal;\n\n    // if users wants to clear, we use '==' to catch both undefined AND null\n    if (nextVal == null && nextDate == null) {\n      return {\n        dataInput: '',\n        selectedDate: null,\n      };\n    }\n\n    // when val is an incomplete state, we don't want to mess with the state\n    //  it's incomplete when length is not the full mmddyyyy (length === 8)\n    if (prevValAsString?.length < 8) {\n      return null;\n    }\n\n    const prevDateAsString = isPrevDateMoment\n      ? prevDate.format(FORMAT)\n      : prevDate;\n\n    const isNextValMoment = nextVal instanceof moment;\n    const isNextDateMoment = nextDate instanceof moment;\n    const nextValAsString = isNextValMoment ? nextVal.format(FORMAT) : nextVal;\n    const nextValAsMoment = isNextValMoment ? nextVal : moment(nextVal);\n    const nextDateAsString = isNextDateMoment\n      ? nextDate.format(FORMAT)\n      : nextDate;\n    const nextDateAsMoment = isNextDateMoment ? nextDate : moment(nextDate);\n\n    const hasValChanged = nextValAsString !== prevValAsString;\n    const hasDateChanged = nextDateAsString !== prevDateAsString;\n\n    const newState = {};\n    let skipStateChange = true;\n\n    // value has priority over date, if both date and value change we take date\n    // as such, order of condition is meaningful\n    if (hasDateChanged) {\n      skipStateChange = false;\n      newState.dataInput = nextDateAsString;\n      newState.selectedDate = nextDateAsMoment;\n    }\n\n    if (hasValChanged) {\n      skipStateChange = false;\n      newState.dataInput = nextValAsString;\n      newState.selectedDate = nextValAsMoment;\n    }\n\n    if (skipStateChange) return null;\n    return newState;\n  }\n\n  onClickPicker = () => {\n    this.setState({ inputFocused: true });\n  };\n\n  getSafeValue = () => {\n    const { value, date, defaultValue } = this.props;\n    const { selectedDate } = this.state;\n    if (value) {\n      return moment(value, FORMAT, true);\n    }\n    if (date) {\n      return moment(date, FORMAT, true);\n    }\n    if (defaultValue) {\n      return moment(defaultValue, FORMAT, true);\n    }\n    if (selectedDate) {\n      return selectedDate;\n    }\n    return null;\n  };\n\n  getSafeInputValue = () => {\n    const safeValue = this.getSafeValue();\n    if (safeValue && safeValue.isValid()) {\n      return safeValue.format(FORMAT);\n    }\n    const { dataInput } = this.state;\n    return dataInput;\n  };\n\n  isControlled = () => {\n    const { value, date } = this.props;\n    return Boolean(value) || Boolean(date);\n  };\n\n  handleDateChange = (date, event) => {\n    const {\n      readOnly,\n      onDateChange,\n      keepOpenOnDateSelect,\n      onChange,\n      onBlur,\n    } = this.props;\n\n    if (!readOnly) {\n      if (!this.isControlled()) {\n        this.setState({ dataInput: date.format(FORMAT), selectedDate: date });\n      }\n      onChange(date.format(FORMAT), date);\n      onDateChange(date);\n      if (!keepOpenOnDateSelect || event.key === 'Enter') {\n        this.setState({ inputFocused: false });\n        onBlur(date.format(FORMAT), date);\n      }\n    }\n  };\n\n  handleInputChange = (dataInput, newDate) => {\n    const { onChange } = this.props;\n    const newState = {\n      dataInput,\n      selectedDate: newDate,\n    };\n    this.setState(() => newState);\n    onChange(dataInput, newDate);\n  };\n\n  handleChange = (newDate) => {\n    if (!newDate) return;\n    const { onDateChange } = this.props;\n    const momentValue = moment(newDate, FORMAT, true);\n    if (!momentValue.isValid()) return;\n    this.setState({ selectedDate: momentValue });\n\n    onDateChange(momentValue);\n  };\n\n  handleFocus = ({ focused }) => {\n    this.setState({ inputFocused: focused });\n  };\n\n  handleCalendarClose = () => {\n    const { onClose } = this.props;\n\n    this.setState({ inputFocused: false });\n    this.handleOnBlur();\n    onClose();\n  };\n\n  handleClickEscape = () => {\n    const { onClose } = this.props;\n\n    this.setState({ inputFocused: false });\n    this.handleOnBlur();\n    onClose();\n  };\n\n  handleOnBlur = () => {\n    setTimeout(() => {\n      const { onBlur, autoClear } = this.props;\n      const { dataInput, selectedDate } = this.state;\n\n      if (moment(selectedDate, FORMAT, true).isValid()) {\n        onBlur(dataInput, selectedDate);\n      } else {\n        if (autoClear) {\n          this.setState({ dataInput: undefined });\n        }\n        onBlur(dataInput, null);\n      }\n    });\n  };\n\n  handleInputFocus = (dataInput) => {\n    const { onFocus } = this.props;\n    onFocus(dataInput);\n  };\n\n  render() {\n    const { inputFocused } = this.state;\n    const {\n      disabled,\n      numberOfMonths,\n      readOnly,\n      enableOutsideDays,\n      transitionDuration,\n      firstDayOfWeek,\n      keepOpenOnDateSelect,\n      hideKeyboardShortcutsPanel,\n      onPrevMonthClick,\n      onNextMonthClick,\n      onClose,\n      phrases,\n      placeholder,\n      displayFormatDay,\n      isDayBlocked,\n      isOutsideRange,\n      isDayHighlighted,\n      tabIndex,\n      zIndex,\n      pickerProps,\n      calendarProps,\n    } = this.props;\n    const safedate = this.getSafeValue();\n    const safeInputValue = this.getSafeInputValue();\n    const hasSelectedDate = !!safedate;\n    return (\n      <DSInputGroup\n        rightAddon={\n          <DatePickerDropdown\n            pickerRef={this.pickerRef}\n            disabled={disabled}\n            isOpen={inputFocused}\n            menu={\n              <div\n                style={{ minHeight: '310px' }}\n                className={\n                  hasSelectedDate\n                    ? 'has-selected-date'\n                    : 'without-selected-date'\n                }\n                data-testid=\"date-picker-portal-wrapper\"\n              >\n                <DSDatePickerController\n                  date={safedate}\n                  displayFormatDay={displayFormatDay}\n                  enableOutsideDays={enableOutsideDays}\n                  firstDayOfWeek={firstDayOfWeek}\n                  hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n                  isDayBlocked={isDayBlocked}\n                  isDayHighlighted={isDayHighlighted}\n                  isOutsideRange={isOutsideRange}\n                  keepOpenOnDateSelect={keepOpenOnDateSelect}\n                  numberOfMonths={numberOfMonths}\n                  onClickEscape={this.handleClickEscape}\n                  onClose={(...args) => {\n                    if (this.pickerRef.current) this.pickerRef.current.focus();\n                    onClose(...args);\n                    this.setState({ inputFocused: false });\n                  }}\n                  onDateChange={this.handleDateChange}\n                  onFocusChange={this.handleFocus}\n                  onNextMonthClick={onNextMonthClick}\n                  onOutsideClick={this.handleCalendarClose}\n                  onPrevMonthClick={onPrevMonthClick}\n                  phrases={phrases}\n                  transitionDuration={transitionDuration}\n                  calendarProps={calendarProps}\n                />\n              </div>\n            }\n            onClick={this.onClickPicker}\n            readOnly={readOnly}\n            zIndex={zIndex}\n            pickerProps={pickerProps}\n          />\n        }\n      >\n        <DSDateInputV2\n          data-testid=\"datepicker-input\"\n          aria-label={placeholder || 'Date Picker Input'}\n          disabled={disabled}\n          onBlur={this.handleOnBlur}\n          onChange={this.handleInputChange}\n          onDateChange={this.handleChange}\n          onFocus={this.handleInputFocus}\n          placeholder={placeholder}\n          tabIndex={tabIndex}\n          value={safeInputValue}\n        />\n      </DSInputGroup>\n    );\n  }\n}\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport 'react-dates/initialize';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport {\n  DatePickerNavigation,\n  DatePickerDay,\n  DatePickerPicker,\n  DatePickerDropdown,\n  DatePickerSingleDate,\n  DatePickerHeader,\n  DatePickerRange,\n  DatePickerRangeHeader,\n  SingleRangeDateSwitcher,\n  renderMonthElement,\n} from './components';\nimport DSDatePickerImpl from './components/DSDatePickerImpl';\nimport DSDatePickerController from './components/DatePickerController/DatePickerController';\nimport {\n  PickerPropsTypes,\n  Picker,\n} from './components/DatePickerPicker/DatePickerPicker';\n\nconst DSDatePicker = ({\n  containerProps = {},\n  id = '',\n  appendToBody = true,\n  className = '',\n  date,\n  value,\n  placeholder = '',\n  disabled = false,\n  required = false,\n  readOnly = false,\n  hasError = false,\n  screenReaderInputMessage = 'Select date',\n  enableOutsideDays = true,\n  initialVisibleMonth = moment(),\n  firstDayOfWeek = 0,\n  keepOpenOnDateSelect = false,\n  hideKeyboardShortcutsPanel = true,\n  onChange = () => null,\n  onDateChange = undefined,\n  onPrevMonthClick = () => null,\n  onNextMonthClick = () => null,\n  onClose = () => null,\n  onFocus = () => null,\n  onBlur = () => null,\n  phrases = SingleDatePickerPhrases,\n  displayFormat = 'L',\n  displayFormatDay = 'D',\n  transitionDuration = 0,\n  verticalSpacing = 0,\n  isDayBlocked = () => false,\n  isOutsideRange = () => false,\n  isDayHighlighted = () => false,\n  numberOfMonths = 1,\n  openDirection = 'down',\n  tabIndex = '',\n  zIndex = 'auto',\n  pickerProps = {},\n  calendarProps = {},\n  autoClear = false,\n}) => {\n  const { cssClassName } = convertPropToCssClassName('datepicker', className, {\n    hasError,\n    readOnly,\n    disabled,\n    id,\n  });\n  const safeDate = date || value;\n  return (\n    <div className={cssClassName} {...containerProps}>\n      <DSDatePickerImpl\n        appendToBody={appendToBody}\n        autoClear={autoClear}\n        date={safeDate}\n        disabled={disabled}\n        displayFormat={displayFormat}\n        displayFormatDay={displayFormatDay}\n        enableOutsideDays={enableOutsideDays}\n        firstDayOfWeek={firstDayOfWeek}\n        hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n        initialVisibleMonth={() =>\n          initialVisibleMonth ? moment(initialVisibleMonth) : moment(safeDate)\n        }\n        isDayBlocked={isDayBlocked}\n        isDayHighlighted={isDayHighlighted}\n        isOutsideRange={\n          isOutsideRange === true || isOutsideRange === false\n            ? () => isOutsideRange\n            : isOutsideRange\n        }\n        keepOpenOnDateSelect={keepOpenOnDateSelect}\n        numberOfMonths={numberOfMonths}\n        onBlur={onBlur}\n        onClose={onClose}\n        onChange={onChange}\n        onDateChange={(...args) => {\n          if (onDateChange) onDateChange(...args);\n        }}\n        onFocus={onFocus}\n        onNextMonthClick={onNextMonthClick}\n        onPrevMonthClick={onPrevMonthClick}\n        openDirection={openDirection}\n        phrases={phrases}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        required={required}\n        screenReaderInputMessage={screenReaderInputMessage}\n        transitionDuration={transitionDuration}\n        value={safeDate}\n        verticalSpacing={verticalSpacing}\n        tabIndex={tabIndex}\n        zIndex={zIndex}\n        pickerProps={pickerProps}\n        calendarProps={calendarProps}\n      />\n    </div>\n  );\n};\n\nconst datePickerProps = {\n  containerProps: PropTypes.shape({}).description(\n    'Set of Properties attached to the main container',\n  ),\n  id: PropTypes.string.description('components id'),\n  appendToBody: PropTypes.bool\n    .description('append component to body or not')\n    .defaultValue(true),\n  className: PropTypes.string.description('html class attribute'),\n  date: PropTypes.instanceOf(Date, moment)\n    .description('selected date')\n    .defaultValue(undefined),\n  value: PropTypes.instanceOf(Date, moment).description('value'),\n  placeholder: PropTypes.string.description('input placeholder value'),\n  autoClear: PropTypes.bool\n    .description(\n      'autoclears the input onblur if the date is not completely set',\n    )\n    .defaultValue(false),\n  disabled: PropTypes.bool\n    .description('disable component or not')\n    .defaultValue(false),\n  required: PropTypes.bool\n    .description('value is required or not')\n    .defaultValue(false),\n  readOnly: PropTypes.bool\n    .description('is read only or not')\n    .defaultValue(false),\n  hasError: PropTypes.bool.description('set error state').defaultValue(false),\n  screenReaderInputMessage: PropTypes.string\n    .description('message to anounce by screen reader')\n    .defaultValue('select date'),\n  enableOutsideDays: PropTypes.bool\n    .description('enable days oustide month or not')\n    .defaultValue(true),\n  initialVisibleMonth: PropTypes.instanceOf(Date, moment).description(\n    'initial month to display',\n  ),\n  firstDayOfWeek: PropTypes.number\n    .description('first day of week')\n    .defaultValue(0),\n  keepOpenOnDateSelect: PropTypes.bool\n    .description('keep picker open when a date is selected')\n    .defaultValue(false),\n  hideKeyboardShortcutsPanel: PropTypes.bool\n    .description('hide keyabord shortcut panel or not')\n    .defaultValue(true),\n  onChange: PropTypes.func.description(\n    `\n      function executed when input changes. This could trigger with invalid dates. It returns a string and a moment\n      if the date is valid.\n    `,\n  ),\n  onDateChange: PropTypes.func.description(\n    'function executed when date changes. This doesnt trigger with invalid dates. It returns a moment object',\n  ),\n  onPrevMonthClick: PropTypes.func.description(\n    'function executed when clicking on prev month button',\n  ),\n  onNextMonthClick: PropTypes.func.description(\n    'function executed when clicking on next month button',\n  ),\n  onBlur: PropTypes.func.description(\n    'function executed when component loses focus',\n  ),\n  onClose: PropTypes.func.description(\n    'function executed when component closes',\n  ),\n  onFocus: PropTypes.func.description(\n    'function executed when component gains focus',\n  ),\n  phrases: PropTypes.shape({\n    calendarLabel: PropTypes.string,\n    closeDatePicker: PropTypes.string,\n    clearDates: PropTypes.string,\n    focusStartDate: PropTypes.string,\n    jumpToPrevMonth: PropTypes.string,\n    jumpToNextMonth: PropTypes.string,\n    keyboardShortcuts: PropTypes.string,\n    showKeyboardShortcutsPanel: PropTypes.string,\n    hideKeyboardShortcutsPanel: PropTypes.string,\n    openThisPanel: PropTypes.string,\n    enterKey: PropTypes.string,\n    leftArrowRightArrow: PropTypes.string,\n    upArrowDownArrow: PropTypes.string,\n    pageUpPageDown: PropTypes.string,\n    homeEnd: PropTypes.string,\n    escape: PropTypes.string,\n    questionMark: PropTypes.string,\n    selectFocusedDate: PropTypes.string,\n    moveFocusByOneDay: PropTypes.string,\n    moveFocusByOneWeek: PropTypes.string,\n    moveFocusByOneMonth: PropTypes.string,\n    moveFocustoStartAndEndOfWeek: PropTypes.string,\n    returnFocusToInput: PropTypes.string,\n    keyboardNavigationInstructions: PropTypes.string,\n    chooseAvailableStartDate: PropTypes.func,\n    chooseAvailableEndDate: PropTypes.func,\n    dateIsUnavailable: PropTypes.func,\n    dateIsSelected: PropTypes.func,\n  })\n    .description('react-dates phrases')\n    .defaultValue(SingleDatePickerPhrases),\n  displayFormat: PropTypes.string\n    .description('display format')\n    .defaultValue('L'),\n  displayFormatDay: PropTypes.string\n    .description('display format day')\n    .defaultValue('D'),\n  transitionDuration: PropTypes.number\n    .description('transition duration')\n    .defaultValue(0),\n  verticalSpacing: PropTypes.number.description('vertical spacing'),\n  isDayBlocked: PropTypes.func.description(\n    'function that returns each day and disables desired dates',\n  ),\n  isOutsideRange: PropTypes.func.description(\n    'function that returns each day and disables outisde range dates',\n  ),\n  isDayHighlighted: PropTypes.func.description(\n    'function that returns each day and higlights desired dates',\n  ),\n  numberOfMonths: PropTypes.number.description('amount of months'),\n  openDirection: PropTypes.string\n    .description('open direction of the popup')\n    .defaultValue('down'),\n  tabIndex: PropTypes.string.description('overrides tab index of the element'),\n  zIndex: PropTypes.string.description('overrides z-index of the element'),\n  pickerProps: PropTypes.shape(PickerPropsTypes).description(\n    'props to be passed to the picker container',\n  ),\n  calendarProps: PropTypes.shape({ tabIndex: PropTypes.number }).description(\n    'props to be passes to the calendar container',\n  ),\n};\n\nDSDatePicker.propTypes = datePickerProps;\n\nconst DatePickerWithSchema = describe(DSDatePicker);\nDatePickerWithSchema.propTypes = datePickerProps;\n\nexport {\n  DatePickerNavigation,\n  DatePickerDay,\n  DatePickerPicker,\n  DSDatePickerController,\n  DatePickerDropdown,\n  DatePickerSingleDate,\n  DatePickerHeader,\n  DatePickerRange,\n  DatePickerRangeHeader,\n  SingleRangeDateSwitcher,\n  Picker,\n  renderMonthElement,\n  DatePickerWithSchema,\n};\n\nexport default DSDatePicker;\n"],"sourceRoot":""}