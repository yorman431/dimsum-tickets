{"version":3,"sources":["../../../../src/Popover/usePopoverProviderState.js","ZipCodeSearch/PUI-5716.js","../../../../src/TruncatedTooltipText/TooltipTextProvider.js","../../../../src/TruncatedTooltipText/DSTruncatedTooltipText.js","../../../../src/hooks/useDerivedStateFromProps.js","../../src/timer.js","../../src/domHelpers.js","../../src/createGridComponent.js","../../src/createListComponent.js","../../src/VariableSizeList.js","../../src/FixedSizeList.js","../../src/shallowDiffers.js","../../src/areEqual.js","../../../../../src/form/TextBox/DSTextBox.js","../../../../src/FocusGroup/useFocusGroupItem.js","../../../src/MoreOptionsVert.js","../../../src/Search.js","../../../src/CheckableGroup.js","../../../../../src/form/SearchBox/withSearchable.js","../node_modules/react-text-mask/dist/reactTextMask.js","../../../../../src/form/SearchBox/SearchBoxImpl.js","../../../../src/Menu/MenuContext.js","../../../../src/Menu/VirtualMenuList.js","../../../../../src/Menu/utils/useHeightByAmountOfItems.js","../../../../../src/Menu/MenuItems/SearchableGroup.js","../../../../../src/Menu/MenuItems/Separator.js","../../../../../src/Menu/MenuItems/CheckboxGroup.js","../../../../../src/Menu/MenuItems/RadioGroup.js","../../../../../src/form/RequiredMark/RequiredMark.js","../../../src/ChevronSmallRight.js","../../../src/Checkmark.js","../../../../../src/form/InputGroup/AddonWrapper.js","../../../../../src/form/SearchBox/DSSearchBox.js","../../../src/Menu/MenuItems/SubMenu.js","../../../src/Menu/MenuItems/SelectionGroup.js","../../../src/Menu/MenuItems/MenuItemCheckbox.js","../../../src/Menu/MenuItems/menuItemFactory.js","../../../src/Menu/MenuItems/MenuItem.js","../../../src/Menu/MenuItems/MenuItemCheckable.js","../../../src/Menu/MenuItems/MenuItemRadio.js","../../../src/Menu/Menu.js","../../src/ResizeObserver.ts","../../../../src/hooks/useExecutionTimer.js","../../../../../src/form/InputGroup/DSInputGroup.js","../../src/ContentRect.ts","../../../../src/FocusGroup/focusGroupManagerHoc.js","../../../src/DropdownMenuContext.js","../../../src/DropdownMenuProvider.js","../../../src/MenuItemGroupSelectionHOC.js","../../../src/MenuItemClickableHOC.js","../../../src/decoratedMenuItemFactory.js","../../../src/DropdownMenuLoadingIndicator.js","../../../src/DropdownMenuRenderer.js","../../../src/DropdownMenuWrapper.js","../../../../../ds-basic/src/Popper/positions.js","../../../../../ds-basic/src/Popper/interaction.js","../../../src/DSDropdownMenu.js","../../src/ResizeObservation.ts","../../src/ResizeObserverEntry.ts","../../../../src/GroupContext/Group.js","../../../../src/GroupContext/GroupContext.js","../../../../../../src/form/FormItem/Label/DSLabel.js","../../../../src/TextWrapper/DSTextWrapper.js","../../../../../src/form/FloatingLabelInput/getSvgPath.js","../../../../../src/form/FloatingLabelInput/FloatingLabelInputImpl.js","../../../../../src/form/FloatingLabelInput/DSFloatingLabelInput.js","../../../../../src/form/FormItem/Feedback.js","../../../../../../src/form/FormItem/Suffix/Suffix.js","../../../../../src/form/FormItem/DSFormItemLayout.js","../../../src/form/InputMask/addons/NumberMask.js","../../../src/form/InputMask/addons/PercentMask.js","../../../src/form/InputMask/MaskTypes.js","../../../src/utils/prop-types.js","../../../src/Button/propTypes.js","../../../src/Button/DSButton.js","../../../src/Portal/ie-remove-polyfill.js","../../../src/Portal/DSPortal.js","../../../src/Backdrop/Backdrop.js","../../../src/Overlay/DSOverlay.js","../../../src/Popper/getArrowStylesBySize.js","../../../src/Popper/PopperContent.js","../../../src/Popper/interaction.js","../../../src/Popper/PopperImpl.js","../../../src/Popper/positions.js","../../../src/Popper/DSPopper.js","../../../src/Tooltip/TooltipType.js","../../../src/Tooltip/DSTooltip.js","../../../src/form/Input/InputAddonWrapper.js","../../../src/form/Input/showEllipsis.js","../../../src/form/Input/InputImpl.js","../../../src/form/Input/DSInput.js","../../../src/form/TextBox/DSTextBox.js","../../../src/form/InputMask/DSInputMaskImpl.js","../../../src/form/InputMask/DSInputMask.js","../../../src/ZipCodeSearch/components/blocks.js","../../../src/ZipCodeSearch/components/helper.js","../../../src/ZipCodeSearch/DSZipCodeSearch.js"],"names":["initialState","reference","visible","value","options","delay","triggerRef","useRef","useState","tooltipState","setTooltipState","useExecutionTimer","state","prevState","showTooltip","hideTooltip","handleHideTooltip","useEffect","window","throttle","show","e","target","hide","memo","search","setSearch","extraInputProps","tabIndex","onSearch","v","includes","feedbackMessage","hasError","inputComponent","DSZipCodeSearch","labelText","onBlur","console","log","validationMessage","TruncatedTooltipContext","React","Provider","TooltipTextProvider","children","tooltipDelay","placement","tooltipOptions","usePopoverProviderState","zIndex","setZIndex","useMemo","boundaries","showArrow","content","referenceEl","style","pointerEvents","Text","styled","DSTruncatedTooltipText","containerProps","otherTextProps","tooltipContext","useContext","handlers","onMouseEnter","onMouseLeave","truncatedTooltipTextProps","PropTypes","tooltipPlacement","positions","undefined","describe","TruncatedTooltipTextWithSchema","defaultPropUpdateOnChange","prop","defaultShouldUpdate","prevProp","stateValue","isEqual","setStateWithUpdate","onUpdate","setState","isFunction","shouldUpdate","updateOnStateChange","handleSetState","nextProp","now","performance","Date","cancelTimeout","timeoutID","cancelAnimationFrame","requestTimeout","callback","start","id","requestAnimationFrame","cachedRTLResult","getRTLOffsetType","recalculate","outerDiv","document","outerStyle","innerDiv","innerStyle","defaultItemKey","index","createListComponent","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","instance","isScrolling","scrollDirection","scrollOffset","scrollUpdateWasRequested","memoizeOne","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","direction","itemSize","layout","itemStyleCache","offset","size","isHorizontal","isRtl","offsetHorizontal","position","left","right","top","height","width","event","clientWidth","scrollLeft","scrollWidth","Math","clientHeight","scrollHeight","scrollTop","outerRef","validateSharedProps","nextProps","this","align","itemCount","initialScrollOffset","className","innerRef","innerElementType","innerTagName","itemData","itemKey","outerElementType","outerTagName","useIsScrolling","onScroll","startIndex","stopIndex","items","createElement","data","key","_getItemStyle","estimatedTotalSize","ref","overflow","WebkitOverflowScrolling","willChange","props","overscanCount","overscanBackward","overscanForward","getItemMetadata","itemMetadataMap","instanceProps","lastMeasuredIndex","itemMetadata","i","findNearestItemBinarySearch","low","middle","high","currentOffset","findNearestItemExponentialSearch","interval","estimatedItemSize","totalSizeOfMeasuredItems","VariableSizeList","maxOffset","minOffset","findNearestItem","shouldForceUpdate","FixedSizeList","lastItemOffset","middleOffset","numVisibleItems","shallowDiffers","prev","attribute","next","areEqual","prevStyle","prevProps","prevRest","nextStyle","nextRest","DSTextBox","autoFocus","disabled","maxLength","minLength","fluidWidth","placeholder","readOnly","type","min","max","clearable","leftComponent","rightComponent","required","variant","otherProps","aria-label","role","DSTextBoxWithSchema","useFocusGroupWithState","register","unregister","otherActions","createIcon","paths","useCheckableGroup","activeProp","active","multi","onCheck","useDerivedStateFromProps","setActive","handleCheck","prevActive","nextActive","addOrRemove","child","checked","Array","cloneElement","onClick","runAll","CheckableGroup","func","WrappedComponent","Searchable","debounce","onKeyUp","searchOnEnter","property","clearOnSearch","query","onChange","rest","buttonRef","prevPropValue","string","module","exports","require","t","n","r","o","loaded","call","m","c","p","__esModule","default","TypeError","a","ReferenceError","Object","defineProperty","conformToMask","s","assign","arguments","length","prototype","hasOwnProperty","l","enumerable","configurable","writable","f","get","h","y","b","u","__proto__","getPrototypeOf","apply","concat","setRef","bind","create","constructor","setPrototypeOf","inputElement","textMaskInputElement","update","initTextMask","pipe","mask","guide","placeholderChar","showMask","toString","isNil","keys","some","render","indexOf","keepCharPositions","defaultValue","PureComponent","propTypes","oneOfType","array","bool","shape","isRequired","number","defaultProps","strFunction","isArray","convertMaskToPlaceholder","Error","JSON","stringify","map","RegExp","join","isString","String","isNumber","isNaN","processCaretTraps","push","splice","maskWithoutCaretTraps","indexes","Symbol","iterator","previousConformedValue","d","currentCaretPosition","g","k","C","O","T","P","x","w","abs","S","_","slice","M","split","char","isNew","j","E","R","V","N","A","B","I","shift","F","q","test","D","L","W","J","substr","U","H","conformedValue","meta","someCharsRejected","previousPlaceholder","rawValue","indexesOfPipedChars","caretTrapIndexes","toLowerCase","filter","Y","z","G","activeElement","setSelectionRange","selectionEnd","rejected","navigator","userAgent","setTimeout","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","replace","name","framesToPop","object","symbol","any","arrayOf","element","instanceOf","node","objectOf","oneOf","exact","checkPropTypes","SearchBoxImpl","disableButton","showIcon","buttonType","icon","iconSize","borderColor","borderLeft","withSearchable","MenuItem","itemHeight","amountItemsInWindow","computedListHeight","useHeightByAmountOfItems","amountItems","itemsLength","calculateHeight","SearchBoxWrapper","aggregatedClasses","NoOptionsWrapper","SearchableGroup","searchTerm","searchTermProp","noOptionsText","focusOnOpen","searchRef","setSearchTerm","filteredChildren","DSMenuSearchableGroupWithSchema","focusGroupManagerHoc","Li","Title","MenuSeparator","title","showSeparator","DSMenuSeparatorWithSchema","CheckboxGroup","DSMenuCheckboxGroupWithSchema","RadioGroup","DSMenuRadioGroupWithSchema","cssClassName","convertPropToCssClassName","optional","Container","InputAddon","AddonWrapper","leftAddon","rightAddon","childType","Component","DSSearchBox","searchBoxProps","SearchBoxWithSchema","SubMenu","noAddon","label","interactionType","subitems","rightAddonType","disabledAddonInactive","checkableProps","customRenderer","closeMenu","itemRef","useHiddenController","interaction","onShow","onHide","focusItemByNode","useFocusGroupItem","hoverHandlers","leftIcon","color","handleShowSubItemsWithMouse","BUTTON_VARIANT","DEFAULT","contentComponent","focusKeyBindings","ArrowLeft","onExitFocusGroup","isOpen","onOpen","opening","triggerComponent","onKeyDown","DSSubMenuWithSchema","noop","SelectionGroup","searchable","onSelect","renderedItems","menuItemFactory","item","decoratedGroupChildren","MenuItemCheckbox","DSMenuSelectionGroupWithSchema","itemTypes","separator","menuitem","radio","checkbox","submenu","fallback","defaultItem","itemsObject","parsedType","renderMenuItems","factory","option","ItemComponent","onMouseDown","Content","Addon","empty","fixedItem","renderAddon","addon","addonId","classProps","renderAddons","addons","Wrapper","calculateSize","as","maxOption","menuCxt","wrapperProps","omit","mergeRefs","MouseEvent","view","bubbles","cancelable","maxWidth","current","tabindex","MenuItemCheckable","checkIcon","useCheckable","checkAddon","DSMenuItemWithSchema","MenuItemRadio","DSMenuItemCheckeableWithSchema","DSMenuItemRadioWithSchema","MenuComponent","menuComboBox","isChildOfType","DSMenu","MenuTag","animated","ul","onClickOutside","minWidth","responsiveHeight","menuRef","focusFirst","useHiddenTransition","hiddenProps","nextChildren","forceLeftAddon","useOnClickOutside","data-testid","overflowY","maxHeight","WrappedMenu","loop","DSMenuWithSchema","ro","startFn","cleanFn","delayTime","startTimer","closeTimer","args","clearTimeout","DSInputGroup","InputComponents","DSInputGroupWithSchema","onFocusPrevGroup","keyBindings","onSelectMenuItem","onOpenMenu","onClose","selection","singleGroupSelection","onSelectChange","isMenuOpen","setMenuOpen","useCallback","openMenu","handleItemClick","group","nextSelection","activeState","selectionItem","toggleInObject","handleCloseOnClick","valueProvider","onItemClick","handlerName","restProps","propHandler","handler","defaultConfig","config","Menu","MenuItemClickableHOC","MenuItemGroupSelectionHOC","preventOverflow","customMenu","contentOffset","contentStyle","menuProps","referenceNode","focusOnOpenProp","onClickOutsideMenu","itemsRenderer","loading","setFocusOnOpenMenu","nestedMax","getMax","optionsRendererd","renderOptions","dropdownBlockName","getComponentFromProps","blockName","Position","Interaction","interactions","DSDropdownMenu","dropdownMenuProps","DropdownMenuWithSchema","getValueItem","currentTarget","toggleItemValue","newvalue","res","Group","activeValue","prevValue","multiple","newValue","DSLabel","htmlFor","truncateText","isGroup","Tag","DSTextWrapper","text","maxCharacters","textEllipsis","textAlignment","wordBreak","classNameElement","displayText","resultIndex","result","word","textWrapperProps","TextWrapperWithSchema","labelWidth","radiusStyle","hasRightRadius","hasLeftRadius","notchWidth","radius","parseFloat","cornerWidth","paddedNotchWidth","extraSizeForH","extraSizeForLeftV","extraSizeForRightV","extraSizeForTopH","FloatingLabel","OutlineIdle","Outline","OutlinePath","FloatingLabelInputImpl","ResizeObserver","wrapperRef","prevSizes","shouldUpdateSvgPath","labelEl","wrapperEl","outlineIdleEl","elStyles","leftRadius","rightRadius","focused","valueAccessor","path","getSvgPath","ariaLabel","onFocus","useSubfix","inputProps","InputComponent","onMouseOut","onMouseOver","handleMouseOver","labelRef","outlinePathRef","outlineIdleRef","arialLabel","labelComponent","FeedbackSpan","Suffix","SuffixInputWrapper","SuffixWrapper","leftLabel","WrapperContent","WrapperContentGroup","FORMITEM_LAYOUT_VARIANTS","DSFormItemLayout","floatingLabel","LabelComponent","feedbackComponent","FeedbackComponent","Feedback","validationState","onPaste","extraContent","suffix","floatingLabelOverride","WrapperContentComp","autofocus","renderInput","Input","renderFloating","InputWithLabel","withFeedback","Boolean","DSFormItemLayoutWithSchema","minusRegExp","nonDigitsRegExp","digitRegExp","convertToMask","strNumber","addThousandsSeparator","thousandsSeparatorSymbol","MASK_TYPES","DATE","DATE_TIME","PHONE","PHONE_INTENATIONAL","SSN","US_ZIP_CODE","NUMBER","prefix","includeThousandsSeparator","allowDecimal","decimalSymbol","decimalLimit","requireDecimal","allowNegative","allowLeadingZeroes","integerLimit","prefixLength","suffixLength","thousandsSeparatorSymbolLength","rawValueLength","Number","parseInt","isNegative","indexOfLastDecimal","hasDecimal","integer","fraction","thousandsSeparatorRegex","numberOfThousandSeparators","numberMask","PERCENT","BUTTON_TYPE","BUTTON_SIZE","btnPropTypes","intent","onKeyPress","DSButton","pressed","setPressed","Button","Element","iconOnly","propsToRemoveFromFinalElement","intentBlockName","intentClassName","aria-disabled","aria-pressed","cx","DSButtonWithSchema","global","NodeList","HTMLCollection","canRenderPortal","ReactDOM","DSPortal","isMounted","onRender","DOCUMENT","container","BackdropTag","Backdrop","events","OverlayContainer","inline","opened","DSOverlay","overlayStack","overlayIndex","hasClickedOverlay","elem","overlayRef","usePortal","hasBackdrop","backDropZIndex","overlay","getArrowStylesBySize","basePosition","borderWidth","transform","bottom","Keyframes","PopperContent","onContentDestroyed","data-placement","viewBox","arrowProps","scheduleUpdate","closeAnimationConfig","openAnimationConfig","computedStyle","native","onRest","states","open","from","to","close","animationStyle","destroyed","modifiers","referenceElement","PopperImpl","onPlacementChange","referenceProps","handleTriggerClick","canClose","isOnTrigger","prevPropIsOpen","delayOpen","delayClose","popperData","renderReference","componentInnerRef","compRef","targetProps","getInteractionObject","arrowSize","arrowGap","customPopper","allModifiers","enabled","padding","boundariesElement","updatePopoverState","fn","order","triggerHandler","popperContentProps","Reference","DSPopper","opacity","duration","wrapExtraComponent","getTargetFromChildren","getContentFromChildren","TooltipType","TooltipContainer","TooltipText","DSTooltip","PopperPositions","DEFAULT_DELAY_CLOSE","DEFAULT_DELAY_OPEN","PopperInteractions","springAnimationComponent","tooltipType","otherTooltipProps","tooltipBlockName","tooltipProps","TooltipWithSchema","InputWrapper","error","InputAddonWrapper","renderAddonComponent","components","comp","component","rightComponents","leftComponents","getRightAddon","getLeftAddon","showEllipsis","WrapperForTooltipInput","InputCustomWrapper","ClearableButton","getValidComponents","InputImpl","client","onClear","focus","handleClear","isShowElipsisActive","disableTooltip","customInputType","autoComplete","DSInput","getSafeValue","setCaretPosition","ctrl","pos","range","applyMaskFormat","safeValue","maskedValue","DSInputMaskImpl","skypchange","originalValue","end","masked","isActive","DSInputMask","DSInputMaskWithSchema","InputSearchWrapper","noAddonOptions","op","selectRightOptions","activeCount","searchValue","setValue","setOpen","isInputFocus","setInputFocus","isSelected","setSelected","onTypeInInput","onFocusInput","onInnerBlur","onSelectItem","zipcodeSearchProps","noOptions","ZipCodeSearchWithSchema"],"mappings":"2tBAIA,SAAiC,GAQ9B,QAPDA,oBAOC,MAPc,CACbC,UADa,KAEbC,SAFa,EAGbC,MAHa,GAIbC,QAAS,IAGV,EADDC,EACC,EADDA,MAEMC,EAAaC,mBADlB,EAEuCC,mBAFvC,sBAEMC,EAFN,KAEoBC,EAFpB,OAmBkCC,aAftB,SAAAC,GACXF,GAAgB,SAAAG,GAAS,0BAGvBX,SAAS,UAGA,SAAAU,GACXF,GAAgB,SAAAG,GAAS,0BAGvBX,SAAS,SAfZ,sBAmBMY,EAnBN,KAmBmBC,EAnBnB,KA0BKC,EAAoB,SAAAJ,GACxBG,MAgBF,OAbAE,qBAAU,WAGR,OAFAC,iCAAkCC,mBAASH,EAA3CE,SACAA,sCACO,WACLA,oCAEEC,mBAASH,EAFXE,SAKAA,yCAED,CAACT,EAXJQ,YAaO,CACLG,KAvBwB,SAACR,EAAOS,GAChCf,UAAqBe,EAArBf,OACAQ,EAAY,EAAD,YAAab,UAAWoB,EAAEC,WAsBrCC,KAFK,EAGLX,MAAOH,K,uFC9BIe,yBAxBG,KAAO,MAAD,EACIhB,qBADJ,mBACfL,EADe,aAEMK,mBAAS,KAFf,mBAEfiB,EAFe,KAEPC,EAFO,KAKtB,OACE,6BACE,kBAAC,IAAD,CACEC,gBAAiB,CACfC,SAAU,GACVC,SAAUC,GAAKJ,EAAUI,GACzB1B,SAASqB,EAAOM,SAAS,MAAQ,KAEnCC,gBAAgB,gCAChBC,SAAUR,EAAOM,SAAS,MAC1BG,eAAgBC,IAChBC,UAAU,eACVC,OAbe,IAAMC,QAAQC,IAAI,0BAcjCC,kBAAmBf,EAAOM,SAAS,MAAQ,mBAAqB,KAChE5B,MAAOA,Q,+LCnBFsC,EAA0BC,oBAE/BC,EAAaF,EAAbE,SAER,SAASC,EAAoB,GAK1B,IAJDC,EAIC,EAJDA,SAIC,IAHDC,oBAGC,MAHc,IAGd,MAFDC,iBAEC,MAFW,MAEX,EADEC,EACF,yDAKGC,YAAwB,CAAE5C,MAAOyC,IAH7BhC,EAFP,OAGOC,EAHP,OAIQN,EAJR,UAM2BD,mBAN3B,wBAMM0C,EANN,KAMcC,EANd,KAQKhD,EAAQiD,mBACZ,iBAAO,CACLtC,YADK,EAELC,YAFK,EAGLoC,eAJJ,IASA,OACE,qBAAUhD,MAAOA,GAAjB,EAEGM,EAAA,QACC,mCACE4C,WADF,SAEEN,UAFF,EAGEO,WAAS,GAHX,EAKO7C,WALP,IAME8C,QAAS9C,EANX,MAOE+C,YAAa/C,EAPf,UAQEgD,MAAO,CAAEC,cAAF,OAAyBR,UAChChD,QAASO,EAAaP,WAb9B,MAoBF0C,eACAA,kB,6KCzCMe,EAAOC,UAAH,4CAAGA,CAAH,CAAV,mGAQMC,EAAyB,SAAC,GAK1B,QAJJC,sBAII,MAJa,GAIb,MAHJ3D,aAGI,MAHI,GAGJ,MAFJ+C,cAEI,MAFK,IAEL,EADDa,EACC,mDACEC,EAAiBC,qBAAvB,KAKA,GAJAhD,qBAAU,WACJiC,GAAJ,GAA8Bc,iBAC7B,CAFH/C,KAIA,EAAqB,OAAOd,EANxB,IAQIW,EAA6BkD,EARjC,YAQiBjD,EAAgBiD,EARjC,YA2BEE,EAAWpD,EACb,CAAEqD,aAlBmB,SAAC9C,GAAM,IA3BR,EA4BdC,EAAWD,EADW,OAE1BC,IA7BkB,EA6BSA,EAAQA,EAAvC,wBA7BqB,8BA8BnBR,EACE,CACEX,MADF,EAEEF,UAAWqB,GAHfR,IAekCsD,aALb,SAAC/C,GACxBN,EAAY,CAAEd,UAAWoB,EAAEC,WAG7B,GAGA,OACE,0CADF,IAOI+C,EAA4B,CAChCP,eAAgBQ,+BADgB,oDAIhCnE,MAAOmE,sBAAoB,CAACA,YAAD,OAAmBA,YAAvCA,qBAJyB,iEAOhCC,iBAAkBD,kBAAgB,CAChCE,IADgC,WAEhCA,IAFgC,SAGhCA,IAHgC,KAIhCA,IAJgC,UAKhCA,IALgC,IAMhCA,IANgC,QAOhCA,IAPgC,YAQhCA,IARgC,MAShCA,IATgC,UAUhCA,IAVgC,aAWhCA,IAXgC,OAYhCA,IAZgC,WAahCA,IAbgC,WAchCA,IAdgC,KAehCA,IAfgBF,uBAPc,2BAwBhCxB,aAAcwB,+BAxBkB,6BAyBhCpB,OAAQoB,6EAKVT,eAAsC,CACpCC,eADoC,GAEpC3D,MAFoC,GAGpCoE,sBAHoC,EAIpCzB,kBAAc2B,GAGhBZ,cAEuCa,mBAASb,GAChDc,Y,6ECjGMC,EAA4B,SAAAC,GAAI,UAEtC,SAASC,EAAoB,GAAgC,IAA9BD,EAA8B,EAA9BA,KAAME,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAC7C,OAAQC,kBAAQJ,EAAT,KAA6BI,kBAAQJ,EAA5C,GAGF,SAASK,EAAmBC,EAAUC,GACpC,OAAO,SAAAxE,GACLwE,GAAS,SAAAvE,GAAS,OAChBsE,EAASE,wBAAoBzE,EAApByE,GAAD,EADQ,O,IAMP,SAAiCR,GAAoB,IAAdzE,EAAc,uDAAJ,GAAI,EAK9DA,EAL8D,SAEhE+E,OAFgE,YAK9D/E,EAL8D,aAGhEkF,OAHgE,YAK9DlF,EAL8D,oBAIhEmF,OAJgE,WAOnC/E,mBAAS2E,EAASN,EAPiB,wBAO3DG,EAP2D,KAO/CI,EAP+C,KAQ5DI,EAAiBD,EACnBL,EAAmBC,EADmB,GAA1C,EAGMJ,EAAWxE,iBAAjB,GAEA,GACE+E,EAAa,CACXT,KADW,EAEXE,SAAUA,EAFC,QAGXC,eAEF,CACA,IAAMS,EAAWN,EAASN,EAAME,EAAhC,SACAK,KAGF,OADAL,YACO,CAACC,EAAR,K,4LCjCIU,EAFmB,kBAAhBC,aADT,oBAC4CA,YAAP,IAGjC,W,OAAMA,YAAN,OACA,W,OAAMC,KAAN,OAMG,SAASC,EAAcC,GAC5BC,qBAAqBD,EAArBC,IAGK,SAASC,EAAeC,EAAxB,G,IACCC,EAAQR,I,IAURI,EAAuB,CAC3BK,GAAIC,uB,SATN,IACMV,OAAJ,EACEO,aAEAH,KAAeM,sBAAfN,O,OAQJ,ECPF,IAAIO,EAAJ,KAQO,SAASC,EAAiBC,G,QAA8C,IAA9CA,OAAwB,GACnDF,UAAJ,EAA6C,C,IACrCG,EAAWC,uBAAjB,OACMC,EAAaF,EAAnB,MACAE,eACAA,gBACAA,oBACAA,kB,IAEMC,EAAWF,uBAAjB,OACMG,EAAaD,EAAnB,M,OACAC,gBACAA,iBAEAJ,iBAEEC,SAAF,oBAEID,aAAJ,EACEH,yBAEAG,eAEEH,EADF,IAAIG,aACFH,WAEAA,sBAIFI,SAAF,oBAEA,E,OAGF,ECwvBF,IClsBMI,EAAiB,SAACC,EAAD,G,OAAA,GAaR,SAASC,EAAoB,G,QAC1CC,EAmBE,EAnBFA,cACAC,EAkBE,EAlBFA,sBACAC,EAiBE,EAjBFA,YACAC,EAgBE,EAhBFA,8BACAC,EAeE,EAfFA,uBACAC,EAcE,EAdFA,0BACAC,EAaE,EAbFA,kBACAC,EAYE,EAZFA,sCACAC,EAWE,EAXFA,c,kCAuCE,G,2BACE,UA3BFC,eAAsBH,EAAkB,EAAD,mC,EACvCI,eAyB6B,E,EAxB7BC,2BAA+C,K,EAU/C/G,MAAe,CACbgH,SAAU,OAAF,IAAE,CAAF,YADK,IAEbC,aAFa,EAGbC,gBAHa,UAIbC,aACE,kBAAO,QAAP,oBACI,QADJ,oBALW,EAQbC,0BAA0B,G,EAMC,4B,EAAA,qBAgMNC,aACrB,kB,OAMI,QAAF,gBAA6D,CAC3DC,mBAD2D,EAE3DC,kBAF2D,EAG3DC,kBAH2D,EAI3DC,wB,EA3MuB,qB,EAAA,cAoNbJ,aACd,gB,OAKI,QAAF,SAA+C,CAC7CH,gBAD6C,EAE7CC,aAF6C,EAG7CC,gC,EA7NuB,qB,EAAA,cAuQb,Y,IASd,E,EARwC,EADC,MACjCM,EADiC,YACtBC,EADsB,WACZC,EADY,SAGnCC,EAAiB,qBACrBlB,GADqB,EAErBA,GAFqB,EAGrBA,GAHF,G,GAOIkB,iBAAJ,GACEhF,EAAQgF,EAARhF,OACK,C,IACCiF,EAAS1B,EAAc,EAAD,QAAoB,EAAhD,gBACM2B,EAAOzB,EAAY,EAAD,QAAoB,EAFvC,gBAKC0B,EACJN,kBADF,eACgCE,EAE1BK,EAAN,QAAcP,EACRQ,EAAmBF,EAAe,EAAxC,EACAH,KAAwBhF,EAAQ,CAC9BsF,SAD8B,WAE9BC,KAAMH,OAAQpE,EAFgB,EAG9BwE,MAAOJ,EAAQC,OAHe,EAI9BI,IAAMN,EAJwB,EAIT,EACrBO,OAASP,EALqB,OAKND,EACxBS,MAAOR,EAAeD,EAAO,Q,OAIjC,G,EAvS2B,0B,EAAA,mBA2SRV,aAAW,gB,MAAA,M,EA3SH,oBAoVP,Y,MAC6BoB,EADC,cAC1CC,EAD0C,cAC7BC,EAD6B,aACjBC,EADiB,c,EAElD,UAAc,SAAA3I,G,GACRA,iBAAJ,E,OAIE,K,IAGMyH,EAAc,EARG,gBAUrBP,EAAJ,E,GACA,QAAIO,E,OAKMhC,K,IACN,WACEyB,K,UAEF,sBACEA,EAAeyB,IAAfzB,E,OAMNA,EAAe0B,WAEbA,WAAuBD,EAFzBzB,IAKO,CACLF,aADK,EAELC,gBACEjH,2BAHG,WAILkH,aAJK,EAKLC,0BAA0B,KAE3B,EAvCH,6B,EAtV2B,kBAgYT,Y,MACgCqB,EADF,cACxCK,EADwC,eAC1BC,EAD0B,eACZC,EADY,Y,EAEhD,UAAc,SAAA/I,G,GACRA,iBAAJ,E,OAIE,K,IAIIkH,EAAe0B,WAEnBA,WAAoBE,EAFtB,I,MAKO,CACL9B,aADK,EAELC,gBACEjH,2BAHG,WAILkH,aAJK,EAKLC,0BAA0B,KAE3B,EArBH,6B,EAlY2B,gBA0ZX,Y,IACR6B,EAAa,EADe,e,EAGpC,YAEA,oBAAWA,EACTA,KAEAA,2BACOA,GACPA,iBAHK,aAKLA,c,EAtayB,2BA0aA,WAC3B,OAAI,8BACFhE,EAAc,EAAdA,4B,EAGF,2BAAkCG,EAChC,EAD8C,kBA9etD,M,EA+DiC,kBAqbT,W,EAClB,gC,EAEA,SAAc,CAAE6B,aAAa,IAAS,W,EAGpC,gC,qBAtdN,uC,OAmCIiC,EAAoBC,EAApBD,GACAtC,KACA,M,2BArCJ,qBAyCIO,EAAe0B,WAAf1B,G,KAEA,UAAc,SAAAlH,G,OACRA,iBAAJ,EACE,KAEK,CACLiH,gBACEjH,2BAFG,WAGLkH,aAHK,EAILC,0BAA0B,KAE3BgC,KAVH,6B,EA3CJ,gCAwDmE,IAArCC,MAAuB,Q,IACzCC,EAAcF,KADyC,gBAEvDjC,EAAiBiC,KAFsC,mBAI/DlD,EAAQ2C,WAAYA,WAAgBS,EAApCpD,I,KAEA,SACEK,EACE6C,KAD2B,YAK3BA,KANJ,kB,EA9DJ,6B,MA0EuDA,KADjC,MACV1B,EADU,YACC6B,EADD,sBACsB3B,EADtB,S,GAGiB,kBAAxB2B,GAAX,MAA+CH,KAAKtC,UAAmB,C,IAC/DmC,EAAaG,KADkD,UAGjE1B,kBAAJ,eAAkCE,EAChCqB,eAEAA,c,KAIJ,uB,EAtFJ,8B,MA0FkCG,KADX,MACX1B,EADW,YACAE,EADA,S,EAEgCwB,KAFhC,MAEXjC,EAFW,e,GAAA,4BAInB,MAAgCiC,KAAKtC,UAAmB,C,IAChDmC,EAAaG,KADmC,U,GAIlD1B,kBAAJ,eAAkCE,E,GAChC,QAAIF,E,OAIMhC,K,IACN,WACEuD,gB,UAEF,qBACEA,e,kBAGQP,EAA6BO,EADvC,YACuBL,EAAgBK,EADvC,YAEEA,aAAsBL,IAAtBK,OAIJA,oBAGFA,c,KAIJ,uB,EA1HJ,gCA8HI,OAAIG,KAAKrC,4BACP9B,EAAcmE,KAAdnE,6B,EA/HN,kB,MAqJQmE,KAlBG,MAELnH,EAFK,WAGLuH,EAHK,YAIL9B,EAJK,YAKLa,EALK,SAMLkB,EANK,WAOLC,EAPK,mBAQLC,EARK,eASLL,EATK,YAULM,EAVK,W,IAAA,QAWLC,OAXK,UAYLjC,EAZK,SAaLkC,EAbK,mBAcLC,EAdK,eAeLlH,EAfK,QAgBLmH,EAhBK,iBAiBLxB,EAjBK,QAmBCvB,EAAgBmC,KAnBjB,kBAsBDpB,EACJN,kBADF,eACgCE,EAE1BqC,EAAWjC,EACboB,KADyB,oBAEzBA,KAFJ,kB,EAIgCA,KA7BzB,oBA6BAc,EA7BA,KA6BYC,EA7BZ,KA+BDC,EAAN,G,GACId,EAAJ,E,IACO,IAAIpD,EAAT,EAA6BA,GAA7B,EAAiDA,IAC/CkE,OACEC,wBAAcpI,EAAU,CACtBqI,KADsB,EAEtBC,IAAKV,EAAQ,EAFS,GAGtB3D,MAHsB,EAItBe,YAAa+C,EAAiB/C,OAJR,EAKtBpE,MAAOuG,KAAKoB,cAAc,M,IAQ5BC,EAAqBpE,EACzB+C,KAD8C,MAE9CA,KAFF,gB,OAKOiB,wBACLP,MADkB,MAElB,CACEN,UADF,EAEES,SAFF,EAGES,IAAKtB,KAHP,gBAIEvG,MAAO,OAAF,IAAE,CAAF,CACHsF,SADG,WAEHI,OAFG,EAGHC,MAHG,EAIHmC,SAJG,OAKHC,wBALG,QAMHC,WANG,YAOHnD,aAPG,IAWP2C,wBAAcX,MAAD,MAA4C,CACvDzH,SADuD,EAEvDyI,IAFuD,EAGvD7H,MAAO,CACL0F,OAAQP,EAAe,OADlB,EAELlF,cAAemE,EAAc,YAFxB,EAGLuB,MAAOR,EAAeyC,EAAqB,Y,EA/MrD,+B,GA6PI,oBAAWrB,KAAK0B,MAAZ,iBACoB1B,KAD8B,gBAEpD,EAAmB,C,MAMbA,KANa,oBAEf9B,EAFe,KAGfC,EAHe,KAIfC,EAJe,KAKfC,EALe,K,KAOjB,8B,GASJ,oBAAW2B,KAAK0B,MAAZ,SAA2C,C,MAKzC1B,KALyC,MAE3ClC,EAF2C,kBAG3CC,EAH2C,eAI3CC,EAJ2C,2B,KAM7C,uB,EArRN,6B,MAyUyCgC,KADe,MAC5CE,EAD4C,YACjCyB,EADiC,gB,EAEG3B,KAFH,MAE5CnC,EAF4C,cAE/BC,EAF+B,kBAEdC,EAFc,e,GAIpD,IAAImC,E,MACK,CAAC,EAAG,EAAG,EAAd,G,IAGIY,EAAa1D,EACjB4C,KADuC,QAGvCA,KAHF,gBAKMe,EAAY1D,EAChB2C,KADyC,UAIzCA,KAjBkD,gBAsB9C4B,EACH/D,GAAD,aAAgBC,EADlB,EAEM2B,WADJ,GAGIoC,EACHhE,GAAD,YAAgBC,EADlB,EAEM2B,WADJ,G,MAIK,CACLA,WAAYqB,EADP,GAELrB,WAAYA,SAASS,EAATT,EAAwBsB,EAF/B,MAAP,I,GAvWJ,gCAKwB,CACpBzC,UADoB,MAEpBkC,cAFoB,EAGpBhC,OAHoB,WAIpBmD,cAJoB,EAKpBf,gBAAgB,GAVpB,EAkeF,IAAMd,EAAsB,SAAC,EAAD,GAWjB,EATPjH,SASO,EARPyF,UAQO,EAPPa,OAOO,EANPX,OAMO,EALP+B,aAKO,EAJPI,aAIO,EAHPvB,MAGO,EADPxB,UCjnBEkE,EAAkB,SAAC,EAAD,K,IAKdvD,EADS,WAETwD,EAAuCC,EAF9B,gBAEQC,EAAsBD,EAF9B,kB,GAIblF,EAAJ,EAA+B,C,IACzB4B,EAAJ,E,GACIuD,GAAJ,EAA4B,C,IACpBC,EAAeH,EAArB,GACArD,EAASwD,SAAsBA,EAA/BxD,K,IAGG,IAAIyD,EAAIF,EAAb,EAAoCE,GAApC,EAAgDA,IAAK,C,IAC/CxD,EAASJ,EAAb,GAEAwD,KAAqB,CACnBrD,OADmB,EAEnBC,QAGFD,KAGFsD,sB,OAGKD,EAAP,IAmCIK,EAA8B,SAAC,EAAD,S,KAO3BC,GAAP,GAAoB,C,IACZC,EAASD,EAAM5C,YAAY8C,EAAD,GAAhC,GACMC,EAAgBV,EAAgBJ,EAAOY,EAAvBR,GAAtB,O,GAEIU,IAAJ,E,OACE,EACSA,EAAJ,EACLH,EAAMC,EAAND,EACSG,EAAJ,IACLD,EAAOD,EAAPC,G,OAIAF,EAAJ,EACSA,EAAP,EAEA,GAIEI,EAAmC,SAAC,EAAD,O,QAM/BvC,EAAcwB,EADX,UAEPgB,EAAJ,EAGE5F,KACAgF,EAAgBJ,EAAO5E,EAAvBgF,UAFF,GAIEhF,KACA4F,K,OAGKN,EAA4B,EAAD,EAGhC3C,WAAgBS,EAHgB,GAIhCT,WAAW3C,EAJqB,GAAlC,IASIG,EAAwB,SAAC,EAAD,G,IAC1BiD,EAEC,EAFDA,UACA6B,EACC,EADDA,gBAAiBY,EAChB,EADgBA,kBAAmBV,EACnC,EADmCA,kBAElCW,EADD,E,GAKCX,GAAJ,IACEA,EAAoB/B,EAApB+B,GAGEA,GAAJ,EAA4B,C,IACpBC,EAAeH,EAArB,GACAa,EAA2BV,SAAsBA,EAAjDU,K,OAMKA,GAHoB1C,IAA3B,GACA,GAKI2C,EAAmB9F,EAAoB,CAC3CC,cAAe,gB,OAIF8E,EAAgBJ,EAAO5E,EAAvBgF,GAJE,QAMf5E,YAAa,gB,OAIA8E,qBAJA,MAMb/E,sBAb2C,EAe3CE,8BAA+B,oB,IAOrBmB,EAAqCoD,EADlC,UACQvC,EAA0BuC,EADlC,OACgBlD,EAAkBkD,EADlC,OACwBtC,EAAUsC,EADlC,MAKL/C,EADeL,kBAArB,eAAmDE,EACpBY,EAA/B,EACM8C,EAAeJ,EAAgBJ,EAAO5E,EANjC,GAULuE,EAAqBpE,EAAsByE,EAAjD,GAEMoB,EAAYrD,WAEhBA,SAAS4B,EAAT5B,EAAoCyC,EAFtC,SAIMa,EAAYtD,WAEhByC,WAA6BA,EAF/B,M,OAKA,UAAIjC,IAKAA,EAHAlC,GAAgBgF,EAAhBhF,GACAA,GAAgB+E,EAFlB,EAIE7C,OAEAA,UAIJ,G,IACE,Q,OACE,E,IACF,M,OACE,E,IACF,S,OACSR,WAAWsD,GAAaD,EAAD,GAA9B,G,IACF,O,eAEM/E,MAA6BA,GAAjC,EACE,EACSA,EAAJ,EACL,EAEA,IAKRX,uBAAwB,gB,OApLF,SAAC,EAAD,K,IAKd2E,EAAuCC,EAD5C,gBACsBC,EAAsBD,EAD5C,kB,OAIDC,IAAwBF,KAAxBE,OADF,IAGA,EAESG,EAA4B,EAAD,MAAlC,GAWOK,EAAiC,EAAD,EAGrChD,WAHqC,GAAvC,GAiKWuD,CAAgBtB,EAAOM,EAJZ,IAMxB3E,0BAA2B,kB,QAMjBiB,EAAgDoD,EAD7C,UACQvC,EAAqCuC,EAD7C,OACgBxB,EAA6BwB,EAD7C,UAC2BlD,EAAkBkD,EAD7C,OACmCtC,EAAUsC,EAD7C,MAKL/C,EADeL,kBAArB,eAAmDE,EACpBY,EAA/B,EACM8C,EAAeJ,EAAgBJ,EAAOZ,EAA5C,GACMgC,EAAY/E,EAAlB,EAEIW,EAASwD,SAAsBA,EAAnC,KACInB,EAAJ,EAEOA,EAAYb,EAAZa,GAA6BrC,EAApC,GACEqC,IACArC,GAAUoD,EAAgBJ,EAAOX,EAAvBe,GAAVpD,K,OAGF,GAGFpB,kBAvG2C,c,IA0GnC0E,EAAgB,CACpBD,gBADoB,GAEpBY,kBAL+D,qBAtQrE,GA4QMV,mBAAoB,G,OAGtBrE,kBAA2B,mBAGtB,IADHqF,OAA8B,GAE9BjB,oBAAkCvC,SAChCuC,EADgCvC,kBAEhC3C,EAHC,GAUHc,yBAEA,GACEA,iBAIJ,GAGFL,uCAvI2C,EAyI3CC,cAAe,YAAoC,EAAjCe,YCxSd2E,EAAgBnG,EAAoB,CACxCC,cAAe,c,OACbF,EADa,YAGfI,YAAa,c,OAAA,YAGbD,sBAAuB,Y,IAAGiD,EAAH,Y,OAAA,cAGvB/C,8BAA+B,kB,IAC3BmB,EAIS,EAJTA,UAAWa,EAIF,EAJEA,OAAQe,EAIV,EAJUA,UAAW3B,EAIrB,EAJqBA,SAAUC,EAI/B,EAJ+BA,OAAQY,EAIvC,EAJuCA,MAO5CT,EADeL,kBAArB,eAAmDE,EACpBY,EAA/B,EACM+D,EAAiB1D,WAErBS,IAFF,GAIM4C,EAAYrD,WAEhB3C,EAFF,GAIMiG,EAAYtD,WAEhB3C,MAFF,G,OAKA,UAAImD,IAKAA,EAHAlC,GAAgBgF,EAAhBhF,GACAA,GAAgB+E,EAFlB,EAIE7C,OAEAA,UAIJ,G,IACE,Q,OACE,E,IACF,M,OACE,E,IACF,S,IAGQmD,EAAe3D,WACnBsD,GAAaD,EAAD,GADd,G,OAGIM,EAAe3D,UAAUd,EAA7B,GAAwC,EAE7ByE,EAAeD,EAAiB1D,WAAWd,EAA/C,GAA0D,EAG/D,E,IAGJ,O,eAEMZ,MAA6BA,GAAjC,EACE,EACSA,EAAJ,EACL,EAEA,IAKRX,uBAAwB,c,IACpB8C,EADoB,YACT3B,EADS,W,OAItBkB,WAEEA,SAASS,EAATT,EAAwBA,WAAWf,EANf,MASxBrB,0BAA2B,gB,IACvBiB,EAGS,EAHTA,UAAWa,EAGF,EAHEA,OAAQe,EAGV,EAHUA,UAAW3B,EAGrB,EAHqBA,SAAUC,EAG/B,EAH+BA,OAAQY,EAGvC,EAHuCA,MAM5CV,EAASoC,EAAf,EACMnC,EAFeL,kBAArB,eAAmDE,EAEpBY,EAA/B,EACMiE,EAAkB5D,WACrBd,IAAD,GADF,G,OAGOc,KAAA,MAELA,SACES,EADFT,EAEEqB,IAFFrB,KAOJnC,kBAxGwC,cA4GxCC,uCA5GwC,EA8GxCC,cAAe,YAAoC,EAAjCe,YChHL,SAAS+E,EAAeC,EAAxB,G,IACR,IAAL,O,KACQC,KAAN,G,OACE,E,IAGC,IAAL,O,GACMD,OAAoBE,EAAxB,G,OACE,E,OAGJ,ECRa,SAASC,EAAS,EAAlB,G,IAIEC,EAA2BC,EADjC,MACoBC,EADpB,yBAEMC,EAA2B/D,EAFjC,MAEoBgE,EAFpB,yB,OAKNT,EAAeK,EAAhB,KAA0CL,EAAeO,EAD3D,K,iKCVIG,EAAY,SAAC,GAAD,uBAChBlK,OADgB,yBAEhBmK,OAFgB,sBAGhBC,OAHgB,uBAIhBC,OAJgB,0BAKhBC,OALgB,yBAMhBC,OANgB,SAOhBC,EAPgB,wBAQhBnO,OARgB,wBAShB8B,OATgB,sBAUhBsM,OAVgB,sBAWhBlE,OAXgB,sBAYhBmE,OAZgB,uBAahBC,OAbgB,uBAchBC,OAdgB,6BAehBC,OAfgB,2BAgBhBC,OAhBgB,gCAiBhBC,OAjBgB,0BAkBhBC,OAlBgB,SAmBhBC,EAnBgB,UAoBbC,EApBa,iPAsBhB,wCAEEC,aAAYD,iBAFd,WAGEf,UAHF,EAIEU,UAJF,EAKE7K,eALF,EAMEoK,SANF,EAOEG,WAPF,EAQEpM,SARF,EASEoI,SATF,EAUEuE,cAVF,EAWEF,IAXF,EAYEP,UAZF,EAaEM,IAbF,EAcEL,UAdF,EAeEE,YAfF,EAgBEC,SAhBF,EAiBEO,SAjBF,EAkBED,eAlBF,EAmBEK,KAnBF,UAoBEV,KApBF,EAqBErO,MArBF,EAsBE4O,QAASA,MAIPrD,EAAQ,CAEZ5H,eAAgBQ,kCAFJ,mCAQZ2J,UAAW3J,6BARC,+CAcZ4J,SAAU5J,6BAdE,2CAoBZ6J,UAAW7J,+BApBC,+BAwBZ8J,UAAW9J,+BAxBC,+BA4BZ+J,WAAY/J,6BA5BA,6DAkCZgK,YAAahK,+BAlCD,gCAsCZnE,MAAOmE,+BAtCK,mDA4CZrC,SAAUqC,6BA5CE,yCAgDZiK,SAAUjK,6BAhDE,4CAoDZmK,IAAKnK,+BApDO,2BAsDZoK,IAAKpK,+BAtDO,2BA0DZqK,UAAWrK,6BA1DC,4CAgEZsK,cAAetK,gCAhEH,0DAsEZuK,eAAgBvK,gCAtEJ,2DA4EZwK,SAAUxK,6BA5EE,2CAuFZyK,QAASzK,+BAvFG,wEA2FZkK,KAAMlK,+BA3FM,mBA6FZ+F,SAAU/F,sBAAoB,CAACA,YAAD,KAAiBA,YAArCA,sCAKZ0J,cAE4BtJ,mBAASsJ,GAErCmB,Y,0GCvIaC,EAAyB,WAAqB,IAApB9D,EAAoB,uDAAd,GAAII,EAAU,yCAEvDzH,2BAFuD,GACjDoL,EADiD,WACvCC,EADuC,aACxBC,EADwB,yCAYzD,OARAtO,qBAAU,WAER,OADIqK,GAAJ,GAAqB+D,EAAS/D,EAAT+D,GACd,WACD/D,GAAJ,GAAuBgE,QAExB,CATsD,IAYzD,EACA,EADsB,I,IA5BT,WAA4C,IAAjBhE,EAAiB,uDAAX,GAAII,EAAO,yCAEvDzH,2BAFuD,GACjDoL,EADiD,WACvCC,EADuC,aACxBC,EADwB,yCAYzD,OARAtO,qBAAU,WAER,OADIqK,WAAJ,GAA6B+D,EAAS/D,EAAD,QAAR+D,GACtB,WACD/D,WAAJ,GAA+BgE,EAAWhE,EAAXgE,aAKnC,EACA,EADsB,K,6DCZxB,EAAeE,YAAW,CACxBC,MAAO,CADiB,gQAIxBtG,OAJwB,GAKxBC,MAAO,K,oECLT,EAAeoG,YAAW,CACxBC,MAAO,CADiB,sXAIxBtG,OAJwB,GAKxBC,MAAO,K,stBCHF,SAASsG,EAAkB,GAK/B,IAJD7M,EAIC,EAJDA,SACQ8M,EAGP,EAHDC,OACAC,EAEC,EAFDA,MAEC,IADDC,eACC,MADS,wBACT,IAC2BC,YAD3B,sBACMH,EADN,KACcI,EADd,KAGKC,EAAc,SAAC,EAAD,GAAiC,IAApB9P,EAAoB,EAA9BmB,OAAUnB,MAC/B6P,GAAU,SAAAE,GACR,IAAMC,EAAaN,EAAQO,YAAYF,EAAf,GAAxB,EAEA,OADAJ,EAAQK,EAARL,GACA,MAIJ,OAAO,oBAA6B,SAAAO,GAAS,IACnC3E,EAAU2E,EADyB,MAErCC,EAAUC,sBACZX,UAAelE,EAAfkE,MACAA,IAAWlE,EAFf,KAIA,OAAO8E,uBAAaH,EAAO,EAAR,YAEjBC,QAFiB,EAGjBG,QAASC,YAAOT,EAAavE,EAAd,eAKrB,SAASiF,EAAe,GAIrB,QAHDf,cAGC,MAHQ,GAGR,MAFDC,MAGA,OAAOH,EAAkB,CAAEE,OAAF,EAAUC,WADlC,SACyChN,SADzC,EADDA,WAKF8N,YAA2B,CAEzBf,OAAQtL,YAAkBA,IAFD,QAIzBuL,MAAOvL,IAJkB,KAMzBwL,QAASxL,IAAUsM,M,+lBC7CE,SAACC,GAAqB,IACrCC,EADqC,wCAIzC,cAAmB,iCACjB,iBADiB,6CAFDC,mBAAS,EAAD,mBAIxB,QAAa,CACX5Q,MAAOuL,EAAMvL,OAEf,eAAoB,gCAApB,IACA,cAAmB,+BAAnB,IACA,eAAoB,gCAApB,IACA,YAAiBuC,IAAjB,YARiB,yJAJsB,+CAyBzC,YAAe,MACsBsH,KADtB,MACLgH,EADK,UACIC,EADJ,gBAEL9F,EAAQ9J,EAFH,IAGT4P,GAAJ,UAAqB9F,GACnBnB,KAAA,eAEFgH,OA/BuC,0BAkCzC,WAAe,MACgDhH,KADhD,MACLnI,EADK,WACKqP,EADL,WACeC,EADf,gBAC8BF,EAD9B,gBAEL9Q,EAAU6J,KAFL,YAIb,GAAmBA,KAAK5E,SAAS,CAAEjF,MAAO,KACtC8Q,IAAJ,GACApP,EAAS,CACPuP,MAAO,OAAF,IAAE,CAAF,KADE,GAEPF,SAFO,EAGP/Q,YA3CqC,0BA+CzC,YAAyB,WACfA,EADe,EAAVmB,OAAU,QAEa0I,KAFb,MAEfiH,EAFe,iBAGvBI,EAHuB,YAGvBA,GACArH,KAAA,SAAc,CAAE7J,UAAS,WACvB,GAAoB,yBApDiB,oBAwDzC,WAAS,IACCA,EAAU6J,KADX,cAE6BA,KAF7B,MAEClG,EAFD,iBAEoBwN,EAFpB,kCAIP,OACE,sCAEEC,UAAWvH,KAFb,UAGElG,eAHF,EAIEuN,SAAUrH,KAJZ,aAKEgH,QAAShH,KALX,YAMEnI,SAAUmI,KANZ,aAOE7J,MAAOA,QApE4B,uCAezC,cAA8D,IAAjBqR,EAAiB,EAAjBA,cAC3C,OAAIzH,UAAJ,EACS,CACL5J,MAAO4J,EADF,MAELyH,cAAezH,EAAU5J,OAG7B,SAtBuC,gBA+F3C,OArBA2Q,eAA0B,CACxBO,SAAU,wBACVxP,SAAU,wBACVmP,QAAS,wBACTE,SAJwB,MAKxBD,eALwB,EAMxBE,eANwB,EAOxBrN,eAAgB,IAGlBgN,YAAuB,CACrBhN,eAAgBQ,UADK,IAErB+M,SAAU/M,IAFW,KAGrBzC,SAAUyC,IAHW,KAIrB0M,QAAS1M,IAJY,KAKrB4M,SAAU5M,IALW,OAMrB2M,cAAe3M,IANM,KAOrB6M,cAAe7M,IAPM,KAQrBnE,MAAOmE,IAAUmN,QAGnB,I,oBCnGgQ,IAASpQ,EAA1MqQ,EAAOC,SAAmMtQ,EAAzLuQ,EAAQ,GAA2L,SAASvQ,GAAG,SAASwQ,EAAEC,GAAG,GAAGC,EAAED,GAAG,OAAOC,EAAED,GAAGH,QAAQ,IAAIK,EAAED,EAAED,GAAG,CAACH,QAAQ,GAAGxL,GAAG2L,EAAEG,QAAO,GAAI,OAAO5Q,EAAEyQ,GAAGI,KAAKF,EAAEL,QAAQK,EAAEA,EAAEL,QAAQE,GAAGG,EAAEC,QAAO,EAAGD,EAAEL,QAAQ,IAAII,EAAE,GAAG,OAAOF,EAAEM,EAAE9Q,EAAEwQ,EAAEO,EAAEL,EAAEF,EAAEQ,EAAE,GAAGR,EAAE,GAAlM,CAAsM,CAAC,SAASxQ,EAAEwQ,EAAEE,GAAG,aAAa,SAASD,EAAEzQ,GAAG,OAAOA,GAAGA,EAAEiR,WAAWjR,EAAE,CAACkR,QAAQlR,GAA4H,SAAS8K,EAAE9K,EAAEwQ,GAAG,KAAKxQ,aAAawQ,GAAG,MAAM,IAAIW,UAAU,qCAAqC,SAASC,EAAEpR,EAAEwQ,GAAG,IAAIxQ,EAAE,MAAM,IAAIqR,eAAe,6DAA6D,OAAOb,GAAG,iBAAiBA,GAAG,mBAAmBA,EAAExQ,EAAEwQ,EAA6Tc,OAAOC,eAAef,EAAE,aAAa,CAAC1R,OAAM,IAAK0R,EAAEgB,mBAAc,EAAO,IAAIC,EAAEH,OAAOI,QAAQ,SAAS1R,GAAG,IAAI,IAAIwQ,EAAE,EAAEA,EAAEmB,UAAUC,OAAOpB,IAAI,CAAC,IAAIE,EAAEiB,UAAUnB,GAAG,IAAI,IAAIC,KAAKC,EAAEY,OAAOO,UAAUC,eAAejB,KAAKH,EAAED,KAAKzQ,EAAEyQ,GAAGC,EAAED,IAAI,OAAOzQ,GAAG+R,EAAE,WAAW,SAAS/R,EAAEA,EAAEwQ,GAAG,IAAI,IAAIE,EAAE,EAAEA,EAAEF,EAAEoB,OAAOlB,IAAI,CAAC,IAAID,EAAED,EAAEE,GAAGD,EAAEuB,WAAWvB,EAAEuB,aAAY,EAAGvB,EAAEwB,cAAa,EAAG,UAAUxB,IAAIA,EAAEyB,UAAS,GAAIZ,OAAOC,eAAevR,EAAEyQ,EAAE3G,IAAI2G,IAAI,OAAO,SAASD,EAAEE,EAAED,GAAG,OAAOC,GAAG1Q,EAAEwQ,EAAEqB,UAAUnB,GAAGD,GAAGzQ,EAAEwQ,EAAEC,GAAGD,GAA7O,GAAmP2B,EAAEzB,EAAE,GAAGY,OAAOC,eAAef,EAAE,gBAAgB,CAACwB,YAAW,EAAGI,IAAI,WAAW,OAAO3B,EAAE0B,GAAGjB,WAAW,IAAYF,EAAEP,EAARC,EAAE,KAAkB2B,EAAE5B,EAAPC,EAAE,IAAiB4B,EAAE7B,EAAPC,EAAE,IAAUI,EAAEJ,EAAE,GAAG6B,EAAE,SAASvS,GAAG,SAASwQ,IAAI,IAAIxQ,EAAE8K,EAAEnC,KAAK6H,GAAG,IAAI,IAAIE,EAAEiB,UAAUC,OAAOnB,EAAEvB,MAAMwB,GAAGC,EAAE,EAAEA,EAAED,EAAEC,IAAIF,EAAEE,GAAGgB,UAAUhB,GAAG,IAAI6B,EAAEpB,EAAEzI,MAAM3I,EAAEwQ,EAAEiC,WAAWnB,OAAOoB,eAAelC,IAAIK,KAAK8B,MAAM3S,EAAE,CAAC2I,MAAMiK,OAAOnC,KAAK,OAAO+B,EAAEK,OAAOL,EAAEK,OAAOC,KAAKN,GAAGA,EAAExR,OAAOwR,EAAExR,OAAO8R,KAAKN,GAAGA,EAAExC,SAASwC,EAAExC,SAAS8C,KAAKN,GAAGA,EAAE,OAA3tC,SAAWxS,EAAEwQ,GAAG,GAAG,mBAAmBA,GAAG,OAAOA,EAAE,MAAM,IAAIW,UAAU,kEAAkEX,GAAGxQ,EAAE6R,UAAUP,OAAOyB,OAAOvC,GAAGA,EAAEqB,UAAU,CAACmB,YAAY,CAAClU,MAAMkB,EAAEgS,YAAW,EAAGE,UAAS,EAAGD,cAAa,KAAMzB,IAAIc,OAAO2B,eAAe3B,OAAO2B,eAAejT,EAAEwQ,GAAGxQ,EAAEyS,UAAUjC,GAA06BgC,CAAEhC,EAAExQ,GAAG+R,EAAEvB,EAAE,CAAC,CAAC1G,IAAI,SAAShL,MAAM,SAASkB,GAAG2I,KAAKuK,aAAalT,IAAI,CAAC8J,IAAI,eAAehL,MAAM,WAAW,IAAIkB,EAAE2I,KAAK0B,MAAMmG,EAAE7H,KAAK0B,MAAMvL,MAAM6J,KAAKwK,sBAAqB,EAAGb,EAAEpB,SAASO,EAAE,CAACyB,aAAavK,KAAKuK,cAAclT,IAAI2I,KAAKwK,qBAAqBC,OAAO5C,KAAK,CAAC1G,IAAI,oBAAoBhL,MAAM,WAAW6J,KAAK0K,iBAAiB,CAACvJ,IAAI,qBAAqBhL,MAAM,SAASkB,GAAG,IAAIwQ,EAAE7H,KAAK0B,MAAMqG,EAAEF,EAAE1R,MAAM2R,EAAED,EAAE8C,KAAK3C,EAAEH,EAAE+C,KAAgD9B,EAAE,CAAC+B,MAA5ChD,EAAEgD,MAAkDC,gBAA1CjD,EAAEiD,gBAA0DC,SAAxClD,EAAEkD,UAAkD3B,EAAE,mBAAmBtB,GAAG,mBAAmBzQ,EAAEsT,KAAK7C,EAAEkD,aAAa3T,EAAEsT,KAAKK,YAAW,EAAG7C,EAAE8C,OAAOnD,MAAK,EAAGK,EAAE8C,OAAO5T,EAAEsT,SAAQ,EAAGxC,EAAE8C,OAAOnD,KAAI,EAAGK,EAAE8C,OAAO5T,EAAEsT,MAAMnB,EAAExB,EAAEgD,aAAa3T,EAAEuT,KAAKI,WAAW5C,EAAEO,OAAOuC,KAAKpC,GAAGqC,MAAK,SAAStD,GAAG,OAAOiB,EAAEjB,KAAKxQ,EAAEwQ,OAAM2B,GAAGJ,GAAIrB,IAAI/H,KAAKuK,aAAapU,OAAUiS,IAAIpI,KAAK0K,iBAAiB,CAACvJ,IAAI,SAAShL,MAAM,WAAa,IAAI0R,EAAE7H,KAAK0B,MAAMrK,EAAEwQ,EAAEuD,OAAOrD,EAAh8E,SAAW1Q,EAAEwQ,GAAG,IAAIE,EAAE,GAAG,IAAI,IAAID,KAAKzQ,EAAEwQ,EAAEwD,QAAQvD,IAAI,GAAGa,OAAOO,UAAUC,eAAejB,KAAK7Q,EAAEyQ,KAAKC,EAAED,GAAGzQ,EAAEyQ,IAAI,OAAOC,EAA20EC,CAAEH,EAAE,CAAC,WAAW,cAAcE,EAAE6C,YAAY7C,EAAE8C,aAAa9C,EAAE4C,YAAY5C,EAAE+C,uBAAuB/C,EAAEuD,yBAAyBvD,EAAE5R,aAAa4R,EAAE1P,cAAc0P,EAAEV,gBAAgBU,EAAEgD,SAAS1T,EAAE2I,KAAKkK,OAAOpB,EAAE,CAACzQ,OAAO2H,KAAK3H,OAAOgP,SAASrH,KAAKqH,SAASkE,aAAavL,KAAK0B,MAAMvL,OAAO4R,MAAM,CAAC5G,IAAI,WAAWhL,MAAM,SAASkB,GAAG2I,KAAKwK,qBAAqBC,SAAS,mBAAmBzK,KAAK0B,MAAM2F,UAAUrH,KAAK0B,MAAM2F,SAAShQ,KAAK,CAAC8J,IAAI,SAAShL,MAAM,SAASkB,GAAG,mBAAmB2I,KAAK0B,MAAMrJ,QAAQ2H,KAAK0B,MAAMrJ,OAAOhB,OAAOwQ,EAA1oD,CAA6oDQ,EAAEE,QAAQiD,eAAe3D,EAAEU,QAAQqB,EAAEA,EAAE6B,UAAU,CAACb,KAAKlB,EAAEnB,QAAQmD,UAAU,CAAChC,EAAEnB,QAAQoD,MAAMjC,EAAEnB,QAAQ3B,KAAK8C,EAAEnB,QAAQqD,KAAKlC,EAAEnB,QAAQsD,MAAM,CAACjB,KAAKlB,EAAEnB,QAAQmD,UAAU,CAAChC,EAAEnB,QAAQoD,MAAMjC,EAAEnB,QAAQ3B,OAAO+D,KAAKjB,EAAEnB,QAAQ3B,SAASkF,WAAWjB,MAAMnB,EAAEnB,QAAQqD,KAAKzV,MAAMuT,EAAEnB,QAAQmD,UAAU,CAAChC,EAAEnB,QAAQd,OAAOiC,EAAEnB,QAAQwD,SAASpB,KAAKjB,EAAEnB,QAAQ3B,KAAKkE,gBAAgBpB,EAAEnB,QAAQd,OAAO6D,kBAAkB5B,EAAEnB,QAAQqD,KAAKb,SAASrB,EAAEnB,QAAQqD,MAAMhC,EAAEoC,aAAa,CAACZ,OAAO,SAAS/T,EAAEwQ,GAAG,OAAOQ,EAAEE,QAAQtH,cAAc,QAAQ6H,EAAE,CAACxH,IAAIjK,GAAGwQ,OAAO,SAASxQ,EAAEwQ,GAAG,aAAac,OAAOC,eAAef,EAAE,aAAa,CAAC1R,OAAM,IAAK0R,EAAEiD,gBAAgB,IAAIjD,EAAEoE,YAAY,YAAY,SAAS5U,EAAEwQ,EAAEE,GAAG,aAAkpB,SAASC,EAAE3Q,GAAG,OAAOkP,MAAM2F,SAAS3F,MAAM2F,QAAQ7U,IAAIA,aAAakP,MAAwToC,OAAOC,eAAef,EAAE,aAAa,CAAC1R,OAAM,IAAK0R,EAAEsE,yBAAnjC,WAAa,IAAI9U,EAAE2R,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAGQ,EAAE3B,EAAEmB,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAGI,EAAE0B,gBAAgB,IAAI9C,EAAE3Q,GAAG,MAAM,IAAI+U,MAAM,2EAA2E,IAAmB,IAAhB/U,EAAEgU,QAAQxD,GAAQ,MAAM,IAAIuE,MAAM,6MAAiNC,KAAKC,UAAUzE,GAAhO,sCAA8QwE,KAAKC,UAAUjV,IAAK,OAAOA,EAAEkV,KAAI,SAASlV,GAAG,OAAOA,aAAamV,OAAO3E,EAAExQ,KAAIoV,KAAK,KAA6c5E,EAAEqE,QAAQlE,EAAEH,EAAE6E,SAA9Y,SAAWrV,GAAG,MAAM,iBAAiBA,GAAGA,aAAasV,QAAoW9E,EAAE+E,SAA/V,SAAWvV,GAAG,MAAM,iBAAiBA,QAAG,IAASA,EAAE4R,SAAS4D,MAAMxV,IAAwSwQ,EAAEoD,MAAvS,SAAW5T,GAAG,MAAM,oBAAoBA,GAAG,OAAOA,GAA6PwQ,EAAEiF,kBAA7P,SAAWzV,GAAG,IAAI,IAAIwQ,EAAE,GAAGE,OAAE,GAA2B,KAApBA,EAAE1Q,EAAEgU,QAAQjD,KAAWP,EAAEkF,KAAKhF,GAAG1Q,EAAE2V,OAAOjF,EAAE,GAAG,MAAM,CAACkF,sBAAsB5V,EAAE6V,QAAQrF,IAAuJ,IAAIuB,EAAErB,EAAE,GAAGyB,EAAE,GAAGpB,EAAE,MAAM,SAAS/Q,EAAEwQ,EAAEE,GAAG,aAAujDY,OAAOC,eAAef,EAAE,aAAa,CAAC1R,OAAM,IAAK,IAAI6R,EAAE,mBAAmBmF,QAAQ,iBAAiBA,OAAOC,SAAS,SAAS/V,GAAG,cAAcA,GAAG,SAASA,GAAG,OAAOA,GAAG,mBAAmB8V,QAAQ9V,EAAEgT,cAAc8C,QAAQ9V,IAAI8V,OAAOjE,UAAU,gBAAgB7R,GAAGwQ,EAAEU,QAA7yD,WAAa,IAAIlR,EAAE2R,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAGF,EAAEjB,EAAEmB,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAGa,EAAE9B,EAAEiB,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAG,GAAG,KAAI,EAAG7G,EAAE+J,SAASrE,GAAG,CAAC,IAAI,oBAAoBA,EAAE,YAAYG,EAAEH,MAAMY,EAAEwD,YAAY,MAAM,IAAIG,MAAM,gEAAgEvE,EAAEA,EAAExQ,EAAE0Q,GAAGF,GAAE,EAAG1F,EAAE2K,mBAAmBjF,GAAGoF,sBAAsB,IAAInF,EAAEC,EAAE8C,MAAMzB,OAAE,IAAStB,GAAGA,EAAE0B,EAAEzB,EAAEsF,uBAAuBjF,OAAE,IAASoB,EAAEV,EAAEU,EAAEnB,EAAEN,EAAE+C,gBAAgBwC,OAAE,IAASjF,EAAEI,EAAEqC,gBAAgBzC,EAAEqB,EAAE3B,EAAEzD,YAAYxM,OAAE,IAAS4R,GAAE,EAAGvH,EAAEgK,0BAA0BtE,EAAEyF,GAAG5D,EAAEC,EAAE5B,EAAEwF,qBAAqBpF,EAAEJ,EAAEuD,kBAAkB1B,GAAM,IAAJR,QAAQ,IAAShB,EAAEoF,EAAEnW,EAAE4R,OAAOwE,EAAErF,EAAEa,OAAOyE,EAAE5V,EAAEmR,OAAO0E,EAAE9F,EAAEoB,OAAO2E,EAAEJ,EAAEC,EAAEI,EAAED,EAAE,EAAEE,EAAEnE,GAAGkE,GAAGD,EAAE,GAAGG,EAAED,EAAErO,KAAKuO,IAAIJ,GAAG,IAAO,IAAJzF,IAAS0F,EAAE,CAAC,IAAI,IAAII,EAAEnF,EAAEoF,EAAEJ,EAAEI,EAAEH,EAAEG,IAAIpW,EAAEoW,KAAKZ,IAAIW,GAAGX,GAAGjW,EAAEA,EAAE8W,MAAM,EAAEL,GAAGG,EAAE5W,EAAE8W,MAAML,EAAEN,GAAG,IAAI,IAAIY,EAAE/W,EAAEgX,MAAMvF,GAAGyD,KAAI,SAASlV,EAAEwQ,GAAG,MAAM,CAACyG,KAAKjX,EAAEkX,MAAM1G,GAAGiG,GAAGjG,EAAEkG,MAAKS,EAAEhB,EAAE,EAAEgB,GAAG,EAAEA,IAAI,CAAC,IAAIC,EAAEL,EAAEI,GAAGF,KAAK,GAAGG,IAAInB,EAAE,CAAC,IAAIoB,EAAEF,GAAGV,GAAGL,IAAIE,EAAEc,IAAI3W,EAAE4W,EAAEF,EAAEZ,EAAEY,IAAIJ,EAAEpB,OAAOwB,EAAE,IAAI,IAAIG,EAAE7F,EAAE8F,GAAE,EAAGvX,EAAE,IAAI,IAAIwX,EAAE,EAAEA,EAAEnB,EAAEmB,IAAI,CAAC,IAAIC,EAAEhX,EAAE+W,GAAG,GAAGC,IAAIxB,EAAE,CAAC,GAAGc,EAAEnF,OAAO,EAAE,KAAKmF,EAAEnF,OAAO,GAAG,CAAC,IAAI8F,EAAEX,EAAEY,QAAQC,EAAEF,EAAET,KAAKY,EAAEH,EAAER,MAAM,GAAGU,IAAI3B,IAAO,IAAJ1D,EAAO,CAAC+E,GAAGrB,EAAE,SAASjW,EAAE,GAAGwQ,EAAEgH,GAAGM,KAAKF,GAAG,CAAC,IAAO,IAAJ9G,IAAY,IAAJ+G,GAAQ9G,IAAIU,IAAO,IAAJM,GAAQyE,EAAE,CAAC,IAAI,IAAIuB,EAAEhB,EAAEnF,OAAOoG,EAAE,KAAKC,EAAE,EAAEA,EAAEF,EAAEE,IAAI,CAAC,IAAIC,EAAEnB,EAAEkB,GAAG,GAAGC,EAAEjB,OAAOhB,IAAa,IAAViC,EAAEhB,MAAW,MAAM,GAAGgB,EAAEjB,OAAOhB,EAAE,CAAC+B,EAAEC,EAAE,OAAO,OAAOD,GAAGV,GAAGM,EAAEb,EAAEpB,OAAOqC,EAAE,IAAIR,SAASF,GAAGM,EAAE,SAAS5X,EAAEuX,GAAE,GAAO,IAAJhF,IAAS+E,GAAG7W,EAAE0X,OAAOX,EAAEnB,IAAI,MAAMiB,GAAGG,EAAE,GAAGlF,IAAO,IAAJiE,EAAO,CAAC,IAAI,IAAI4B,EAAE,KAAKC,EAAE,EAAEA,EAAEf,EAAE1F,OAAOyG,IAAI5X,EAAE4X,KAAKpC,IAAImC,EAAEC,GAAGf,EAAE,OAAOc,EAAEd,EAAEa,OAAO,EAAEC,EAAE,GAAG3G,EAAE,MAAM,CAAC6G,eAAehB,EAAEiB,KAAK,CAACC,kBAAkBjB,KAAiR,IAAIzM,EAAE4F,EAAE,GAAGU,EAAEV,EAAE,GAAG8B,EAAE,GAAGf,EAAE,IAAI,SAASzR,EAAEwQ,GAAG,aAAi/Cc,OAAOC,eAAef,EAAE,aAAa,CAAC1R,OAAM,IAAK0R,EAAEU,QAAvhD,SAAWlR,GAAG,IAAIwQ,EAAExQ,EAAEgW,uBAAuBtF,OAAE,IAASF,EAAEG,EAAEH,EAAE1F,EAAE9K,EAAEyY,oBAAoBrH,OAAE,IAAStG,EAAE6F,EAAE7F,EAAE0H,EAAExS,EAAEkW,qBAAqBzE,OAAE,IAASe,EAAE,EAAEA,EAAET,EAAE/R,EAAEsY,eAAenG,EAAEnS,EAAE0Y,SAAS3H,EAAE/Q,EAAEyT,gBAAgBzC,EAAEhR,EAAEiN,YAAYgJ,EAAEjW,EAAE2Y,oBAAoBtG,OAAE,IAAS4D,EAAExF,EAAEwF,EAAExV,EAAET,EAAE4Y,iBAAiBtG,OAAE,IAAS7R,EAAEgQ,EAAEhQ,EAAE,GAAG,IAAIgR,IAAIU,EAAEP,OAAO,OAAO,EAAE,IAAId,EAAEqB,EAAEP,OAAOW,EAAE7B,EAAEkB,OAAOuE,EAAEnF,EAAEY,OAAOwE,EAAErE,EAAEH,OAAOyE,EAAEvF,EAAEyB,EAAE+D,EAAED,EAAE,EAAwB,GAAZA,EAAE,IAAIC,GAAd,IAAI/D,EAAqB,OAAOd,EAAE,IAAwBiF,EAAE,EAAEE,OAAE,EAAOC,OAAE,EAAO,IAAxCP,GAAI5F,IAAIqB,GAAGA,IAAIf,EAAwC,CAAC,IAAI+F,EAAEhF,EAAE8G,cAAyDxB,EAAzClF,EAAE0G,cAAkBV,OAAO,EAAE1G,GAAGuF,MAAMrG,GAAOmI,QAAO,SAAS9Y,GAAG,OAAuB,IAAhB+W,EAAE/C,QAAQhU,MAAU6W,EAAEQ,EAAEA,EAAEzF,OAAO,GAAG,IAAI0F,EAAElG,EAAE+G,OAAO,EAAEd,EAAEzF,QAAQoF,MAAMrG,GAAGmI,QAAO,SAAS9Y,GAAG,OAAOA,IAAI+Q,KAAIa,OAAgF4F,EAAvExG,EAAEmH,OAAO,EAAEd,EAAEzF,QAAQoF,MAAMrG,GAAGmI,QAAO,SAAS9Y,GAAG,OAAOA,IAAI+Q,KAAIa,SAAa0F,EAAEG,OAAE,IAASrG,EAAEiG,EAAEzF,OAAO,SAAI,IAASZ,EAAEqG,EAAEzF,OAAO,IAAIR,EAAEiG,EAAEzF,OAAO,KAAKb,GAAGK,EAAEiG,EAAEzF,OAAO,KAAKZ,EAAEqG,EAAEzF,OAAO,IAAIR,EAAEiG,EAAEzF,OAAO,KAAKZ,EAAEqG,EAAEzF,OAAO,IAAI0E,IAAIkB,GAAGC,IAAIH,EAAE,GAAGtG,EAAEgD,QAAQ6C,IAAI,QAAG,IAAS1E,EAAEV,KAAKmF,GAAE,EAAGC,EAAE1E,EAAEV,IAAI,IAAI,IAAsCmG,EAAhCvF,EAAE6C,KAAI,SAASlV,GAAG,OAAO+W,EAAE/W,MAAS8Y,QAAO,SAAS9Y,GAAG,OAAOA,IAAI6W,KAAIjF,OAAOiG,EAAER,EAAEyB,QAAO,SAAS9Y,GAAG,OAAOA,IAAI6W,KAAIjF,OAAgGoG,EAAvFhH,EAAEmH,OAAO,EAAEnH,EAAEgD,QAAQjD,IAAIiG,MAAMrG,GAAGmI,QAAO,SAAS9Y,EAAEwQ,GAAG,OAAOxQ,IAAI6W,GAAG1E,EAAE3B,KAAKxQ,KAAI4R,OAAWiG,EAAED,GAAGhB,EAAE,EAAE,GAAGqB,EAAE,EAAEC,EAAE,EAAEA,EAAE9B,IAAqBM,EAAEwB,EAAE,EAAZnB,EAAEmB,KAAgBrB,GAAGoB,MAAIA,GAAGD,IAAvCE,WAAtuBxB,EAAEjF,EAAE4E,EAAkxB,GAAGC,GAAG,IAAI,IAAI+B,EAAE3B,EAAEqC,EAAErC,EAAEqC,GAAG5C,EAAE4C,IAAI,GAAG/H,EAAE+H,KAAKhI,IAAIsH,EAAEU,GAAG/H,EAAE+H,KAAKhI,IAAmB,IAAhBuB,EAAE0B,QAAQ+E,IAASA,IAAI5C,EAAE,OAAOkC,OAAO,GAAGzB,GAAG,IAAI,IAAIoC,EAAEtC,EAAE,EAAEsC,GAAG,EAAEA,IAAI,GAAGjH,EAAEiH,KAAKnC,IAAmB,IAAhBvE,EAAE0B,QAAQgF,IAAS,IAAIA,EAAE,OAAOA,OAAO,IAAI,IAAIC,EAAEvC,EAAEuC,GAAG,EAAEA,IAAI,GAAGjI,EAAEiI,EAAE,KAAKlI,IAAmB,IAAhBuB,EAAE0B,QAAQiF,IAAS,IAAIA,EAAE,OAAOA,GAA+D,IAAIxI,EAAE,GAAGE,EAAE,IAAI,SAAS3Q,EAAEwQ,EAAEE,GAAG,aAAa,SAASD,EAAEzQ,GAAG,OAAOA,GAAGA,EAAEiR,WAAWjR,EAAE,CAACkR,QAAQlR,GAAymD,SAAS8K,EAAE9K,EAAEwQ,GAAGpL,SAAS8T,gBAAgBlZ,IAAIuS,EAAE4D,GAAE,WAAW,OAAOnW,EAAEmZ,kBAAkB3I,EAAEA,EAAE8B,KAAI,GAAGtS,EAAEmZ,kBAAkB3I,EAAEA,EAAE8B,IAAI,SAASlB,EAAEpR,GAAG,IAAG,EAAGiW,EAAEZ,UAAUrV,GAAG,OAAOA,EAAE,IAAG,EAAGiW,EAAEV,UAAUvV,GAAG,OAAOsV,OAAOtV,GAAG,QAAG,IAASA,GAAG,OAAOA,EAAE,OAAOS,EAAE,MAAM,IAAIsU,MAAM,mGAAmGC,KAAKC,UAAUjV,IAAIsR,OAAOC,eAAef,EAAE,aAAa,CAAC1R,OAAM,IAAK,IAAI0T,EAAElB,OAAOI,QAAQ,SAAS1R,GAAG,IAAI,IAAIwQ,EAAE,EAAEA,EAAEmB,UAAUC,OAAOpB,IAAI,CAAC,IAAIE,EAAEiB,UAAUnB,GAAG,IAAI,IAAIC,KAAKC,EAAEY,OAAOO,UAAUC,eAAejB,KAAKH,EAAED,KAAKzQ,EAAEyQ,GAAGC,EAAED,IAAI,OAAOzQ,GAAGyR,EAAE,mBAAmBqE,QAAQ,iBAAiBA,OAAOC,SAAS,SAAS/V,GAAG,cAAcA,GAAG,SAASA,GAAG,OAAOA,GAAG,mBAAmB8V,QAAQ9V,EAAEgT,cAAc8C,QAAQ9V,IAAI8V,OAAOjE,UAAU,gBAAgB7R,GAAGwQ,EAAEU,QAAp4E,SAAWlR,GAAG,IAAIwQ,EAAE,CAACwF,4BAAuB,EAAOyC,yBAAoB,GAAQ,MAAM,CAAClZ,MAAMiR,EAAE4C,OAAO,SAAS1C,GAAG,IAAID,EAAEkB,UAAUC,OAAO,QAAG,IAASD,UAAU,GAAGA,UAAU,GAAG3R,EAAE2Q,EAAEF,EAAEyC,aAAanB,EAAEtB,EAAE8C,KAAKxC,EAAEN,EAAE+C,MAAMlB,EAAE7B,EAAE6C,KAAKf,EAAE9B,EAAEgD,gBAAgB0C,OAAE,IAAS5D,EAAEF,EAAEoB,gBAAgBlB,EAAE6D,EAAE3F,EAAEwD,kBAAkBoC,OAAE,IAASD,GAAGA,EAAEE,EAAE7F,EAAEiD,SAAS6C,OAAE,IAASD,GAAGA,EAAE,GAAG,oBAAoB5F,IAAIA,EAAEC,EAAE7R,OAAO4R,IAAIF,EAAEwF,uBAAuB,EAAE,oBAAoBjE,EAAE,YAAYN,EAAEM,MAAMjB,QAAG,IAASiB,EAAEuB,WAAM,IAASvB,EAAEwB,OAAOjB,EAAEP,EAAEuB,KAAKvB,EAAEA,EAAEwB,MAAM,IAAIiD,OAAE,EAAOC,OAAE,EAAO,GAAG1E,aAAa7C,QAAQsH,GAAE,EAAGP,EAAEnB,0BAA0B/C,EAAEoE,KAAQ,IAAJpE,EAAO,CAAC,IAAI2E,EAAEtF,EAAEV,GAAGkG,EAAEjG,EAAEyI,aAAavC,EAAErG,EAAEwF,uBAAuBe,EAAEvG,EAAEiI,oBAAoBtB,OAAE,EAAO,IAAI,oBAAoBpF,EAAE,YAAYN,EAAEM,MAAMM,EAAEuC,YAAY,CAAC,IAAkF,KAA/E6B,EAAE1E,EAAE2E,EAAE,CAACR,qBAAqBU,EAAEZ,uBAAuBa,EAAEpD,gBAAgB0C,KAAW,OAAO,IAAIiB,GAAE,EAAGnB,EAAER,mBAAmBgB,GAAGY,EAAED,EAAExB,sBAAsB0B,EAAEF,EAAEvB,QAAQY,EAAEY,EAAEF,EAAEG,EAAEd,GAAE,EAAGP,EAAEnB,0BAA0B2B,EAAEN,QAAQM,EAAE1E,EAAE,IAAIwF,EAAE,CAACvB,uBAAuBa,EAAErD,MAAMzC,EAAE0C,gBAAgB0C,EAAE7C,KAAKhB,EAAErF,YAAYuJ,EAAEN,qBAAqBU,EAAE3C,kBAAkBoC,GAAGmB,GAAE,EAAGxG,EAAEE,SAASwF,EAAED,EAAEc,GAAGE,EAAED,EAAEc,eAAeZ,GAAG,oBAAoBpF,EAAE,YAAYb,EAAEa,MAAMD,EAAEuC,YAAYgD,EAAE,GAAGF,KAAiC,KAA7BE,EAAEtF,EAAEmF,EAAEjF,EAAE,CAACkG,SAAShC,GAAGa,KAAWK,EAAE,CAAC9Y,MAAM+X,EAAEwC,UAAS,IAAI,EAAGpD,EAAEZ,UAAUuC,KAAKA,EAAE,CAAC9Y,MAAM8Y,KAAK,IAAIC,EAAEH,EAAEE,EAAE9Y,MAAM2Y,EAAEM,GAAE,EAAG5F,EAAEjB,SAAS,CAAC8E,uBAAuBa,EAAE4B,oBAAoB1B,EAAEuB,eAAeT,EAAE5K,YAAYuJ,EAAEkC,SAAShC,EAAER,qBAAqBU,EAAEnD,gBAAgB0C,EAAEwC,oBAAoBf,EAAEe,oBAAoBC,iBAAiBzB,IAAIa,EAAEH,IAAIrB,GAAG,IAAIuB,EAAEE,EAAE1B,EAAEC,EAAE/V,EAAEyX,EAAEF,EAAEC,EAAEJ,EAAErH,EAAEwF,uBAAuBkC,EAAE1H,EAAEiI,oBAAoBjC,EAAE7F,EAAE7R,QAAQoZ,IAAIvH,EAAE7R,MAAMoZ,EAAEpN,EAAE6F,EAAEoH,SAAgzB,IAAW5F,EAAE1B,EAAPC,EAAE,IAAiBM,EAAEP,EAAPC,EAAE,IAAUuF,EAAEvF,EAAE,GAAG2B,EAAE3B,EAAE,GAAGjQ,EAAE,GAAG6R,EAAE,OAAOxB,EAAE,SAASyB,EAAE,oBAAoB+G,WAAW,WAAWxB,KAAKwB,UAAUC,WAAWpD,EAAE,oBAAoBpR,sBAAsBA,sBAAsByU,YAAY,SAASxZ,EAAEwQ,GAAG,aAAa,SAASE,EAAE1Q,GAAG,OAAO,WAAW,OAAOA,GAAG,IAAIyQ,EAAE,aAAaA,EAAEgJ,YAAY/I,EAAED,EAAEiJ,iBAAiBhJ,GAAE,GAAID,EAAEkJ,gBAAgBjJ,GAAE,GAAID,EAAEmJ,gBAAgBlJ,EAAE,MAAMD,EAAEoJ,gBAAgB,WAAW,OAAOlR,MAAM8H,EAAEqJ,oBAAoB,SAAS9Z,GAAG,OAAOA,GAAGA,EAAEsQ,QAAQG,GAAG,SAASzQ,EAAEwQ,EAAEE,GAAG,aAAiW,IAAIC,EAAE,SAAS3Q,KAAKA,EAAEsQ,QAA1W,SAAWtQ,EAAEwQ,EAAEE,EAAED,EAAE3F,EAAEsG,EAAEoB,EAAEf,GAAG,GAAGd,EAAEH,IAAIxQ,EAAE,CAAC,IAAI+R,EAAE,QAAG,IAASvB,EAAEuB,EAAE,IAAIgD,MAAM,qIAAqI,CAAC,IAAI5C,EAAE,CAACzB,EAAED,EAAE3F,EAAEsG,EAAEoB,EAAEf,GAAGV,EAAE,GAAEgB,EAAE,IAAIgD,MAAMvE,EAAEuJ,QAAQ,OAAM,WAAW,OAAO5H,EAAEpB,UAAUiJ,KAAK,sBAAsB,MAAMjI,EAAEkI,YAAY,EAAElI,KAAoC,SAAS/R,EAAEwQ,EAAEE,GAAG,aAAa,IAAID,EAAEC,EAAE,GAAGC,EAAED,EAAE,GAAG5F,EAAE4F,EAAE,IAAI1Q,EAAEsQ,QAAQ,WAAW,SAAStQ,EAAEA,EAAEwQ,EAAEE,EAAED,EAAEW,EAAEoB,GAAGA,IAAI1H,GAAG6F,GAAE,EAAG,mLAAmL,SAASH,IAAI,OAAOxQ,EAAEA,EAAEyU,WAAWzU,EAAE,IAAI0Q,EAAE,CAAC4D,MAAMtU,EAAEuU,KAAKvU,EAAEuP,KAAKvP,EAAE0U,OAAO1U,EAAEka,OAAOla,EAAEoQ,OAAOpQ,EAAEma,OAAOna,EAAEoa,IAAIpa,EAAEqa,QAAQ7J,EAAE8J,QAAQta,EAAEua,WAAW/J,EAAEgK,KAAKxa,EAAEya,SAASjK,EAAEkK,MAAMlK,EAAE6D,UAAU7D,EAAEgE,MAAMhE,EAAEmK,MAAMnK,GAAG,OAAOE,EAAEkK,eAAenK,EAAEC,EAAEzN,UAAUyN,EAAEA,IAAI,SAAS1Q,EAAEwQ,EAAEE,GAAG,aAAa,mBAAmBoF,QAAyBA,OAAOC,SAAuJ/V,EAAEsQ,QAAQI,EAAE,EAAFA,IAAQ,SAAS1Q,EAAEwQ,GAAG,aAAkExQ,EAAEsQ,QAAjD,gDAA4D,SAASE,EAAEE,GAAGF,EAAEF,QAAQtQ,O,mMCQr9Z6a,EAAgB,SAAC,GAAD,IACpBpY,EADoB,iBAEpBwK,EAFoB,cAGpBlE,EAHoB,YAIpB8D,EAJoB,WAKpBiO,EALoB,gBAMpB9R,EANoB,WAOpB+R,EAPoB,WAQpB3Y,EARoB,QASpB4N,EAToB,WAUpBL,EAVoB,UAWpBnP,EAXoB,WAYpBQ,EAZoB,SAapBkM,EAboB,WAcpBpO,EAdoB,QAepBwO,EAfoB,mBAiBpB,uBACEvE,UADF,EAEEuE,UAFF,EAGE7K,eAHF,EAIEoK,SAJF,EAKE7D,SALF,EAMEgH,SANF,EAOEL,QAPF,EAQE3O,OARF,EASEiM,YATF,EAUEC,SAVF,EAWEM,eACEuN,GACE,uBACElO,SAAUA,GADZ,EAEEmO,WAFF,OAGEC,KAAM,sBAHR,MAIEC,SAJF,IAKE9L,QALF,EAMEjC,KANF,YAOE/K,MAAO,CAAE+Y,YAAF,UAA0BC,WAAY,UAInDhZ,MAxBF,EAyBEtD,MAAOA,KAIX+b,YAA0B,CACxBpY,eAAgBQ,UADQ,IAExB8F,UAAW9F,IAFa,OAGxB+F,SAAU/F,IAHc,IAIxBb,MAAOa,aAAmBA,IAJF,QAKxBgK,YAAahK,IALW,OAMxB0M,QAAS1M,IANe,KAOxBzC,SAAUyC,IAPc,KAQxB+M,SAAU/M,IARc,KASxBjC,OAAQiC,IATgB,KAUxBnE,MAAOmE,cAAoB,CACzBA,IADyB,OAEzBA,IAFyB,OAGzBA,IAbsB,SAexB8X,SAAU9X,IAfc,KAgBxB4J,SAAU5J,IAhBc,KAiBxB6X,cAAe7X,IAjBS,KAkBxBiK,SAAUjK,IAlBc,KAmBxBqK,UAAWrK,IAAUsR,MAGvB,MAAe8G,YAAf,G,mDC1EA,E,OAAeha,EAAf,gB,8ECEMia,EAAW,SAAC,GAAD,IAAGzR,EAAH,OAASpE,EAAT,QAAgBrD,EAAhB,eACf,yBAAK0H,IAAL,EAAiB1H,MAAOA,GACrByH,EAFY,K,IA4BF,SAAyB,GAMrC,IALDF,EAKC,EALDA,MAKC,IAJD4R,kBAIC,MAJY,GAIZ,MAHDC,2BAGC,MAHqB,EAGrB,EAFDzT,EAEC,EAFDA,MACAD,EACC,EADDA,OAEM2T,EAAqBC,YAAyB,CAClDC,YADkD,EAElDJ,WAFkD,EAGlD5R,UAGF,OACE,uBACE7B,OAAQA,GADV,EAEEe,UAAWc,EAFb,OAGER,SAHF,EAIEjC,SAJF,EAKEa,MAAOA,GANX,K,gDCrCa,SAAkC,GAI9C,IAHDwT,EAGC,EAHDA,WACAI,EAEC,EAFDA,YACAhS,EACC,EADDA,MAOA,OALyB5H,mBACvB,kBAZoB,SAACwZ,EAAYC,EAAqBI,GAGxD,OAAOL,GADLK,MADF,GAWQC,CAAgBN,EAAYI,EAAahS,EAA/C,UACA,CAACgS,EAFH,M,kMCLIG,EAAmBC,uCAAzB,kBAIMC,EAAmBD,uCAAzB,cAKA,SAASE,EAAgB,GAQtB,IAPDza,EAOC,EAPDA,SAOC,IANDga,2BAMC,MANqB,EAMrB,MALDU,WAAYC,OAKX,MAL4B,GAK5B,MAJDC,qBAIC,MAJe,aAIf,EAHDtU,EAGC,EAHDA,OACAC,EAEC,EAFDA,MAEC,IADDsU,mBACC,SACKC,EAAYpd,iBAAlB,MADC,EAEmCC,mBAFnC,sBAEM+c,EAFN,KAEkBK,EAFlB,KAID3c,qBAAU,WACJ0c,EAAJ,SAAuBA,oBADzB1c,IAJC,IAQOf,GAAY+D,2BARnB,YAUDhD,qBAAU,WACJyc,GAAJ,GACE7C,YAAW,WACL8C,EAAJ,SAAuBA,oBADzB9C,KAID,CAAC6C,EANJzc,IAQA,IAAM4c,EAAmBza,mBACvB,kBACEP,EAAA,QACE,mBACG0a,GACDlN,uCAA2CkN,EAF7C,oBAIJ,CAAC1a,EAPH,IAUA,OACE,oCACE,yBACE,uBACEwH,SADF,EAEExI,SAAU,gBAAG1B,EAAH,eAAeyd,EAAf,IACV3M,eAHF,EAIEmL,UAJF,EAKEjc,MAAOod,MAGTM,EAAD,QACC,yBAXJ,GAaE,uBACEhB,oBADF,EAEE1T,OAFF,EAGE6B,MAHF,EAIE5B,MAAOA,KAMf,IAAMsC,EAAQ,CAEZmR,oBAAqBvY,+BAFT,kEAMZiZ,WAAYjZ,+BANA,iBAQZmZ,cAAenZ,+BARH,gDAYZzB,SAAUyB,8BAZE,qCAcZ6E,OAAQ7E,sBAAoB,CAACA,YAAD,OAAmBA,YAAvCA,qBAdI,mCAkBZ8E,MAAO9E,sBAAoB,CAACA,YAAD,OAAmBA,YAAvCA,qBAlBK,kCAsBZoZ,YAAapZ,8EAKfgZ,cAEwC5Y,mBAAS4Y,GACjDQ,YAEA,MAAeC,YAAf,G,wGCtGMC,EAAKpa,UAAH,uCAAGA,CAAH,CAAR,+DAMMqa,EAAQb,kBAPd,iBAOA,SACMc,EAAgB,SAAC,GAAD,IAAGC,EAAH,0BAAUC,OAAV,gBACpB,yBACGA,GAAiB,sBADpB,MAEGD,GAAS,yBAHQ,KAOhBzS,EAAQ,CAEZyS,MAAO7Z,+BAFK,2BAIZ8Z,cAAe9Z,6DAGjB4Z,cAEkCxZ,mBAASwZ,GAC3CG,Y,mFC3BA,SAASC,EAAc5S,GACrB,OAAO,wCAA2BmE,OAAK,KAGzC,IAAMnE,EAAQ,CAEZkE,OAAQtL,oBAAkBA,YAAlBA,oBAFI,+DAMZuL,MAAOvL,6BANK,kCAQZwL,QAASxL,oEAGXga,cAEsC5Z,mBAAS4Z,GAC/CC,Y,mFClBA,SAASC,EAAW9S,GAClB,OAAO,wCAA2BmE,OAAO,KAG3C,IAAMnE,EAAQ,CAEZkE,OAAQtL,oBAAkBA,YAAlBA,oBAFI,qBAIZwL,QAASxL,oEAGXka,cAEmC9Z,mBAAS8Z,GAE5CC,Y,oEChBQC,EAAiBC,YAA0B,sBAA3CD,a,IACa,SAAC,GAA2C,QAAzC5P,gBAAyC,aAAvB8P,SACxC,OAAK9P,QAD0D,SAE/D,EACS,0BAAM1E,UAAS,cAAtB,UAEK,0BAAMA,UAAS,+BAAtB,UAJmC,O,6DCFrC,EAAeoF,YAAW,CACxBC,MAAO,CADiB,qMAIxBtG,OAJwB,GAKxBC,MAAO,K,oECLT,EAAeoG,YAAW,CACxBC,MAAO,CADiB,gEAExBtG,OAFwB,GAGxBC,MAAO,K,okBCHT,IAEMyV,EAAYzB,mBAFlB,qBAGM0B,EAAa1B,oBAHnB,oBAGA,SAEqB2B,c,wNAGX,I,4CAER,WAAS,MAOH/U,KAPG,MAELgV,EAFK,YAGLC,EAHK,aAIK/c,EAJL,WAKLkI,EALK,YAMLtG,EANK,iBAQDob,EACJhd,GAAkBA,EAAlBA,MAAyCA,OAAzCA,KACIA,YADJA,cADF,UAIA,OACE,iCACEkI,UAAS,wBAxBjB,oBAwBiB,iBADX,GAIG4U,GAAa,yBAJhB,KAMGC,GAAc,yBAPnB,Q,EAjBiBF,CAAqBI,a,YAArBJ,iBACG,I,kKCLlBK,EAAc,SAAC,GAAD,uBAClBtb,OADkB,wBAElBuG,OAFkB,6BAGlBD,OAHkB,wBAIlB8D,OAJkB,2BAKlBiO,OALkB,mBAMlB1Y,OANkB,wBAOlByN,OAPkB,8BAQlB5C,OARkB,uCASlB2C,OATkB,2BAUlBE,OAVkB,qBAWlBH,OAXkB,MAWR,wBAXQ,eAYlBnP,OAZkB,MAYP,wBAZO,eAalBwP,OAbkB,MAaP,wBAbO,aAclBhP,OAdkB,MAcT,wBAdS,eAelBkM,OAfkB,mBAgBlBpO,OAhBkB,4BAiBlBic,OAjBkB,gBAmBlB,uBACEhS,UADF,EAEE+G,cAFF,EAGErN,eAHF,EAIEoK,SAJF,EAKEiO,cALF,EAME9R,SANF,EAOE2G,QAPF,EAQEnP,SARF,EASEwP,SATF,EAUEhP,OAVF,EAWEiM,YAXF,EAYE4C,SAZF,EAaE3C,SAbF,EAcE0C,cAdF,EAeEmL,SAfF,EAgBE3Y,MAhBF,EAiBEtD,MAAOA,KAILkf,EAAiB,CACrBvb,eAAgBQ,+BADK,oDAIrB8F,UAAW9F,+BAJU,wBAKrB+F,SAAU/F,+BALW,mCAMrBb,MAAOa,+BANc,+BAOrB4M,SAAU5M,+DAPW,YAUrBgK,YAAahK,8EAVQ,cAarB2M,cAAe3M,sGAbM,GAgBrB6M,cAAe7M,mFAhBM,GAmBrB0M,QAAS1M,6BAnBY,wEAsBrBzC,SAAUyC,6BAtBW,sDAyBrB+M,SAAU/M,6BAzBW,wCA0BrBjC,OAAQiC,6BA1Ba,sCA2BrBnE,MAAOmE,sBAAoB,CACzBA,YADyB,OAEzBA,YAFyB,OAGzBA,YAHKA,qBA3Bc,yBAgCrB8X,SAAU9X,6EAhCW,GAmCrB4J,SAAU5J,mFAnCW,GAsCrB6X,cAAe7X,yEAtCM,GAyCrBiK,SAAUjK,wFAKZ8a,cAE4B1a,mBAAS0a,GACrCE,Y,kbC9EA,SAASC,EAAQ,GAad,IAZDC,EAYC,EAZDA,QAYC,IAXDR,iBAWC,WAXWva,EAWX,MAVDgb,aAUC,WAVOhb,EAUP,MATDib,uBASC,MATiB,QASjB,EARSC,EAQT,EARD9c,SACA+c,EAOC,EAPDA,eACAC,EAMC,EANDA,sBAMC,IALDC,sBAKC,MALgB,GAKhB,EAJDC,EAIC,EAJDA,eACAtP,EAGC,EAHDA,QACAuP,EAEC,EAFDA,UACA7Z,EACC,EADDA,GAEM8Z,EAAU1f,iBAAhB,MACMmd,EAAcnd,kBAApB,GAFC,EAG2C2f,iBAAoBzb,EAAW,CACzE0b,YAAa,UAJd,YAGOjgB,OAHP,SAGwBkgB,EAHxB,SAGgCC,EAHhC,SAOKF,EAAcP,sBAApB,QAEQU,EAAoBC,cAT3B,gBA6BKC,EACJ,UAAAL,EACI,CACEhc,aAbyB,WAC/Bic,IACA1C,cAYMtZ,aAAcic,GAEhB,CAAE5P,QAnBoB,SAACpP,GAC3B,GAAaoP,OAoBTwO,EACJ,YAAAW,EACE,uBACE3Q,aADF,mBAEEoN,WAFF,OAGEoE,SACE,uBACErW,UADF,gBAEEsW,MAAO,CAAC,gBAFV,KAGE/X,KAAK,MAGT8H,QAAS,mBAtCqB,SAACpP,GACnCA,oBACA+e,IACA1C,aAmCoBiD,CAAP,IACThY,KAXF,IAYEoG,QAAS6R,IAAeC,UAG1B,uBACEzW,UADF,gBAEEsW,MAAO,CAAC,gBAFV,KAGE/X,KAAK,OAIX,OACE,oCACE,uBACEmY,iBACE,kCACEC,iBAAkB,CAChBC,UAAW,CAAC,kBAAMV,EAAgBL,EAAtB,UAAD,SAEbvC,YAAaA,EAJf,QAKEuD,iBAAkBZ,GALpB,GAOEL,UAPF,EAQE9f,QAASA,IAVf,GAeEwf,gBAfF,EAgBEwB,OAhBF,EAiBEC,OAAQ,mBAAcC,EAAUhB,IAAWC,KAC3Ctd,UAlBF,cAmBEO,WAnBF,EAoBE+d,iBACE,iCACEtB,eADF,EAEEF,sBAFF,EAGE1Z,GAHF,EAIEkE,SAJF,EAKEoV,MALF,EAMET,UANF,EAOEQ,QAASA,GAPX,GASE8B,UAAW,YAEPjgB,gCACAA,OAFF,KAGEA,YAxEZ+e,IACA1C,eA4EQuB,WAAYA,GAlBd,OA2BV,IAAMvT,EAAQ,CAEZ8T,QAASlb,6BAFG,+BAIZ0a,UAAW1a,6BAJC,cAMZmb,MAAOnb,+BANK,iBAQZob,gBAAiBpb,mCARL,mDAYZzB,SAAUyB,sBAAoB,CAACA,YAAD,MAAkBA,YAAtCA,mBAZE,kBAgBZsb,eAAgBtb,kBAAgB,CAAhBA,yBAhBJ,sCAmBZub,sBAAuBvb,6BAnBX,IAqBZwb,eAAgBxb,+BArBJ,sCAyBZyb,eAAgBzb,6BAzBJ,iCA2BZmM,QAASnM,6BA3BG,oBA4BZ0b,UAAW1b,4BA5BC,IA8BZ6B,GAAI7B,gDAGNib,cAE4B7a,mBAAS6a,GAErCgC,YCzKA,IAAMC,EAAO,wBAEb,SAASC,EAAe,GAUrB,QATD5R,aASC,aARD6R,kBAQC,aAPDhE,mBAOC,aANDiE,gBAMC,MANUH,EAMV,EALD3e,EAKC,EALDA,SAKC,IAJDmI,aAIC,WAJOvG,EAIP,MAHDmL,cAGC,MAHQC,EAAQ,GAAK,GAGrB,EAFDzG,EAEC,EAFDA,MACAD,EACC,EADDA,OAEMyY,EAAgBxe,mBACpB,kBACE4H,GACAA,EAAA,KAAU,YACR,IAAMmU,EAAY0C,EAAgBhS,EAAQ,WAA1C,SACA,OACE,sCAEE1E,IAAK2W,QAAaA,EAAbA,IAAwBA,EAF/B,IAGEA,KAHF,EAIEzG,KAAMyG,MAAWA,EAAKzG,aAI9B,CAdF,IAgBM0G,EAAyBrS,YAAkB,CAC/C7M,SAAU+e,GADqC,EAE/C/R,MAF+C,EAG/CD,OAH+C,EAI/CE,QAAS6R,IAGX,SAEI,uBACEjE,YADF,EAEEvU,OAFF,EAGE6B,MAHF,EAIE5B,MAAOA,GALX,GAYA,uBACED,OADF,EAEE6B,MAFF,EAGE5B,MAAOA,IAKb,IAAMsC,EAAQ,CAEZmE,MAAOvL,6BAFK,0BAIZod,WAAYpd,6BAJA,iCAMZoZ,YAAapZ,6BAND,qCAQZqd,SAAUrd,6BARE,8CAWZzB,SAAUyB,6BAXE,IAaZ0G,MAAO1G,8BAbK,yBAeZsL,OAAQtL,sBAAoB,CAACA,YAAD,OAAmBA,YAAvCA,oBAfI,6DAmBZ8E,MAAO9E,+BAnBK,yBAqBZ6E,OAAQ7E,0DCjFV,SAAS0d,EAAiB,GAAsB,IAApB1R,EAAoB,EAApBA,QAAYgB,EAAQ,2BAC9C,OACE,uCAEE0N,UAAW,uBAAY1O,QAASA,IAChCpB,KAAK,sBD+EXuS,cAEuC/c,mBAAS+c,GAChDQ,YEhFA,IAAMC,EAAY,CAChBC,UADgB,IAEhBC,SAFgB,EAGhBC,MAHgB,GAIhBC,SAJgB,EAKhBC,QALgB,EAMhB,kBAAmBd,GAGfe,EAAW,CACff,eAAgB,mBAGX,SAASI,IAId,IAHArT,EAGA,uDAHO,GACPxD,EAEA,uCADAyX,EACA,uDADcP,EAAUE,SAElBM,EAAc1X,GAApB,EACM2X,EAAaH,MAAkBhU,EAArC,cACA,OAAOkU,MAAP,EAGK,SAASE,EAAgBxiB,GAAoC,IAA3ByiB,EAA2B,uDAAjBhB,EACjD,OAAOzhB,EAAA,KAAY,cACjB,GAAIiF,qBAAWyd,EAAf,UACE,OAAOA,EAAA,SAAgB,CACrB3X,IAAK2X,EADgB,GAErBhB,KAAMgB,IAGV,IAAMC,EAAgBF,EAAQC,EAA9B,MACMjgB,EACJigB,YAAmBF,EAAgBE,EAAD,SADpC,GAEA,OACE,sCAEE3X,IAAK2X,MAFP,EAGEhB,KAHF,EAIErR,QAJF,KAKEuS,YAAaF,EALf,UADF,MC/BJ,IAAMtB,EAAO,wBAIPyB,EAAU7F,mBAFhB,YAEA,WACM8F,EAAQ,mBAHd,YAGc,SAGZ,kBAA2B,CAAEC,MAA7B,QAAoCC,UAApC,gBAGIC,EAAc,SAACC,EAAOF,EAAWG,GAAnB,OAClB,qBAAOpY,IAAP,EAAqBqY,WAAY,CAAEJ,cADjB,IAMdK,EAAe,SAACC,EAAQN,GAAT,OACnB7S,iBACImT,MADJnT,GAEI8S,EAAYK,EAHG,IAKfC,EAAU,kBApBhB,YAoBgB,MAGd,gBAAGzV,EAAH,WAAa2R,EAAb,wBAAoCE,EAApC,iBAAoDqD,EAApD,YAA+D5U,EAA/D,2BACEN,SADF,EAEE2R,sBAFF,EAGEE,eAHF,EAIEqD,aAJF,6BAQIQ,EAAgB,WAAgB,IAAf3Q,EAAe,uDAAN,EAC9B,OAAIA,EAAJ,GAAwB,IACxB,EAAOA,GAET,SAAS0J,EAASjR,GAAO,IAErBrB,EAkBEqB,EApBmB,WAoBnBA,EApBmB,GAGrBmY,OAHqB,eAoBnBnY,EApBmB,KAIrBwD,OAJqB,qBAoBnBxD,EApBmB,UAKrBsT,OALqB,eAoBnBtT,EApBmB,WAMrBuT,OANqB,iBAoBnBvT,EApBmB,sBAOrBmU,OAPqB,iBAoBnBnU,EApBmB,MAQrB+T,OARqB,eASrB5c,EAWE6I,EApBmB,WAoBnBA,EApBmB,SAUrB9J,OAVqB,aAoBnB8J,EApBmB,UAWrB4V,OAXqB,YAoBnB5V,EApBmB,UAYrB0X,OAZqB,SAarB5D,EAOE9T,EApBmB,UAoBnBA,EApBmB,SAcrBwC,OAdqB,SAerB6R,EAKErU,EApBmB,eAgBrBoY,EAIEpY,EApBmB,UAkBrBjI,GAEEiI,EApBmB,UAoBnBA,EApBmB,OAmBlBsD,EAnBkB,qNAsBjB+U,EAAU9f,qBAAhB,KACMqH,EAAM/K,iBAAZ,MAEA,GADAggB,eACIvR,EAAJ,SACE,OACE,sCAAoBgR,UAAW+D,EAAQ/D,YACpC4C,EAAgB5T,EAFrB,WAOF,IAAMgV,EAAe5gB,mBAAQ,kBAAM6gB,eAAKjV,EAAY,CAAvB,WAAkC,CAA/D,IASA,OACE,iCACE6U,GADF,EAEEL,WAAY,CACVtV,SADU,EAEV2R,sBAFU,EAGVE,eAHU,EAIVqD,UAJU,EAKV5U,KAAMQ,EAAWR,MAEnBrI,GAAI6I,EATN,GAUE3E,SACE2E,oBAAiCkV,YAAU7Z,EAA3C2E,GAXJ,EAaEsS,WACG8B,GACD1S,aAAO,YACDrP,aAAJ,UAAqBA,QACnBA,mBACAA,uBACE,IAAI8iB,WAAW,QAAS,CACtBC,KADsB,OAEtBC,SAFsB,EAGtBC,YAAY,QAtBxB,GA4BEpV,KA5BF,EA6BEzL,MA7BF,EA8BE7B,SAAUA,GA9BZ,GAgCE6O,QAxCY,WACVuT,EAAJ,SAA0BA,6BACtBA,gBAA6BD,EAAjC,WACEA,mCAuCEvE,GAAWiE,EAAazE,EAlC5B,GAmCGS,GACC,qBACEhc,MACEqgB,EAAA,EACI,CACE1a,MAAO,GAAF,OAAKwa,EAAL,GADP,MAEEW,SAAU,GAAF,OAAKX,EAAL,eAEVnf,GAGN,uBAAwBtE,MAAOsf,KA9CrC,EAkDGR,GAAcwE,EAlDjB,GADF,GAyDF,IAAM/X,GAAQ,CAEZmY,GAAIvf,gCAFQ,qDAQZ+F,SAAU,sBAAoB,CAC5B/F,YAD4B,KAE5B,kBAAgB,CAAEkgB,QAASlgB,YAAUmX,QAF7B,YARE,8BAaZuD,UAAW1a,gCAbC,0CAiBZ2a,WAAY3a,gCAjBA,2CAqBZmb,MAAOnb,+BArBK,2BAuBZb,MAAOa,+BAvBK,sCAyBZ4J,SAAU5J,6BAzBE,qBA2BZmgB,SAAUngB,+BA3BE,uCA6BZ4K,KAAM5K,6CCxJR,SAASogB,GAAkB,GAUxB,QATDxV,YASC,MATM,mBASN,MARDoB,eAQC,aAPD+K,YAOC,MAPM,GAON,MANDsJ,iBAMC,MANW,uBAAWjE,MAAO,CAAC,gBAAiB,OAM/C,EAHD1B,GAGC,EAJDnc,SAIC,EAHDmc,WAGC,IAFD8C,YAEC,WAFMrd,EAEN,EADEuK,EACF,mFACK8Q,EA9BR,SAAsB,GAAa,IAAXxP,EAAW,EAAXA,QACtB,MAAO,CACLA,QADK,EAEL,eAAgBA,GA2BKsU,CAAa,CAAEtU,QAAF,EAAW+K,SAOzCwJ,EACJ7F,IACCc,EAAA,QACC,yBAAK1V,UAAU,kBADhB,GAGC,wBALJ,OAOA,OACE,0CAIE2V,eACE+B,GAAQA,EAARA,eAA8BA,EAA9BA,eAAoD,aAEtD9W,MAAOgE,EAPT,SAQEgQ,UARF,EASEvO,QAvBgB,kBAClB,YAAOzB,EAAD,QAAqB8Q,EAA3B,SACE,CAAExe,OAAQ,CAAEnB,MAAF,EAAemQ,YAFT,IAwBhBpB,KAAMA,KDuHZyN,eAE6BjY,mBAASiY,GACtCmI,aCrHA,IAAMpZ,GAAQ,CAEZ4E,QAAShM,6BAFG,sCAIZqgB,UAAWrgB,gCAJC,0CAQZ+W,KAAM/W,+BARM,mBAUZwd,KAAMxd,+BAVM,0BAYZ4K,KAAM5K,+BAZM,aAcZ0a,UAAW1a,sDC9Eb,SAASygB,GAAcrZ,GACrB,OAAO,uCAA8BwD,KAAK,mBDgF5CwV,gBAEuChgB,mBAASggB,IAChDM,aChFA,IAAMtZ,GAAQ,CAEZ4E,QAAShM,6BAFG,sCAIZqgB,UAAWrgB,2E,6kBAKbygB,gBAEkCrgB,mBAASggB,IAC3CO,aCOA,IAIMzD,GAAO,aAEP0D,GAAgB,mBAJtB,OAIsB,IAGpB,gBAAGC,EAAH,eAAiB3W,EAAjB,2BACE,iBAAkB2W,GADpB,wBAWIC,GAAgB,SAAC/U,EAAO7B,GAAR,OAAiB6B,cAAjB,GAEtB,SAASgV,GAAO,GAgBb,QAfDvhB,sBAeC,MAfgB,GAehB,EAdDuG,EAcC,EAdDA,SAcC,IAbDwZ,GAAIyB,OAaH,MAbaC,WAASC,GAatB,MAZD3iB,gBAYC,WAZU4B,EAYV,MAXDghB,sBAWC,MAXgBjE,GAWhB,MATDthB,eASC,WATSuE,EAST,MARDiZ,mBAQC,aAPDoG,iBAOC,MAPW,EAOX,MANDrgB,aAMC,MANO,GAMP,MALDiiB,gBAKC,WALUjhB,EAKV,MAJD8f,gBAIC,WAJU9f,EAIV,EAHDub,EAGC,EAHDA,UAGC,IAFD2F,wBAEC,SADE3W,EACF,+KACK4W,EAAUrlB,iBAAhB,MACQslB,EAAe5hB,qBAFtB,kBAGqC6hB,YAAoB,CAAE5lB,QAAF,EAAWuD,UAA/CsiB,GAHrB,0CAMKC,EAAe5iB,mBAAQ,WAC3B,IAAM6iB,EAAiB,8BACrB,mBACEb,GAAc/U,EAAd+U,mBACAA,GAAc/U,EADd+U,qBAEAA,GAAc/U,EAFd+U,kBAGA/U,QAJF,aAOF,OAAO,oBAEL,mBACEA,GACA,4BACKA,EADL,WAEEmP,SAAUyG,QAFZ,EAGEnC,UAHF,EAIE9D,oBAGL,CApBH,IAgCA,OAVAkG,YAAkBN,EAAlBM,GAEAjlB,qBAAU,WACJyc,GAAJ,GACE7C,YAAW,WACTgL,MADFhL,KAID,CAAC3a,EApCH,IAsCO6lB,EAAD,UAAP,KACE,kBAAC,IAAD,UAAsB5lB,MAAO,CAAED,QAAF,EAAW8f,cACtC,kCACEmG,cAAY,cADd,GAGEtC,GAHF,EAIEL,WAAU,SAAQxU,cAAR,QAAsCR,KAAMQ,EAAWR,OACjEnE,SAAU6Z,YAAU7Z,EALtB,GAME6E,KAAK,QACD+U,eAAKjV,EAAY,CAPvB,sBAWE,yBACE5E,UADF,kCAEE3G,MAAK,gBAEHiiB,SAFG,EAGHnB,YACIoB,EACA,CACES,UADF,SAEEC,UAAWV,EAAgB,UACpBzkB,mBAnGzB,IAkG6C,WAEvBuD,GATP,KAfN,K,IAqCH6hB,GAAcvI,YAAqBsH,GAAQ,CAAEkB,MAAM,IAEnD7a,GAAQ,CAEZ5H,eAAgBQ,+BAFJ,kDAMZuf,GAAIvf,gCANQ,iDAUZmhB,eAAgBnhB,6BAVJ,+CAcZpE,QAASoE,6BAdG,sCAgBZoZ,YAAapZ,6BAhBD,wDAoBZohB,SAAUphB,+BApBE,yDAwBZigB,SAAUjgB,yFAKZ+gB,gBAEyB3gB,mBAAS2gB,IAElCmB,aAGAF,UACAA,kBACAA,gBACAA,aACAA,iBACAA,qBACAA,kBACAA,uBACAA,qB,kFC1LA,aAEI,EAAJ,OAEM,EAAkB,GAExB,aAUM,SAAF,EAAY,GANL,0BAAuB,GAEvB,qBAAkB,GAElB,sBAAmB,GAGtB,IAAM,EAwCd,SAAuB,GACnB,GAAyB,qBAAd,EACP,MAAO,iFAET,GAAuB,oBAAd,EACP,MAAO,gGA7CS,CAAc,GAC9B,GAAI,EACA,MAAM,UAAU,GAEpB,KAAK,WAAa,EAClB,EAAgB,KAAK,MAiC3B,OA9BS,oBAAP,SAAe,GACX,IAAM,EAAU,EAAY,UAAW,GACnC,KACA,MAAM,UAAU,GAEN,EAAgB,KAAK,qBAAsB,GAC7C,IAGZ,KAAK,qBAAqB,KAAK,IAAI,oBAAkB,IACjD,MAGD,sBAAP,SAAiB,GACT,IAAE,EAAU,EAAY,YAAa,GACzC,GAAI,EACA,MAAM,UAAU,GAEpB,IAAM,EAAQ,EAAgB,KAAK,qBAAsB,GACrD,EAAQ,IAGZ,KAAK,qBAAqB,OAAO,EAAO,GACxC,MAGG,uBAAP,WACI,KAAK,qBAAuB,GAC5B,KAAK,gBAAkB,IAE/B,EAjDA,GA4DA,SAAS,EAAY,EAAsB,GACvC,MAAuB,qBAAZ,EACA,sBAAsB,EAAY,kEAEvC,aAAmB,OAAe,aAAtC,EACS,sBAAsB,EAAY,+DAIjD,SAAS,EAAgB,EAAiC,GACtD,IAAK,IAAI,EAAQ,EAAG,EAAQ,EAAW,OAAQ,GAAS,EACpD,GAAI,EAAW,GAAO,SAAW,EAC7B,OAAO,EAGb,OAAM,EA6GR,mBA1GJ,IA+EI,EA/EE,EAAkC,SAAC,GACnC,EAAc,SAAQ,SAAC,GACjB,EAAD,gBAAkB,GACjB,EAAD,iBAAmB,GAClB,EAAD,qBAAqB,SAAQ,SAAC,GACzB,EAAG,aACiB,EAAsB,EAAG,QAC3B,EACd,EAAG,gBAAgB,KAAK,GAExB,EAAG,iBAAiB,KAAK,WAavC,EAA8B,WAC9B,IAAE,EAAwB,IAsB1B,OArBA,EAAc,SAAQ,SAAC,GACjB,GAAC,EAAG,gBAAgB,OAApB,CAIJ,IAAM,EAAU,GAChBG,EAAG,gBAAgB,SAAQ,SAAC,GACxB,IAAM,EAAQ,IAAI,sBAAoB,EAAI,QAC1C,EAAQ,KAAK,GACb,EAAI,iBAAmB,EAAM,YAAY,MACzC,EAAI,kBAAoB,EAAM,YAAY,OAC1C,IAAM,EAAc,EAAsB,EAAI,QAC1C,EAAc,IACd,EAAwB,MAIhC,EAAG,WAAW,EAAS,GACvB,EAAG,gBAAkB,OAGlB,GAWL,EAAwB,SAAC,GAE3B,IADE,IAAE,EAAQ,EACL,EAAO,YACV,EAAS,EAAO,WAChB,GAAS,EAEb,OAAO,GAGL,EAAwB,WAC1B,IAAI,EAAQ,EAEV,IADF,EAAgC,GAlDhC,EAAgB,MAAK,SAAC,GAAO,QAAE,EAAG,gBAAL,WAoDzB,EAAQ,IACR,EAAgC,GAlDpC,EAAgB,MAAK,SAAC,GAAO,QAAE,EAAG,iBAAL,WA4BU,WACvC,IAAM,EAAa,IAAK,OAAe,WAAW,kBAAmB,CACjE,QAAS,kEAGX,OAAK,cAAc,GAqBjB,IAMF,EAAY,WACV,GAEJ,KAGE,EAAU,SAAV,IACF,EAA4B,OAAO,uBAAsB,WACrD,IACA,QAIF,EAAgB,WACd,IAA8B,EAAgB,MAAK,SAAC,GAAO,QAAE,EAAG,qBAAL,YAC3D,OAAO,qBAAqB,GAC5B,OAA4B,IAQhC,UAJY,WACZ,OAAC,OAAe,eAAiB,I,gDCxLtB,SAA2BC,EAASC,EAASC,GAC1D,IAAMC,EAAatmB,mBACbumB,EAAavmB,mBAWnB,MAAO,CATe,WAAa,2BAATwmB,EAAS,yBAATA,EAAS,gBACjCC,aAAaF,EAAbE,SACAH,UAAqBhM,YAAW,kBAAM6L,eAAN,KAAhCG,IAGoB,WAAa,2BAATE,EAAS,yBAATA,EAAS,gBACjCC,aAAaH,EAAbG,SACAF,UAAqBjM,YAAW,kBAAM8L,eAAN,KAAhCG,Q,qHCTEG,EAAe,SAAC,GAAD,uBACnBnjB,OADmB,wBAEnBuG,OAFmB,2BAGnBD,OAHmB,qBAInB3G,OAJmB,yBAKnBub,OALmB,4BAMnBC,OANmB,aAOTiI,EAPS,kBASnB,uBACE5b,IADF,EAEElB,UAFF,EAGEtG,eAHF,EAIEkb,UAJF,EAKEC,WALF,EAMExb,MAAOA,GAfU,IAqBfiI,EAAQ,CAEZ5H,eAAgBQ,kCAFJ,4CAMZ+F,SAAU,sBAAoB,CAC5B/F,YAD4B,KAE5B,kBAAgB,CAAEkgB,QAASlgB,YAAUmX,QAF7B,YANE,qCAWZrR,UAAW9F,+BAXC,iCAeZb,MAAOa,+BAfK,iCAmBZ0a,UAAW1a,gCAnBC,uDAyBZ2a,WAAY3a,gCAzBA,wDA+BZzB,SAAUyB,6DAGZ2iB,cAC+BviB,mBAASuiB,GAExCE,Y,yFCnCS,cApBW,SAAC,GACf,GAAE,YAAc,EAA+B,CACzC,IAAE,EAAO,EAA8B,UAC3C,OAAO,OAAO,OAAO,CACjB,OAAQ,EAAI,OACZ,KAAM,EACN,IAAK,EACL,MAAO,EAAI,QAGX,IAAE,EAAS,OAAO,iBAAiB,GACnC,OAAG,OAAO,OAAO,CACjB,OAAQ,WAAW,EAAO,QAAU,KACpC,KAAM,WAAW,EAAO,aAAe,KACvC,IAAK,WAAW,EAAO,YAAc,KACrC,MAAO,WAAW,EAAO,OAAS,S,mIClB/B,SAAuBtW,GAAgC,IAAdzQ,EAAc,uDAAJ,GAChE,OAAO,gBACL6gB,EADK,mBAELmG,EAFK,mBAGLrG,EAHK,mBAIFrV,EAJE,iFAML,mCACE2b,YADF,EAEEpG,iBAFF,EAGEmG,iBAAkBA,GAHpB,GAME,qCAZG,Q,4GCHM1kB,IAAf,gB,ykBCIA,IAAM8e,EAAO,wB,MAEb,SAA8B,GAS3B,QARD8F,wBAQC,MARkB9F,EAQlB,MAPD+F,kBAOC,MAPY/F,EAOZ,EANDgG,EAMC,EANDA,QACA3kB,EAKC,EALDA,SACAqe,EAIC,EAJDA,OACAuG,EAGC,EAHDA,UACAC,EAEC,EAFDA,qBAEC,IADDC,sBACC,MADgBnG,EAChB,IACiChhB,mBADjC,sBACMonB,EADN,KACkBC,EADlB,KAGK7H,EAAY8H,uBAAY,WAC5BD,MACAN,MACAC,OAEIO,EAAWD,uBAAY,WAC3BD,MACAN,SAGIS,EAAkB,SAAC,GAAoB,MAAlBlG,EAAkB,EAAlBA,KAAMmG,EAAY,EAAZA,MAG3BC,EAAiBR,EAArB,GAA4CD,EAE5C,KACEU,EAAcF,EAAdE,OACAD,EAAgB,EAAH,0BAEVD,EAFU,GAAbC,QAIK,CACL,IAAME,EAAgBH,GAAtB,EACAE,EAAcC,UAAwBA,EAFjC,QAKLF,EAAgB3X,6CAGT6X,EAHS7X,OAKZ8X,YAAe,EAEbD,EAFY,GAGZtG,aARNoG,GAWFP,EAAe,CACb7F,KADa,EAEbmG,MAFa,EAGbR,UAAWS,IAIbZ,EAAiBxF,EAAMqG,EAAvBb,IAGIgB,EAAqBR,uBAAY,YAA0B,IAAvBhG,EAAuB,EAAvBA,KAAuB,IAAjBmG,aAAiB,MAAT,GAAS,OAC/D,IAAInG,oBAIJ,IAAImG,gBACEA,EAAJ,cAAwBjI,IAJpB8B,EAAJ,cAAuB9B,MAF3B,IAUMuI,EAAgBnlB,mBACpB,iBAAO,CACLolB,YAAa9X,YAAOsX,EADf,GAELhI,UAFK,EAGL+H,SAHK,EAILH,WAJK,EAKLH,eAEF,CAACG,EARH,IAUA,OACE,kBAAC,EAAD,UAA8BznB,MAAOooB,GADvC,I,mnBClFF,IAAM/G,EAAO,wB,MAEb,SAAmC3Q,GAA4C,IAA1B4X,EAA0B,uDAAZ,WACjE,OAAO,YAAiC,QAA9B3G,YAA8B,MAAvB,GAAuB,EAAhB4G,EAAgB,0BACHzkB,qBADG,GAC9BukB,EAD8B,cACjBf,EADiB,YAEhCkB,EAAcD,MAApB,EACME,EAAU,OAAH,IAAG,CAAH,MACI,qBACb,YACE9G,EADI,WAAN,GAIE,CAAEA,KAAF,EAAoBmG,MAAO,EAAF,YAAarY,gBAE5C,OACE,qCAEO6X,EACD,CAAE7X,OAAQ6D,cAAIgU,EAAW,CAAC3F,EAAhBrO,MAA6BqO,EAAKlS,QAHlD,GADF,M,ykBCdJ,IAAM4R,EAAO,wBAEPqH,EAAgB,CAAEra,KAAF,UAAmBia,YAAa,W,MAEtD,SAA8B5X,EAAkBiY,GAC9C,OAAO,YAAiC,QAA9BhH,YAA8B,MAAvB,GAAuB,EAAhB4G,EAAgB,uCAC9Bla,EAD8B,OACxBia,EADwB,gBAEHxkB,qBAFG,GAE9BukB,EAF8B,cAEjBf,EAFiB,YAGhCkB,EAAcD,MAApB,EACME,EAAU,OAAH,IAAG,CAAH,MACI,kBAAM,YAAOJ,EAAP,GAAiC,CAAE1G,KAAF,EAAQtT,YAEhE,OACE,qCAEO,eAAAA,GAAA,EACD,CAAE8B,QAASmD,cAAIgU,EAAW,CAAC3F,EAAb,MAHpB,GADF,MCREI,EAAY,CAChBC,UAAW4G,IADK,UAEhB3G,SAAU4G,EAAqBD,IAFf,MAGhB1G,MAAO2G,EAAqBD,IAAD,UAAiB,CAAEva,KAAM,eACpD8T,SAAU0G,EAAqBD,IAAD,aAAoB,CAAEva,KAAM,eAC1D+T,QAASwG,IALO,QAMhB,kBAAmBE,EAA0BF,IAAD,iBAGjClG,EAAU,SAAArU,GAAI,OACzBqT,YAAgBrT,EAAM0T,EAAWA,EADR,W,iBCdrByB,EAAU/f,UAAH,4CAAGA,CAAH,CAAb,qD,EAMyB,kBACvB,yBACE,uBAA6B+E,KAAK,Q,ykBCFtC,I,EAW6B,SAAC,GAwBxB,IAvBJ7E,EAuBI,EAvBJA,eACAsG,EAsBI,EAtBJA,UAsBI,IArBJhK,eAqBI,MArBM,GAqBN,EApBJihB,EAoBI,EApBJA,iBACAte,EAmBI,EAnBJA,UACA2c,EAkBI,EAlBJA,gBACAwJ,EAiBI,EAjBJA,gBACAC,EAgBI,EAhBJA,WACAC,EAeI,EAfJA,cACAC,EAcI,EAdJA,aACAnI,EAaI,EAbJA,OACAre,EAYI,EAZJA,SACAymB,EAWI,EAXJA,UACAC,EAUI,EAVJA,cACaC,EAST,EATJ9L,YACA+L,EAQI,EARJA,mBACA9D,EAOI,EAPJA,iBACA+D,EAMI,EANJA,cACAnF,EAKI,EALJA,SACAmB,EAII,EAJJA,SACAxiB,EAGI,EAHJA,OACAsL,EAEI,EAFJA,KACAmb,EACI,EADJA,QACI,EACsCnpB,mBADtC,sBACGkd,EADH,KACgBkM,EADhB,OAEwC3lB,qBAFxC,GAEI2jB,EAFJ,aAEgBG,EAFhB,WAE0B/H,EAF1B,YAGE8D,EAAY1gB,mBAAQ,WACxB,IAAIsL,EAAJ,EASA,OARAtO,WAAgB,SAAA4R,GAGd,GAFIA,GAAKA,EAALA,OAAgB2E,OAAO3E,EAAP2E,cAApB,IACEjI,EAAMiI,OAAO3E,EAAP2E,OAANjI,QACEsD,GAAKA,EAAT,MAAkB,CAChB,IAAM6X,EA1CC,SAAAzpB,GACb,IAAIsO,EAAJ,EAKA,OAJAtO,WAAgB,SAAA4R,GACVA,GAAKA,EAALA,OAAgB2E,OAAO3E,EAAP2E,cAApB,IACEjI,EAAMiI,OAAO3E,EAAP2E,OAANjI,WAEJ,EAoCwBob,CAAO9X,EAAzB,OACI6X,EAAJ,IAAqBnb,SAGzB,IACC,CAXH,IAaMqb,EAAmB3mB,mBAAQ,WAI/B,OAHIhD,MAAJ,cAAkBA,YAChBA,uBAEKiF,wBACHqkB,EAActpB,EADXiF,GF7CkB,SAAAjF,GAAO,OAAIwiB,YAAgBxiB,EAApB,GE+C5B4pB,CAFJ,KAGC,CAPH,IASMC,EAAoBtL,YA5D5B,QAoEQuG,EAAgBiE,EACpBe,YAAsBf,EAAY,EAAb,GACnB/oB,QADmB,EAEnBsd,YAFmB,EAGnBoG,aAHmB,OAKnB9D,UALmB,EAMnB2J,aAGF,mCACE3J,UADF,EAEEtC,YAFF,EAGEoG,UAAWtV,mBAHb,EAIE+V,SAJF,EAKEmB,SALF,EAMED,eANF,EAOExE,iBAPF,EAQE0E,iBARF,EASEnX,KATF,EAUEtO,SAAO,GAVT,GAfA,EAAoB,oBAAP,MACb,GACA,WAkCF,OAJAe,qBAAU,WACR2oB,QAIA,uBACEO,UADF,EAEErmB,eAFF,EAGEgd,iBAHF,EAIEsI,cAJF,EAKEC,aALF,EAME3J,gBANF,EAOEwB,YAAQA,QAPV,EAQEC,OAAQ,SAAAC,GAAO,OAAKA,EAAU2G,IAAa/H,KAC3Cjd,UATF,EAUEmmB,gBAVF,EAWEK,cAXF,EAYEjmB,WAZF,EAaE+d,iBAAkB6I,YAAsB7I,EAAkB,CACxD5Q,QACEiP,YACIhP,YAAOqX,EAAU1G,QADrB3B,SAEIhP,YACGkX,EADG,EACUG,EACd1G,QANgD,SAQxDld,aAAcub,mBAR0C,EASxD4B,UAAW,SAAAjgB,GACLA,qBAAJ,MAA6BA,QAC3BA,mBACAuoB,MACA7B,MAGJ3d,UAAW,GAAF,OAAKiX,QAAL,2BAEXne,OAAQA,GAAUomB,EAAUpmB,U,MCzIlC,SAA6BwI,GAC3B,OACE,sBACE,oBAFJ,KCLW0e,EAAW,eAkBX5lB,EAAY,CAlBD,iDAeb,UAfa,kCA4BtB4lB,EA5BsB,sDCAXC,EAAc,QAKdC,EAAe,CAACD,EAHpB,SCUH7I,EAAO,wBAEP+I,EAAiB,SAAC,GAAD,uBACrBzmB,OADqB,yBAErBsG,OAFqB,4BAGrBif,OAHqB,yBAIrBjpB,OAJqB,gCAKrBknB,OALqB,yBAMrBC,OANqB,iCAOrBkC,OAPqB,8BAQrBP,OARqB,iCASrBnmB,OATqB,MASTqnB,EATS,sBAUrB1K,OAVqB,MAUH2K,EAVG,uBAWrBhJ,OAXqB,yBAYrB8H,OAZqB,wBAarBjI,OAbqB,6BAcrBuG,OAdqB,yBAerB6B,OAfqB,6BAgBrBC,OAhBqB,+BAiBrB7L,OAjBqB,qBAkBrB8J,OAlBqB,4BAmBrBkC,OAnBqB,oCAoBrB/D,OApBqB,kCAqBrB+B,OArBqB,4BAsBrBC,OAtBqB,uBAuBrBjC,OAvBqB,4BAwBrBnB,QAxBqB,eAyBrBrhB,GAzBqB,SA0BrBsL,GA1BqB,oBA2BrBmb,QA3BqB,kBA6BrB,2BACE,qBACEvf,UADF,EAEEtG,eAFF,EAGEulB,aAHF,EAIEF,WAJF,EAKEzL,YALF,EAMEgC,gBANF,EAOEwB,OAPF,EAQEwI,cARF,EASEnF,SATF,GAUE+E,UAVF,EAWE5D,SAXF,EAYE+D,mBAZF,EAaEjC,QAbF,EAcED,WAdF,EAeEI,eAfF,EAgBEL,iBAhBF,EAiBElnB,QAjBF,EAkBE2C,UAlBF,EAmBEmmB,gBAnBF,EAoBEK,cApBF,EAqBE5D,iBArBF,EAsBE8B,UAtBF,EAuBEC,qBAvBF,EAwBErG,iBAxBF,EAyBE7S,KAzBF,GA0BEtL,OA1BF,GA2BEymB,QAASA,OAKTa,EAAoB,CACxB1mB,eAAgBQ,kCADQ,oDAIxB+kB,aAAc/kB,kCAJU,mCAOxBlE,QAAS,oBACP,kBAAgB,CACdoO,KAAMlK,YADQ,OAEd6B,GAAI7B,YAFU,OAGdmb,MAAOnb,YAAUmN,UAJZ,YAPe,8DAcxB6V,iBAAkBhjB,6BAdM,2CAiBxBijB,WAAYjjB,6BAjBY,kCAmBxBmlB,mBAAoBnlB,6BAnBI,6CAuBxB4kB,gBAAiB5kB,kBAAgB,CAAC,WAAD,eAAhBA,uBAvBO,4FA+BxBvB,UAAWuB,iCA/Ba,kBAiCxBob,gBAAiBpb,iCAjCO,0CAqCxB+c,iBAAkB/c,gCArCM,wDAyCxB6kB,WAAY7kB,gCAzCY,yBA2CxB4c,OAAQ5c,6BA3CgB,mCA6CxBmjB,UAAWnjB,kCA7Ca,+EAiDxBglB,UAAWhlB,kCAjDa,6CAqDxBolB,cAAeplB,6BArDS,8BAuDxBkK,KAAMlK,+BAvDkB,sDA2DxBohB,SAAUphB,+BA3Dc,yDA+DxBigB,SAAUjgB,+BA/Dc,yDAmExBqhB,iBAAkBrhB,6BAnEM,wDAuExBpB,OAAQoB,+BAvEgB,uDA0ExB8F,UAAW9F,+BA1Ea,wBA2ExBoZ,YAAapZ,2EA3EW,GA8ExBqlB,QAASrlB,wEA9Ee,GAiFxBilB,cAAejlB,4BAjFS,kBAkFxBkjB,QAASljB,6BAlFe,iCAmFxBqjB,eAAgBrjB,6BAnFQ,0CAsFxBojB,qBAAsBpjB,mEAKxBimB,cAE+B7lB,mBAAS,GACxC+lB,Y,yFC1KA,aAEI,EAAJ,WAeM,SAAF,EAAY,GACR,KAAK,OAAS,EACd,KAAK,iBAAmB,KAAK,kBAAoB,EAYzD,OArBM,OAAF,eAAW,6BAAc,C,IAAzB,WACI,OAAO,KAAK,kB,gCAEd,OAAF,eAAW,8BAAe,C,IAA1B,WACI,OAAO,KAAK,mB,gCAQT,qBAAP,WACI,IAAM,EAAK,cAAY,KAAK,QAExB,QAAK,IAED,EAAG,QAAU,KAAK,gBACf,EAAG,SAAW,KAAK,kBAGtC,EA7BA,GA+BS,uB,kFCjCT,aAEI,EAGE,SAAU,GACRzgB,KAAK,OAAS,EACd,KAAK,YAAc,cAAY,IAI9B,yB,iqBCNT,IAAM0gB,EAAe,SAACrpB,GAAM,IAClBC,EAA0BD,EADR,OACVspB,EAAkBtpB,EADR,cAE1B,SACoBC,EADR,MAIZ,EACoBqpB,EADD,MAInB,GAGIC,EAAkB,SAACjV,EAAOtU,GAC9B,IAAMwpB,EAAWH,EAAjB,GACMI,EAAN,EACMhkB,EAAQ6O,UAAd,GAQA,OANA,IAAI7O,EACFgkB,UAEAA,cAGF,GAGMnoB,EC9BoBD,oBD8BpBC,SAEFooB,c,4BACJ,cAAmB,0BACjB,iBADiB,IAETC,EAA0Btf,EAFjB,YAEIwC,EAAaxC,EAFjB,gBAGjB,QAAa,CACXsf,YADW,EAEX9c,SAFW,EAGX+c,UAHW,KAIX5Z,SAAU,qCAPK,E,gDAmBnB,YAAyB,IAIvB,EAJuB,EACQrH,KADR,MACfkhB,EADe,WACL7Z,EADK,WAEf2Z,EAAgBhhB,KAFD,kBAGjB7J,EAAQuqB,EAAd,GAEA,EACES,EAAWP,EAAgBI,GAAD,GAA1BG,GACSH,IAAJ,IAELG,KAGFnhB,KAAA,SAAc,CACZghB,YAAaG,IAbQ,2BAAN7Z,EAAM,iCAANA,EAAM,kBAgBvB,GAAcD,gC,oBAGhB,WAAS,IACCxO,EAAamH,KADd,eAEP,OAAO,qBAAU7J,MAAO6J,KAAKpJ,OAA7B,M,uCA7BF,cAA0D,IAAbqqB,EAAa,EAAbA,UAC3C,OAAIlhB,gBAAJ,EAAgD,KACzC,CACLihB,YAAajhB,EADR,YAELkhB,UAAWlhB,EAAUihB,iB,EAhBrBD,CAAc5L,aA6CpB4L,eAAqB,CACnBG,UAAU,GAGZH,YAAkB,CAChBloB,SAAUyB,IADM,MAEhB4mB,SAAU5mB,IAFM,KAGhB+M,SAAU/M,IAHM,KAIhB0mB,YAAa1mB,cAAoB,CAACA,IAAD,MAAkBA,IAJnC,SAKhB4J,SAAU5J,IAAUsR,M,0BE9EhBjS,EAAOyZ,oBAFb,cAEA,QAEMgO,EAAU,SAAC,GAQX,IAPJvoB,EAOI,EAPJA,SACA4c,EAMI,EANJA,MACA4L,EAKI,EALJA,QACAvc,EAII,EAJJA,SACA8P,EAGI,EAHJA,SAGI,IAFJ0M,oBAEI,aADJC,eACI,SACEC,EAAMD,EAAU,SAAtB,QAEA,OACE,qBACEnhB,UAAS,UAjBf,eAiBe,OAAiBmhB,EAAU,IAAH,OAjBvC,cAiBuC,WADnC,IAEEF,QAASA,GAERC,EACC,uBAAwBnrB,MAAO0C,GAAY4c,IAE3C,yBAPJ,GASE,uBAAcb,SAAd,EAAkC9P,SAAUA,MAKlDsc,YAAoB,CAClBvoB,SAAUyB,IADQ,OAElBmb,MAAOnb,IAFW,OAGlB+mB,QAAS/mB,IAHS,OAIlBwK,SAAUxK,IAJQ,KAKlBsa,SAAUta,IALQ,KAMlBgnB,aAAchnB,IANI,KAOlBinB,QAASjnB,IAAUsR,M,6lBCjCf6V,EAAgB,SAAC,GAUjB,QATJ3nB,sBASI,MATa,GASb,MARJsG,iBAQI,MARQ,GAQR,MAPJ3G,aAOI,MAPI,GAOJ,MANJioB,YAMI,MANG,GAMH,MALJC,qBAKI,MALY,EAKZ,MAJJpH,gBAII,MAJO,OAIP,MAHJqH,oBAGI,aAFJC,qBAEI,MAFY,OAEZ,MADJC,iBACI,WACuCnN,YAA0B,kBAAD,EAGlE,CACEiN,aADF,EAEEC,cAFF,EAGEC,cANIpN,EADJ,eACkBqN,EADlB,mBAsBAC,EAAJ,EAaA,OAXA,EACEA,EACEL,IAAoBK,cAApBL,GAFJ,EAGSA,EAAJ,IACHK,EAjBAN,EAAA,mBACE,cACE,IAAIO,EAAcC,SAAlB,EAIA,OAHIA,YAA6BC,EAA7BD,OAAJ,IACED,MACFC,eAAyBA,MAAzBA,kBACA,IAEF,CATsB,KAkBV,KAAwB,qBACpC,0BAAM/gB,IAAN,EAAkBf,UAAW2hB,EAAiB,SADV,OAQtC,2CAEE3hB,UAFF,EAGE3G,MAAK,GACH8gB,SAAUoH,MAA+B,MADtC,KAKJC,EACC,0BAAMxhB,UAAW2hB,EAAiB,wBADvB,GATjB,IAoBIK,EAAmB,CACvBtoB,eAAgBQ,+BADO,oDAIvB8F,UAAW9F,+BAJY,aAKvBb,MAAOa,+BALgB,aAMvBonB,KAAMpnB,kDANiB,WAOvBqnB,cAAernB,qFAPQ,GAUvBigB,SAAUjgB,qEAVa,QAavBsnB,aAActnB,8EAbS,GAgBvBunB,cAAevnB,kBAAgB,CAAC,OAAQ,SAAzBA,sDAhBQ,QAmBvBwnB,UAAWxnB,mFAKbmnB,cAE8B/mB,mBAAS,GACvC2nB,Y,cCvGA,SAAoB,GAOjB,QANDC,kBAMC,MANY,GAMZ,MALDljB,aAKC,MALO,IAKP,MAJDD,cAIC,MAJQ,GAIR,EAHDojB,EAGC,EAHDA,YAGC,IAFDC,sBAEC,aADDC,qBACC,SACKC,EAAN,EAGMC,EAASC,WAAf,GACMC,EAAcF,EAApB,IAEMG,EAAmBJ,EAAzB,EAEIK,EAAJ,EACIC,EAAJ,EACIC,EAAJ,EACIC,EAAJ,EAkEA,OAhEA,IACEH,KACAE,IAAqBN,GAEvB,IACEI,KACAC,IAAoBL,KAGhBF,GAAF,GAAuCD,GAA3C,KACEU,KA2BE,KAECL,EA/CL,EA6CI,YAMCzjB,EACC,EADDA,IAnDL,EA6CI,KAtBDojB,EACG,IAAMG,EAAS,IAAMA,EAAS,UAAYA,EAAS,IADxC,EADf,SAKCxjB,GAAU,EAAI0jB,GAAeI,EAL9B,QAMCT,EACG,IAAMG,EAAS,IAAMA,EAAS,WAA9B,MADW,EANf,SAUU,EAAT,EAACvjB,EAVF,IAWCqjB,EACG,IAAME,EAAS,IAAMA,EAAS,WAA9B,OADU,EAXd,SAeY,EAAIE,GAAeG,EAf/B,KAeE7jB,IACDsjB,EACG,IAAME,EAAS,IAAMA,EAAS,UAAYA,EAAS,KADzC,EAjBhB,KAwBI,M,gqBClDN,IAEMhJ,EAAU,OAAAvG,EAAA,UAFhB,kBAEgB,MAA0C,kBAAiB,CACzE,YADwD,aAGpD+P,EAAgB/P,qBALtB,kBAKA,SACMgQ,EAAchQ,mBANpB,kBAMA,QACMiQ,EAAUjQ,mBAPhB,kBAOA,WACMkQ,EAAclQ,oBARpB,kBAQA,iBAQMmQ,c,4BAOJ,cAAmB,iCACjB,iBADiB,4CANF,IAAIC,EAAJ,gBAAmB,kBAAM,EAAN,iBAMjB,uCAJP,IAMV,aAAkB9qB,IAAlB,YACA,iBAAsBA,IAAtB,YACA,iBAAsBA,IAAtB,YACA,WAAgBA,IAAhB,YAEA,aAAkB,8BAAlB,IAPiB,E,qDAUnB,WACEsH,KAAA,uBAA4BA,KAAKyjB,WAAjC,W,gCAGF,YA3B0B,SAAC,EAAD,GAA8C,IAA3CrkB,EAA2C,EAA3CA,MAAOD,EAAoC,EAApCA,OAAQmjB,EAA4B,EAA5BA,WAC5C,OAAIljB,IAAUskB,EAAd,QACIvkB,IAAWukB,EAAf,QACOpB,IAAeoB,EAAtB,aAyBOC,CAAoB3jB,KAAD,MAAaA,KAArC,YACAA,KAAA,e,kCAGF,WACEA,KAAA,yBAA8BA,KAAKyjB,WAAnC,W,iBAGF,WAAY,IACOG,EAAY5jB,KADnB,iBAEO6jB,EAAc7jB,KAFrB,mBAGO8jB,EAAkB9jB,KAHzB,uBAIJ+jB,EAAW7sB,wBAAjB,GACM8sB,EAAaD,mBAAnB,0BACME,EAAcF,mBAApB,2BACMtB,EAAN,IAAsBG,cAChBJ,EAAN,IAAuBI,cACvB,MAAO,CACLN,WADK,GACOsB,cACZxkB,MAAOykB,EAFF,YAGL1kB,OAAQ0kB,EAHH,aAILtB,YAJK,EAKLE,cALK,EAMLD,oB,oBAIJ,WAAe,MACsBxiB,KADtB,MACLkkB,EADK,UACIhN,EADJ,SACY/gB,EADZ,QAEb,OACE+tB,IAAY3d,mBAAyBpQ,EAAzBoQ,SAAZ2d,IADF,I,sBAKF,YAAgB,IACNC,EAAkBnkB,KADZ,oBAEd,SAA0BmkB,EAFZ,GAIVhuB,GAASA,EAAb,OAAkCA,SAAP,MAE3B,I,wBAGF,WACE,IAAMiuB,EAAOC,EAAWrkB,KAAxB,OACAA,KAAA,UAAiBA,KAAjB,MACAA,KAAA,6C,oBAGF,WAAS,MAkBHA,KAlBG,MAELskB,EAFK,YAGLrsB,EAHK,WAILsM,EAJK,WAKLL,EALK,WAMLhM,EANK,iBAOLE,EAPK,YAQLC,EARK,SASLksB,EATK,UAULlkB,EAVK,WAWL1I,EAXK,kBAYLmN,EAZK,WAaL3O,EAbK,QAcLkR,EAdK,WAeLuD,EAfK,OAgBL4Z,EAhBK,YAiBL5P,EAjBK,WAoBD6P,E,yWAAa,CAAH,CACdH,UADc,EAEdlkB,UAFc,kCAGd8D,SAHc,EAIdjM,SAJc,EAKdI,OALc,EAMdgP,SANc,EAOdkd,QAPc,EAQdhgB,SARc,EASdpO,MATc,EAUdkK,SAVc,EAWduK,KAXc,EAYd4Z,aAZF,GAeME,EAAiBxE,YAAsBhoB,EAA7C,GACMgf,EAASlX,KAAf,SAEA,OACE,qBACEwZ,WAAY,CACVvhB,SADU,EAEVif,OAFU,EAGV3S,SAHU,EAIVL,YAEF7D,SAAUL,KAPZ,WAQE3H,OAAQ,wBACRksB,QAAS,wBACTI,WAAY3kB,KAVd,eAWE4kB,YAAa5kB,KAAK6kB,iBAXpB,EAcE,qBAAerL,WAAY,CAAEtC,UAAU7W,SAAUL,KAAK8kB,UACpD,qBAAevK,SAAf,OAA+BmH,KAAMtpB,IACrC,uBAAcwc,SAAd,EAAkC9P,SAAUA,KAE9C,yBACE,6BACE,qBAAazE,SAAUL,KAAK+kB,mBAGhC,qBAAa1kB,SAAUL,KAAKglB,sB,EArI9BzB,CAA+BpO,a,YAA/BoO,iBAKkB,CAAElc,SAAU,0B,QCzB9BmQ,EAAO,a,EACgB,SAAC,GAAD,oCAE3ByN,OAF2B,wBAQ3B5kB,OAR2B,wBAY3BD,OAZ2B,+BAkB3BzI,OAlB2B,8BAwB3BO,OAxB2B,sBA8B3B/B,OA9B2B,8BAoC3B+uB,OApC2B,wBA0C3B9sB,OA1C2B,0BAgD3BiP,OAhD2B,qBAiD3BhP,OAjD2B,sBAkD3BksB,OAlD2B,qBAwD3BrN,OAxD2B,sBA8D3Bjf,OA9D2B,sBAoE3BsM,OApE2B,sBA0E3BL,OA1E2B,sBAgF3BY,OAhF2B,sBAiF3B8P,OAjF2B,kBAkF3BhK,OAlF2B,2BAmF3B4Z,OAnF2B,kBAqF3B,qBACES,WADF,EAEE7kB,UAFF,EAGE8D,SAHF,EAIEvM,gBAJF,EAKEM,SALF,EAMEoI,SANF,EAOEnI,eAPF,EAQEgf,OARF,EASEgO,eATF,EAUE9sB,UAVF,EAWEwS,KAXF,EAYEvS,OAZF,EAaEgP,SAbF,EAcEkd,QAdF,EAeE3P,SAfF,EAgBErQ,SAhBF,EAiBEO,SAjBF,EAkBE0f,UAlBF,EAmBEruB,MAAOA,KCzGLgvB,EAAe/R,oBAFrB,YAEA,Y,EAEiB,SAAC,GAAuB,IAArBsO,EAAqB,EAArBA,KAAMzpB,EAAe,EAAfA,SACxB,SACO,qBAAcuhB,WAAYvhB,GAAjC,GADkB,M,QCLPmtB,GAASxrB,UAAH,wCAAGA,CAAH,wDAIf,SAAA8H,GACA,OAAIA,UAAgBA,EAApB,aACE,uCAIGA,EAAD,OAAiBA,EAArB,oBACE,wCAOO2jB,GAAqBzrB,UAAH,wCAAGA,CAAH,mCAIlB0rB,GAAgB1rB,UAAH,wCAAGA,CAAH,sC,6kBCP1B,IAEM+f,GAAU,OAAAvG,EAAA,UAFhB,YAEgB,MAGd,gBAAGmS,EAAH,YAAcxgB,EAAd,8BACE,kBAAmBwgB,GADrB,QAKIC,GAAiBpS,6BAVvB,YAUA,aACMqS,GAAsBrS,kCAX5B,YAWA,aAIasS,GAA2B,kBAA3BA,GAA2B,gBAA3BA,GAA2B,iBAA3BA,GAA2B,mBAA3BA,GAA2B,oBAA3BA,GAMD,mBAGNC,GAAmB,SAAC,GAsCpB,QArCJJ,iBAqCI,aApCJK,qBAoCI,SAnCJvU,EAmCI,EAnCJA,KACAlV,EAkCI,EAlCJA,GACAhG,EAiCI,EAjCJA,MAiCI,IAhCJ+B,eAAgBwsB,OAgCZ,MAhC6B1gB,IAgC7B,MA/BJkhB,eAAgBW,OA+BZ,MA/B6BzE,EA+B7B,MA9BJ0E,kBAAmBC,OA8Bf,MA9BmCC,EA8BnC,EA7BJ5tB,EA6BI,EA7BJA,UACAkpB,EA4BI,EA5BJA,aA4BI,IA3BJrpB,gBA2BI,SAzBJguB,EAyBI,EAzBJA,gBAyBI,IAxBJztB,yBAwBI,MAxBgB,GAwBhB,MAvBJR,uBAuBI,MAvBc,GAuBd,EAtBJuM,EAsBI,EAtBJA,SAsBI,IArBJ2f,eAqBI,SApBJ1f,EAoBI,EApBJA,KAoBI,IAnBJP,iBAmBI,MAnBQ,aAmBR,MAlBJC,gBAkBI,aAjBJmD,gBAiBI,MAjBO,aAiBP,MAhBJhP,cAgBI,MAhBK,aAgBL,MAfJksB,eAeI,MAfM,aAeN,MAdJ2B,eAcI,MAdM,aAcN,MAbJlf,eAaI,MAbM,aAaN,MAZJrP,uBAYI,MAZc,GAYd,EAXJwuB,EAWI,EAXJA,aAWI,KAVJnR,kBAUI,OAVQ,KAUR,QATJC,mBASI,OATS,KAST,QARJnQ,iBAQI,gBAPJ8P,iBAOI,WANJhK,GAMI,EANJA,KAMI,KALJ4Z,kBAKI,OALQ,GAKR,QAJJ4B,eAII,OAJK,GAIL,QAHJrhB,gBAGI,OAHM2gB,GAGN,QAFJ5rB,uBAEI,OAFa,GAEb,GADDwN,GACC,icACEia,GAAUmD,SAAyB,oBAAD,MAAxC,KACM2B,GAAN,WAA8BT,EACxBU,GAAsB/E,GAHxB,GAGkCiE,GAGhCf,GAAa,GAAH,aAEdvgB,SAFc,EAGdjM,SAAUA,GAHI,UAGQguB,EACtB9pB,GAJc,EAKdkV,KALc,EAMd7M,KANc,EAOd+hB,UAPc,EAQdluB,OARc,EASdgP,SATc,EAUdkd,QAVc,EAWd2B,QAXc,EAYdlf,QAZc,EAadzC,SAbc,EAcdpO,MAdc,EAedyU,KAfc,GAgBd4Z,UAhBc,GAiBdzf,QAjBc,GAkBdD,aAlBF,IAsBM0hB,GAAc,SAACC,GAAD,OAClBzR,OACE,uBACEA,UADF,GAEEC,WAFF,GAGElQ,QAASA,IAJbiQ,GADkB,GAad0R,GACJ,uCAEE/uB,gBAFF,EAGEusB,QAHF,EAIEhsB,eAJF,EAKEgtB,eALF,EAME9sB,UANF,EAOEwc,SAPF,GAQE9P,SARF,GASEC,QAASA,MAIP4hB,GAAiBN,GACrBG,GAD0C,IAG1C,oCACE,qBACEnF,QAASllB,GADX,EAEEsZ,MAFF,EAGEb,SAHF,GAIE9P,SAJF,GAKEyc,QALF,GAMED,aAAcA,IAEfkF,GAAYtG,YAAsBwE,EAZvC,MAgBA,UAEI,kCACElL,WAAY,CACVtV,SADU,EAEVK,SAFU,EAGVtM,SAHU,EAIVstB,UAJU,EAKVxgB,aANJ,IAUE,sBAAe3E,UAAU,kBACvB,sBAAoBA,UAAU,wBAC5B,6BADF,GAKE,qBACEnI,SADF,EAEEypB,KACEuE,OAEIjuB,KAIV,sBACEoI,UADF,eAEEqV,QAFF,EAGEmR,aAAcC,QAAQruB,GAAD,IA7B7B,MAuCA,kCACEghB,WAAY,CACVtV,SADU,EAEVK,SAFU,EAGVtM,SAHU,EAIVstB,UAJU,EAKVxgB,aANJ,IAUE,6BAVF,GAcE,qBACE9M,SADF,EAEEypB,KAAMuE,OAAkDjuB,MAM1D0J,GAAQ,CAEZ5H,eAAgBQ,+BAFJ,+CAMZirB,UAAWjrB,6BANC,8BAQZsrB,cAAetrB,6BARH,0BAUZ6B,GAAI7B,+BAVQ,2BAYZ+W,KAAM/W,+BAZM,gCAcZnE,MAAOmE,sBAAoB,CACzBA,YADyB,OAEzBA,YAFyB,OAGzBA,YAHKA,qBAdK,kCAoBZpC,eAAgBoC,sBAAoB,CAClCA,YADkC,KAElCA,YAFcA,sBApBJ,uBAyBZ4qB,eAAgB5qB,gCAzBJ,mBA2BZwrB,kBAAmBxrB,6BA3BP,4CA+BZlC,UAAWkC,sBAAoB,CAC7BA,YAD6B,OAE7BA,YAFSA,sBA/BC,cAoCZrC,SAAUqC,6BApCE,eAsCZ2rB,gBAAiB3rB,kBAAgB,CAAC,UAAW,QAA5BA,wBAtCL,oBA0CZ9B,kBAAmB8B,+BA1CP,sBA4CZtC,gBAAiBsC,+BA5CL,oBA8CZiK,SAAUjK,6BA9CE,uBAgDZ4pB,QAAS5pB,6BAhDG,iBAkDZkK,KAAMlK,+BAlDM,cAoDZ2J,UAAW3J,6BApDC,oBAsDZ4J,SAAU5J,6BAtDE,kBAwDZ+M,SAAU/M,6BAxDE,qBA0DZjC,OAAQiC,6BA1DI,mBA4DZ3C,gBAAiB2C,+BA5DL,+BA8DZ6rB,aAAc7rB,gCA9DF,iBAgEZ0a,UAAW1a,gCAhEC,4BAkEZ2a,WAAY3a,gCAlEA,6BAoEZwK,SAAUxK,6BApEE,qBAsEZsa,SAAUta,6BAtEE,qBAwEZiqB,QAASjqB,6BAxEG,oBA0EZ4rB,QAAS5rB,6BA1EG,oBA4EZgnB,aAAchnB,6BA5EF,+BA8EZ0M,QAAS1M,6BA9EG,2BAgFZsQ,KAAMtQ,sBAAoB,CAExBA,YAFwB,OAGxBA,YAHIA,mBAhFM,iCAsFZkqB,UAAWlqB,+BAtFC,uBAwFZ8rB,OAAQ9rB,+BAxFI,oBA0FZyK,QAASzK,kBAAgB,CACvBorB,GACAA,GACAA,GACAA,GACAA,GACAA,KANOprB,sCAUXqrB,gBACmCjrB,mBAAS,IAC5CosB,a,yWCtTMC,EAAN,IACMC,EAAN,OAEMC,EAAN,KAGMC,EAAgB,SAAAC,GAAS,OAC7BA,EAAA,MAXF,IAWE,KAEO,SAAA7Y,GAAI,OAAK2Y,YAAL,MAGPG,EAAwB,SAACtf,EAAGuf,GAAJ,OAC5Bvf,kCAD4B,ICjB9B,IAKMif,EAAN,IACMC,EAAN,OAEMC,EAAN,KAGMC,EAAgB,SAAAC,GAAS,OAC7BA,EAAA,MAXF,IAWE,KAEO,SAAA7Y,GAAI,OAAK2Y,YAAL,MAGPG,EAAwB,SAACtf,EAAGuf,GAAJ,OAC5Bvf,kCAD4B,ICdvB,IAAMwf,EAAa,CACxBC,KAAM,CAAC,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAD7B,MAExBC,UAAW,CAAC,KAAD,2EAFa,SAoBxBC,MAAO,CAAC,IAAD,4DApBiB,MAoCxBC,mBAAoB,CAAC,IAAD,wEApCI,MAuDxBC,IAAK,CAAC,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,IAAK,KAAM,KAAM,KAvDlC,MAwDxBC,YAAa,CAAC,KAAM,KAAM,KAAM,KAxDR,MAyDxBC,OFxCa,WAYP,6DAAJ,GAAI,IAXNC,cAWM,MAhCR,IAgCQ,MAVN1B,cAUM,MA/BR,GA+BQ,MATN2B,iCASM,aARNV,gCAQM,MA9BR,IA8BQ,MAPNW,oBAOM,aANNC,qBAMM,MA7BR,IA6BQ,MALNC,oBAKM,MALS,EAKT,MAJNC,sBAIM,aAHNC,qBAGM,aAFNC,0BAEM,aADNC,oBACM,MADS,KACT,EACAC,EAAgBT,GAAUA,EAAX,QAArB,EACMU,EAAgBpC,GAAUA,EAAX,QAArB,EACMqC,EACHpB,GAA4BA,EAA7B,QAJI,EAON,aAA4C,IAAxBtX,EAAwB,uDAtC9C,GAuCU2Y,EAAiB3Y,EAAvB,OACA,GACE2Y,QACCC,iBAAiBC,SAAS7Y,EAAD,GAD1B2Y,OADF,IAGEN,EAEA,MAAO,CAAP,IAEF,GA/CJ,KAgDMrY,GACCA,OAAgB+X,EAAhB/X,IAFH,IAEgC2Y,EAE9B,OAAOZ,QAnDb,IAmDaA,OAEG,CAFHA,WAGG1B,QAtDhB,KAwDI,GAAIrW,OAAJ,EACE,OAAO+X,QAzDb,IAyDaA,OAEG,CAAC,IAAKG,EAFTH,WAGG1B,QA5DhB,KA+DI,IAAMyC,EA5DV,MA4DuB9Y,MAzBuB,EA2B1C,IACEA,EAAWA,oBAAXA,IAGF,IAGA,EACA,EAnC0C,EA+BpC+Y,EAAqB/Y,cAA3B,GACMgZ,GAAN,IAAmBD,EA6BnB,GAtBI/Y,WAAeyY,KAAnB,IACEzY,EAAWA,WAAXA,EAA6ByY,IAG3BO,IAAef,GAAnB,IACEgB,EAAUjZ,QACRA,mBADQA,EAAViZ,GAKAC,EAAWlZ,QAAe+Y,EAAf/Y,EAAXkZ,GACAA,EAAW/B,EAAc+B,YAxF/B,MA4FQD,EADEjZ,eAAJ,EACYA,QAAViZ,GAEAA,EAKAV,GA7FR,WA6FwB,eAAgC,CAClD,IAAMY,EACJ7B,wBADF,GAIM8B,GACJH,QAAc,IAAIxc,OAAO0c,EAAzBF,OADiC,IAAnC,OAIAA,EAAUA,UAERV,EACEa,EAHJH,GA4DF,OArDAA,EAAUA,YAnHd,IAqHI,IACEA,EAAUA,yBAAVA,OAGFA,EAAUjB,EACNX,EAAsB4B,EADS,GAAnCA,EAIApe,EAAOsc,EAAPtc,IAEKme,GAAD,IAAJ,IAAoCZ,KAC9BpY,EAAS+Y,EAAT/Y,KAAJ,GACEnF,OAzHR,MA4HMA,SA5HN,MA8HM,IAhIN,WAkIY,iBACFqe,EAAWA,UAAXA,IAGFre,EAAOA,SAAPA,KAIAud,OACApY,EAAS+Y,EAAT/Y,KAFF,GAIEnF,WAIA2d,EAAJ,IACE3d,EAAOkd,QAxJb,IAwJaA,OAAPld,IAGF,IAEMA,WAAJ,GACEA,UAGFA,EAAO,CAACmc,GAAa9c,OAArBW,IAGEwb,SAAJ,IACExb,EAAOA,SAAYwb,QArKzB,MAwKI,EAKF,OAFAgD,gCAEA,GEjHAC,QDzCa,WAYP,6DAAJ,GAAI,IAXNvB,cAWM,MA/BR,GA+BQ,MAVN1B,cAUM,MAhCR,IAgCQ,MATN2B,iCASM,aARNV,gCAQM,MA9BR,IA8BQ,MAPNW,oBAOM,aANNC,qBAMM,MA7BR,IA6BQ,MALNC,oBAKM,MALS,EAKT,MAJNC,sBAIM,aAHNC,qBAGM,aAFNC,0BAEM,aADNC,oBACM,MADS,KACT,EACAC,EAAgBT,GAAUA,EAAX,QAArB,EACMU,EAAgBpC,GAAUA,EAAX,QAArB,EACMqC,EACHpB,GAA4BA,EAA7B,QAJI,EAON,aAA4C,IAAxBtX,EAAwB,uDAtC9C,GAuCU2Y,EAAiB3Y,EAAvB,OACA,GACE2Y,QACCC,iBAAiBC,SAAS7Y,EAAD,GAD1B2Y,OADF,IAGEN,EAEA,MAAO,CAAP,IAEF,GA/CJ,KAgDMrY,GACCA,OAAgB+X,EAAhB/X,IAFH,IAEgC2Y,EAE9B,OAAOZ,QAnDb,IAmDaA,OAEG,CAFHA,WAGG1B,QAtDhB,KAwDI,GAAIrW,OAAJ,EACE,OAAO+X,QAzDb,IAyDaA,OAEG,CAAC,IAAKG,EAFTH,WAGG1B,QA5DhB,KA+DI,IAAMyC,EA5DV,MA4DuB9Y,MAzBuB,EA2B1C,IACEA,EAAWA,oBAAXA,IAGF,IAGA,EACA,EAnC0C,EA+BpC+Y,EAAqB/Y,cAA3B,GACMgZ,GAAN,IAAmBD,EA6BnB,GAtBI/Y,WAAeyY,KAAnB,IACEzY,EAAWA,WAAXA,EAA6ByY,IAG3BO,IAAef,GAAnB,IACEgB,EAAUjZ,QACRA,mBADQA,EAAViZ,GAKAC,EAAWlZ,QAAe+Y,EAAf/Y,EAAXkZ,GACAA,EAAW/B,EAAc+B,YAxF/B,MA4FQD,EADEjZ,eAAJ,EACYA,QAAViZ,GAEAA,EAKAV,GA7FR,WA6FwB,eAAgC,CAClD,IAAMY,EACJ7B,wBADF,GAIM8B,GACJH,QAAc,IAAIxc,OAAO0c,EAAzBF,OADiC,IAAnC,OAIAA,EAAUA,UAERV,EACEa,EAHJH,GA4DF,OArDAA,EAAUA,YAnHd,IAqHI,IACEA,EAAUA,yBAAVA,OAGFA,EAAUjB,EACNX,EAAsB4B,EADS,GAAnCA,EAIApe,EAAOsc,EAAPtc,IAEKme,GAAD,IAAJ,IAAoCZ,KAC9BpY,EAAS+Y,EAAT/Y,KAAJ,GACEnF,OAzHR,MA4HMA,SA5HN,MA8HM,IAhIN,WAkIY,iBACFqe,EAAWA,UAAXA,IAGFre,EAAOA,SAAPA,KAIAud,OACApY,EAAS+Y,EAAT/Y,KAFF,GAIEnF,WAIA2d,EAAJ,IACE3d,EAAOkd,QAxJb,IAwJaA,OAAPld,IAGF,IAEMA,WAAJ,GACEA,UAGFA,EAAO,CAAC,GAAD,OAAPA,IAGEwb,SAAJ,IACExb,EAAOA,SAAYwb,QArKzB,MAwKI,EAKF,OAFAgD,iCAEA,IE9KWE,EAAc,UASdC,EAAc,IAad3S,EAAiB,kBAAjBA,GAAiB,mBCVjB4S,GAAe,CAI1B5xB,SAAU0C,+BAJgB,aAQ1B8F,UAAW9F,+BARe,wBAY1B,gBAAiBA,+BAZS,iBAgB1Buf,GAAIvf,wDAhBsB,UAoB1B4J,SAAU5J,6BApBgB,yCAwB1B+J,WAAY/J,6BAxBc,kEA8B1BlC,UAAWkC,sBAAoB,CAC7BA,YAD6B,OAE7BA,YAFSA,sBA9Be,uCAqC1BgY,KAAMhY,gCArCoB,iCAyC1Bmc,SAAUnc,gCAzCgB,8CA+C1B+X,WAAY/X,kBDpDa,CAAC,UAAW,YAAa,OAA7C,SCoDOA,YA/Cc,sBAmD1BqE,KAAMrE,kBDUa,CAAC,IAAK,IAApB,MCVCA,YAnDoB,sBAuD1BkK,KAAMlK,kBAAgB,CAAC,SAAjBA,uBAvDoB,sBAgE1ByK,QAASzK,kBDXmB,CAAC,kBAAD,oDAAvB,kBCWIA,YAhEiB,yBAoE1B+F,SAAU,sBAAoB,CAC5B/F,YAD4B,KAE5B,kBAAgB,CAAEkgB,QAASlgB,YAAUmX,QAF7B,YApEgB,8BA2E1BpZ,OAAQiC,6BA3EkB,+DAkF1BmvB,OAAQnvB,kBAAgB,CAAC,UAAW,UAAW,SAAvCA,qBAlFkB,yDAwF1BR,eAAgBQ,+BAxFU,sCA8F1BmM,QAASnM,6BA9FiB,kEAoG1BovB,WAAYpvB,oGC7ERqvB,GAAW,SAAC,GAoBZ,IAnBJtpB,EAmBI,EAnBJA,SAmBI,IAlBJ6D,gBAkBI,aAjBJmO,kBAiBI,MAjBSiX,EAiBT,MAhBJjlB,kBAgBI,aAfJ1F,YAeI,MAfG4qB,EAeH,MAdJnxB,iBAcI,MAdQ,GAcR,MAbJka,YAaI,MAbG,KAaH,MAZJja,cAYI,MAZK,wBAYL,MAXJoO,eAWI,MAXM,wBAWN,MAVJijB,kBAUI,MAVS,wBAUT,MATJjT,gBASI,MATO,KASP,MARJ7e,gBAQI,MARO,EAQP,MAPJmN,eAOI,MAPM6R,EAON,EANJ6S,EAMI,EANJA,OAMI,IALJ3vB,sBAKI,MALa,GAKb,EAJJsG,EAII,EAJJA,UAII,IAHJyZ,GAAI1E,OAGA,MAHY,SAGZ,MAFJ3Q,YAEI,MAFG,SAEH,EADD8C,EACC,+MAC0B9Q,oBAD1B,sBACGozB,EADH,KACYC,EADZ,KAEEC,EAAS1wB,mBAAQ,kBApCH2wB,EAoCG,EAnCvB,eAHF,SAGE,MAGE,gBAAGC,EAAH,WAAajlB,EAAb,8BACE,YAAailB,GADf,OAIA,CACEC,8BAA+B,CAAC,QATjB,IAACF,IAoCkC,CAAtD,IACMG,EAAkB,GAAH,OAvCvB,UAuCuB,OAAkBT,EAAS,IAAH,UAA7C,IACsBU,EAAoBxV,YAJtC,gBAOJ,OACE,iCACEwH,cAAariB,kBAAiC,kBADhD,KAIEswB,qBACE9iB,uBAAsCA,EAAtCA,iBALJ,EAOErC,aAAYqC,oBAPd,SAQE+iB,eARF,EASEjqB,UAAWkqB,YAAGH,EAThB,GAUE3Q,WAAY,CACVtV,SADU,EAEVmO,WAFU,EAGV1T,KAHU,EAIV0F,WAJU,EAKV2lB,UAAW5xB,IAAcka,GALf,GAMVvN,QAASb,EAAW0S,GAA0B7R,GAEhDb,SAlBF,EAmBE7D,SAnBF,EAoBEhI,OAAQ,YACN,IACAwxB,MACAxxB,OAEFoO,QAAS,YACP,IACAojB,MACApjB,OAEFijB,WAAY,YACV,IACAryB,mBACA,UAAIA,QACFwyB,MACApjB,MAEFijB,OAEF9xB,SAvCF,EAwCE4M,KAAMA,IAxCR,EA2CGpM,GACC,0BACEgI,UAAS,wBACPkS,iBAFJ,WAIE6J,cAJF,eAKEjX,KAAK,gBAEL,8BAnDN,IADF,IA4DFykB,gBAE2BjvB,mCAA3B,YACA6vB,a,mlBC3HEC,IACAA,GADAA,SAEAA,WAFAA,gBADF,IAIEA,8BAEAtzB,gCAAkC,WAChC8I,KAAA,0BAAAA,OAEFyqB,0BAA4BC,gCAAkC,WAC5D,IAAK,IAAIvoB,EAAInC,KAAKiJ,OAAlB,EAA8B9G,GAA9B,EAAsCA,IAChCnC,KAAKmC,IAAMnC,KAAKmC,GAApB,eACEnC,KAAA,6BAAkCA,KAAlC,MCLR,IAEM2qB,GAAkBtvB,qBAAWuvB,IAAnC,cAIqBC,e,yNAKX,CAAEC,WAAW,I,uDAErB,WAAoB,IACVC,EAAa/qB,KADH,eAElBA,KAAA,SAAgBA,KAAhB,wBACIgrB,KAAYhrB,KAAhB,WACEgrB,qBAA0BhrB,KAA1BgrB,UACAD,IACA/qB,KAAA,SAAc,CAAE8qB,WAAW,O,gCAI/B,WACE,IACE9qB,KAAA,mB,kCAIJ,WACMA,KAAJ,UACEA,KAAA,gCAAqCA,KAArC,Y,mCAIJ,WACE,QAAe,OAAO,KADA,IAGdI,EAAcJ,KAHA,gBAId0U,EAAiBC,YAvC7B,SAmC0B,gBAKhBsW,EAAYD,kBAAlB,OAIA,OAHAC,mBACAA,uCAEA,I,4BAGF,WAAiB,IACPpyB,EAAamH,KADN,eAEf4qB,6CAEE,6BAFFA,GAGE5qB,KAHF4qB,Y,oBAOF,WAAS,IACC/xB,EAAamH,KADd,eAEC8qB,EAAc9qB,KAFf,gBAGP,OAAQ2qB,IAAD,EAEHC,mBAAgC5qB,KAFpC,UAAO,S,EArDU6qB,CAAiB1V,a,YAAjB0V,kBAEG,CAAEE,SAAU,0BCXpC,IAAMG,GAActxB,UAAH,2CAAGA,CAAH,8EACb,kBACA4K,UADA,OACAA,kBADA,wBASA,mBAAY9C,4BAA2BA,EAA3BA,YAAZ,MAGEypB,GAAW,SAAC,GAAD,aAAG3mB,OAAH,gBAAmBtL,EAAnB,qBAA2BuN,OAA3B,MAAqC,wBAArC,SACf,sBACEvN,OADF,EAEEsL,KAFF,EAGEiC,QAHF,EAIE0V,cAAY,iB,mcAGhBgP,aAAqB,CAInB3mB,KAAMlK,UAAgB,CAAC,OAJJ,UAQnBpB,OAAQoB,IARW,OAYnBmM,QAASnM,IAAUsM,MChCrB,IAEMwkB,GAAS,CAAC,YAAhB,cAEMC,GAAmB,mBAJzB,UAIyB,MAGvB,kBAA4B,CAC1BC,QADF,YAEEC,OAFF,aAMIC,e,6BASJ,cAAmB,kCACjB,kBACA,WAAkB9yB,IAAlB,YAEA,sBAA2B,uCAA3B,IAJiB,E,sDAOnB,YAA8B,IACpBwe,EAAWlX,KADS,aAExBkX,IAAWtT,EAAf,SACE,EACE5D,KAAA,cAEAA,KAAA,kB,sCAKN,WAA2B,WACzBorB,YAAe,SAAA/rB,GACb5C,4BAAiC,EAAjCA,0B,yCAIJ,WAA8B,WAC5B2uB,YAAe,SAAA/rB,GACb5C,+BAAoC,EAApCA,0B,iCAIJ,YAAuB,MACcuD,KADd,MACbyb,EADa,iBACGvE,EADH,SAEbuU,EAAiBD,EAFJ,aAGfE,EAAeD,UAArB,MACME,EAAoBF,EAAA,eAElB,YAAoB,IAClBG,EADkB,EAAjBC,WACP,QACA,OAAOD,GAAQA,WAAcv0B,EAAtBu0B,UAAoCA,aAAgBv0B,EAA3D,WAGA6f,IAAJ,GACEuE,EADgC,K,yBAKpC,WACEzb,KAAA,2BACAwrB,4B,0BAGF,WAAe,IACLC,EAAiBD,EADZ,aAEPE,EAAeD,UAArB,MACAzrB,KAAA,8BACAyrB,gB,oBAGF,WAAS,MAOHzrB,KAPG,MAEL8rB,EAFK,YAGL5U,EAHK,SAIL6U,EAJK,cAKLlzB,EALK,WAMLmzB,EANK,iBASP,MAAa,OAAO,KAEpB,IAAMC,EACJ,sBACEzS,WAAY,CAAEsS,UAAF,EAAa5U,UACzB7W,SAAUL,KAAK6rB,YAEdE,GAAe,sBAAY7yB,OAAQ8yB,IALxC,GAUA,SACS,0BAAP,GAGF,M,EA5FER,CAAkBrW,a,ylBAAlBqW,kBACkB,I,YADlBA,kBAEkB,CACpBtU,QADoB,EAEpB4U,WAFoB,EAGpBC,aAHoB,EAIpBC,eAJoB,EAKpBvQ,eAAgB,0BAyFpB+P,aAAsB,CACpBQ,eAAgB1xB,IADI,OAEpBzB,SAAUyB,IAFU,QAGpByxB,YAAazxB,IAHO,KAIpB4c,OAAQ5c,IAJY,KAKpBmhB,eAAgBnhB,IALI,KAMpBwxB,UAAWxxB,IAAUsR,MCzHhB,IAAMsgB,GAAuB,SAACntB,GAAwB,IAAdJ,EAAc,uDAAP,GAC9CwtB,EAAeptB,GAAYA,aAAjC,GACA,WACEqtB,YAAaztB,GACV,CACDO,IAAK,CACHA,IADG,kBAEHmtB,UAAW,WAAF,oBAEXptB,MAAO,CACLA,MADK,OAELotB,UAAW,WAAF,oBAEXC,OAAQ,CACNA,OADM,OAEND,UAAW,WAAF,kBAEXrtB,KAAM,CACJA,KADI,OAEJqtB,UAAW,WAAF,oBAjBf,K,ghCCOF,IAAMpT,GAAUsT,mBAAhB,IAEqBC,e,6BAInB,cAAmB,kCACjB,kBACA,cAAqB,iCAArB,IACA,cAAmB,+BAAnB,IACA,sBAA2B,uCAA3B,IAJiB,mE,uDAOnB,WAAsB,MACmBxsB,KADnB,MACZkX,EADY,SACJuV,EADI,qBAEpB,GACEA,M,yBAIJ,cAAuC,IAAzBnrB,EAAyB,EAAzBA,IAAK7H,EAAoB,EAApBA,MAAoB,EACJuG,KADI,MAC7BmgB,EAD6B,YAErC,OAFqC,YAInC,yBACEhf,IADF,eAEEG,IAFF,EAGElB,UAAS,UAAK+f,GAAL,SAHX,WAIEuM,iBAJF,EAKEjzB,MAAK,YAEAyyB,GAAqBnzB,EAFrB,MAKL,yBAAK4zB,QAAQ,aACX,0BACEvsB,UADF,SAEEkN,EAAE,+HAGJ,0BACElN,UADF,OAEEkN,EAAE,0GApBa,O,2BA2BzB,YAAqE,WAArDhM,EAAqD,EAArDA,IAAK7H,EAAgD,EAAhDA,MAAOV,EAAyC,EAAzCA,UAAW6zB,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,eAAkB,EAW/D7sB,KAX+D,MAEjE8W,EAFiE,mBAGjEuI,EAHiE,eAIjEnI,EAJiE,SAKjE4V,EALiE,uBAMjEC,EANiE,sBAOjE5yB,EAPiE,eAQjEC,EARiE,eASjEN,EATiE,iBAUjEZ,EAViE,SAa7D8zB,EAAgB,GAAH,mBAGjB9zB,WAEF,OACE,0CAEEwzB,iBAFF,EAGEvyB,aAHF,EAIEC,aAJF,EAKEX,MALF,EAME0iB,cAAY,qBAEZ,sBACE8Q,QADF,EAEEC,OAAQltB,KAFV,oBAGEpJ,MAAOsgB,EAAS,OAHlB,QAIEiW,OAAQ,CACNC,KAAM,GAAF,aAEFC,KAAMP,EAAqBQ,KAE7BC,MAAOT,KAGR,mBACC,kBAAC,WAAD,KAAcxrB,IAAd,EAAwB7H,MAAO+zB,GAC5BtN,YAAsBpJ,EAAkB,CAAE+V,kBAAkB,CAC3D,gBAHL,Y,oBAYT,WAAS,MAQH7sB,KARG,oBAELytB,OAFK,4BAGLhS,OAHK,MAGY,wBAHZ,gBAIL1iB,OAJK,qCAKL20B,OALK,WAMLnO,EANK,8BAOLuM,OAPK,SASP,OACE,sBACE5U,QADF,EAEEuE,eAFF,EAGEqQ,UAAWA,GAEX,uBACE4B,UADF,EAEE30B,UAFF,EAGE40B,iBAAkBpO,GAEjBvf,KAXP,oB,EA3GiBwsB,CAAsBhhB,iB,YAAtBghB,kBAEG,CAAEC,mBAAoB,0BCbvC,IAAMpM,GAAc,QAAdA,GAEJ,QAGIC,GAAe,CAACD,GAAmBA,I,ohCCM3BuN,e,6BASnB,cAAmB,iCACjB,iBADiB,4CAPH,GAOG,yDALW3vB,aAAW,SAAAlF,IAEvC80B,EAD8B,EADsB,yBAEpDA,OAKA,QAAa,CACX3W,QADW,EAEXuW,WAAW,GAGb,mBAAwB,oCAAxB,IACA,mBAAwB,oCAAxB,IACA,qBAA0B,sCAA1B,IACA,eAAoB,gCAApB,IACA,qBAA0B,sCAA1B,IACA,8BAAmC,+CAAnC,IAGA,uBAA4B,wCAA5B,IACA,0BAA+B,2CAA/B,IACA,0BAA+B,2CAA/B,IAjBiB,E,qDAqBnB,WACEztB,KAAA,mB,gCAGF,WAAqB,MACWA,KADX,MACXkX,EADW,SACHuW,EADG,aAEfvW,QAAJ,IAAuBuW,GAErBztB,KAAA,SAAc,CAAEytB,WAAW,M,kCAI/B,WACEztB,KAAA,mB,kCAgBF,YAAuD,MAArB8tB,EAAqB,uDAAJ,GACzC5W,EAAWlX,KADkC,aAErD,gBAAIkX,EAA6B,IAE/B,mBACGmJ,GAAoB,CACnBnmB,SAAU,CACRuM,QAASzG,KAAK+tB,oBAEhBC,SAAU,uBALd,cAOG3N,GAAoB,CACnBnmB,SAAU,CACRC,aAAc2zB,gBAA+B9tB,KADrC,iBAER5F,aAAc0zB,gBAA+B9tB,KAFrC,iBAGRyG,QAASzG,KAAK+tB,oBAEhBC,SAAU,qBAA8BC,IAA9B,KAbd,OAekB,CAChB/zB,SADgB,GAEhB8zB,SAAU,wB,qBAKhB,YAAiB,IACP7W,EAAWnX,KADJ,aAEPkuB,EAAmBluB,KAFZ,qBAGVA,KAAL,qBAEA,IAAIkuB,GACFluB,KAAA,SAAc,CACZkX,OADY,EAEZuW,WAAW,IAGftW,Q,kBAGF,WAAO,WACL6F,aAAahd,KAAbgd,YADK,IAEGmR,EAAcnuB,KAFjB,gBAGLA,KAAA,UAAiB6Q,YAAW,kBAAM,WAAN,KAA5B,K,mBAGF,WAAQ,WACNmM,aAAahd,KAAbgd,WADM,MAEuChd,KAFvC,MAEEouB,EAFF,yBAEc5Q,OAFd,MAEwB,wBAFxB,EAGNxd,KAAA,WAAkB6Q,YAAW,WAC3B,cACA2M,MAFF,K,gCAMF,YAAsB,IACZnG,EAAqBrX,KADT,uBAEZyG,GAAYgD,cAAI4N,EAAJ5N,UAFA,YAIpBzJ,KAAA,OAEI3E,qBAAJ,IAAyBoL,O,qCAG3B,WACEzG,KAAA,wB,qCAGF,WAA0B,WACxBA,KAAA,sBADwB,MAESA,KAFT,cAEhBwd,OAFgB,MAEN,wBAFM,EAGxB3M,YAAW,WACJ,EAAL,oBACE,cACA2M,OAHJ3M,M,8BAQF,WACE7Q,KAAA,qBACAA,KAAA,S,8BAGF,WAAmB,WACjBA,KAAA,qBACA6Q,YAAW,WACJ,EAAL,oBACE,YAFJA,M,gCAOF,YAEE,OADA7Q,KAAA,4BAAiCquB,EAAjC,WACA,I,kCAGF,WACEruB,KAAA,SAAc,CAAEytB,WAAW,M,0BAG7B,YAAsB,IAAPnsB,EAAO,EAAPA,IACL4V,EAAWlX,KADC,eAE2CA,KAF3C,MAEZqX,EAFY,mBAEM3B,EAFN,kBAEuB4Y,EAFvB,kBAIdC,EAAoB9kB,cAAI,EAE5B,CAAC,QAF0B,aAG3B,0BAEI+kB,EAAU,eACZ,CAAEltB,OACF,CAAEjB,SAAU6Z,YAAU5Y,EAAKitB,IAOzBE,EAAc,GAAH,SALMzuB,KAAK0uB,qBAAqB,EAE/CrX,EAFqB,OAAvB,UAKiB,OAGf,iBAHe,EAIf,gBAAiBH,IAGnB,SACSoX,EAAgB,GAAD,CACpBhtB,OADF,IAMK4e,YAAsB7I,EAA7B,K,oBAGF,WAAS,aACuBrX,KADvB,MACCkX,EADD,SACSuW,EADT,cAoBHztB,KApBG,MAILjH,EAJK,YAKL2c,EALK,kBAMLpc,EANK,YAOLq1B,EAPK,YAQLC,EARK,WASL1P,EATK,kBAUK2P,EAVL,WAWL/C,EAXK,YAYL3L,EAZK,YAaLrJ,EAbK,mBAcLiW,EAdK,sBAeLD,EAfK,uBAgBLY,EAhBK,YAiBLnO,EAjBK,gBAkBLzlB,EAlBK,iBAmBLZ,EAnBK,SAsBD41B,EAAe,GAAH,CAChBpwB,OAAQ,CACNqwB,QADM,EAENrwB,OAAQ,MAAF,OAAQiwB,EAAR,IAERzP,gBAAiB,CACf6P,SADe,EAEfC,QAFe,EAGfC,kBAAmB/P,GAErBgQ,mBAAoB,CAClBH,SADkB,EAElBI,GAAInvB,KAFc,mBAGlBovB,MAAO,MAbX,GAiBMC,EAAiBrvB,KAAK0uB,qBAAqBhZ,GAAjD,SAEM4Z,EAAqB,CACzBx1B,eADyB,EAEzBod,OAFyB,EAGzBuW,WAAWvW,GAHc,EAIzByX,UAJyB,EAKzBxO,UALyB,EAMzB7mB,UANyB,EAOzBo0B,UAPyB,EAQzB5W,iBARyB,EASzB2V,mBAAoBzsB,KATK,qBAUzByb,eAAgB,kBAAM,EAAN,SAChB1iB,UAXyB,EAYzB+yB,UAZyB,EAazBiB,oBAbyB,EAczBD,qBAdyB,EAezB3yB,aACEub,IAAoB2K,GAChBrgB,KADJ0V,6BAhBuB,EAmBzBtb,aACEsb,IAAoB2K,GAChBrgB,KADJ0V,6BApBuB,EAuBzB6J,cAvByB,EAwBzBrmB,UAGF,OAAI21B,GAAJ,oBAA2BA,EAEvB,2BACGA,EAAa,CACZU,UADY,IAEZF,eAFY,EAGZ91B,QAAS,2BAOf,2BACE,2BAAYyG,KADd,cAEE,qBAHJ,O,uCAtOF,cAAsD,IAC5CkX,EAAWnX,EADiC,OAIpD,OAAImX,IAFuBrgB,EAFyB,eAK3C,CACLqgB,OADK,EAELgX,eAAgBhX,GAGpB,S,EAxDiB0W,CAAmBzY,aCX3BiL,GAAW,SAAXA,GAAW,MAkBX5lB,GAAY,CAlBD,2CAuBtB4lB,GARS,UAfa,iDA6BtBA,GA7BsB,6CCMlBoP,GAAW,SAAC,GAAD,uBACf11B,OADe,wBAEf80B,OAFe,wBAGfD,OAHe,wBAIfxO,OAJe,6BAKff,OALe,8BAMfC,OANe,kCAOfvI,OAPe,MAOI,wBAPJ,iBAQfsX,OARe,0BASfD,OATe,gCAUfzY,OAVe,MAUG2K,GAVH,aAWfnJ,OAXe,0BAYfC,OAZe,MAYN,wBAZM,cAafqG,OAbe,MAaL,wBAbK,wBAcfqQ,OAde,MAcK,wBAdL,gBAef90B,OAfe,MAeHqnB,GAfG,sBAgBflB,OAhBe,+BAiBf5lB,OAjBe,kCAkBfwzB,OAlBe,MAkBQ,CACrBQ,GAAI,CAAEjB,UAAF,aAA2BoD,QAAS,KACxC3Q,OAAQ,CAAEzoB,MAAF,GAAaq5B,SAAU,KApBlB,0BAsBf3C,OAtBe,MAsBO,CACpBO,GAAI,CAAEjB,UAAF,WAAyBoD,QAAS,KACtC3Q,OAAQ,CAAEzoB,MAAF,GAAaq5B,SAAU,KAxBlB,gBA0Bf5D,OA1Be,8BA2BfzU,OA3Be,MA2BI,wBA3BJ,yBA4BfsY,OA5Be,yCA6BfC,OA7Be,MA6BS,wBA7BT,6BA8BfC,OA9Be,MA8BU,wBA9BV,gBA+BfnC,OA/Be,0BAgCfp3B,OAhCe,MAgCF,wBAhCE,EAiCLu4B,GAjCK,gCAkCfP,QAlCe,oCAmCf/O,QAnCe,iBAoCfrmB,GApCe,gBAsCf,sBACE01B,SADF,EAEED,UAFF,EAGExO,UAHF,EAIE2M,qBAJF,EAKEhzB,eALF,EAMEgd,iBANF,EAOEsI,cAPF,EAQEC,aARF,EASE+O,WATF,EAUED,UAVF,EAWE0B,uBAXF,EAYED,sBAZF,EAaEla,gBAbF,EAcEwB,OAdF,EAeEwW,UAfF,EAgBEvW,OAhBF,EAiBEqG,QAjBF,EAkBEqQ,kBAlBF,EAmBEd,oBAnBF,EAoBEh0B,UApBF,EAqBEmmB,gBArBF,EAsBEK,cAtBF,GAuBE+O,gBAvBF,GAwBEh1B,UAxBF,EAyBE+d,iBAzBF,EA0BE/gB,WA1BF,EA2BEw1B,UA3BF,EA4BE6D,mBA5BF,EA6BEz2B,OAAQA,IAnEK,KA0EjBs2B,aAAqB,CACnB11B,eAAgBQ,UADG,IAGnBs0B,SAAUt0B,IAHS,OAKnBq0B,UAAWr0B,IALQ,OAOnB6lB,UAAW7lB,cAAoB,CAACA,IAAD,OAAmBA,UAAvCA,OCvFN,IAAMw1B,GAAc,UCmBrBC,GAAmB3c,mBAFzB,WAGM4c,GAAc5c,oBAHpB,UAGA,QAEM6c,GAAY,SAAC,GAiBb,QAhBJn2B,sBAgBI,MAhBa,GAgBb,EAfJuG,EAeI,EAfJA,SAeI,IAdJtH,iBAcI,MAdQm3B,GAcR,MAbJ/b,aAaI,MAbI,GAaJ,MAZJia,kBAYI,MAZS+B,IAYT,MAXJhC,iBAWI,MAXQiC,IAWR,MAVJ1a,uBAUI,MAVc2a,GAUd,MATJhZ,wBASI,MATe,KASf,MARJjX,iBAQI,MARQ,GAQR,MAPJ8W,cAOI,WAPKzc,EAOL,MANJ0c,cAMI,MANK,wBAML,MALJmZ,gCAKI,WALuB71B,EAKvB,MAJJ81B,mBAII,MAJUT,GAIV,MAHJx2B,iBAGI,SAFJJ,EAEI,EAFJA,OACGs3B,EACC,2NACkBC,EAAqB9b,YAvB7C,WAsBM,aAKAsE,EAAJ,EAKA,MAJA,kBAAW9E,IACT8E,EAAU,0BAAVA,IAIA,sBACEkH,UADF,EAEErJ,iBACE,yCAGE1W,UAAS,2CAHX,GAIEC,SAAUA,IAPhB,GAYE+tB,WAZF,EAaED,UAbF,EAcEzY,gBAdF,EAeEwB,OAfF,EAgBEC,OAhBF,EAiBEpe,UAjBF,EAkBEO,UAAWi3B,IAAgBT,IAAhBS,EACXD,yBAnBF,EAoBEjZ,iBAAkB6I,YApBpB,GAqBEhnB,OAAQA,KAKRw3B,GAAe,CACnB52B,eAAgBQ,+BADG,oDAInBvB,UAAWuB,mEAEK41B,IAChB/b,MAAO7Z,sBAAoB,CAACA,YAAD,OAAmBA,YAAvCA,yCAPY,WAUnB8zB,WAAY9zB,0EAVO,KAanB6zB,UAAW7zB,0EAbQ,KAgBnBob,gBAAiBpb,kGAED+1B,IAChBhZ,iBAAkB/c,kFAnBC,WAsBnB4c,OAAQ5c,wFAtBW,GAyBnB6c,OAAQ7c,6BAzBW,kCA0BnBg2B,yBAA0Bh2B,gCA1BP,8BA6BnBhB,UAAWgB,8EA7BQ,GAgCnB8F,UAAW9F,+BAhCQ,aAiCnBi2B,YAAaj2B,kBAAgB,CAAC,UAAjBA,wDAEGw1B,IAChB52B,OAAQoB,0FApCW,GAuCnB+F,SAAU/F,sBAAoB,CAACA,YAAD,KAAiBA,YAArCA,8D,ghCAKZ21B,gBAE0Bv1B,mBAA1B,IACAi2B,aCvHA,IAEMC,GAAexd,mBAFrB,uBAGM0B,GAAa,oBAHnB,sBAGmB,SAGjB,gBAAG9V,EAAH,OAASC,EAAT,QAAgB8F,EAAhB,UAAyB9M,EAAzB,+BACE+G,KADF,EAEEC,MAFF,EAGE4xB,MAAO54B,GAHT,QAQmB64B,e,6BACnB,cAAmB,kCACjB,kBACA,qBAA4B,wCAA5B,IAFiB,E,gDAUnB,YACE,OAAO9wB,KAAK+wB,sBAAqB,EAAjC,K,2BAGF,YACE,OAAO/wB,KAAK+wB,sBAAqB,EAAjC,K,kCAGF,WAA8C,IAAzB/xB,IAAyB,yDAAZgyB,EAAY,uCAC5C,MAAiB,OAAO,KACxB,GAAIzqB,cAAJ,KACOyqB,EAAA,QAAkB,SAAAC,GAAI,YAA3B,OAA6C,OAAO,KAHV,MAKPjxB,KALO,MAKpClG,EALoC,iBAKpB7B,EALoB,WAMtCuhB,EAAaxa,EAAO,CAAEA,MAAM,GAAS,CAAEC,OAAO,GAEpD,OACE,kCAAYua,WAAZ,EAAoCvhB,SAAUA,GAA9C,GACG+4B,EAAA,KACC,qBACEE,GACA,4BAAmCA,EAAnC,WAAoD/vB,IAAKrE,W,oBAMnE,WAAS,MASHkD,KATG,MAELI,EAFK,YAGLC,EAHK,WAIL8wB,EAJK,kBAKLC,EALK,iBAMLv4B,EANK,WAOLkM,EAPK,UAQLjL,EARK,iBAWD4qB,EAAiBhsB,kBAAvB,GAXO,EAakCgsB,EAblC,MAaCzsB,EAbD,WAaWsM,EAbX,WAaqBL,EAbrB,WAeD+Q,EAAajV,KAAKqxB,cAAc,OAAnB,IAAmB,CAAtC,IACMrc,EAAYhV,KAAKsxB,aAAa,OAAlB,IAAkB,CAApC,IACA,OACE,kCACElxB,UADF,EAEEoZ,WAAY,CACVvhB,SADU,EAEVsM,SAFU,EAGVL,SAHU,EAIVa,WAEF1E,SAAUA,GARZ,OADF,O,EAvDiBywB,CAA0B3b,aClBxC,SAASoc,GAAanyB,EAAOjJ,GAClC,OAAOwW,mBAAP,E,4hCDiBmBmkB,kBAKG,CACpBK,gBADoB,GAEpBC,eAFoB,GAGpBt3B,eAAgB,KEdpB,IACM2sB,GAAQ,qBADd,QACc,MAGZ,kBAA2B,CACzB9hB,UADF,YAEExO,MAFF,YAKIq7B,GAAyBpe,mBAT/B,QASA,eAIMqe,GAAqB,mBAb3B,QAa2B,MAGzB,kBAA2B,CACzB9sB,UADF,YAEExO,MAFF,YAKIu7B,GAAkBte,gBArBxB,QAqBA,aAEMue,GAAqB,SAACT,GAAD,UAErB1Z,GAAO,wBACPoa,e,6BACJ,cAAmB,iCACjB,iBADiB,6CAoBF,YAAO,MACI,EADJ,MACdvqB,EADc,WACJ3C,EADI,MAEdvO,EAAUkB,EAFI,aAGlBqN,GAAOvO,EAAX,GACAkR,QAxBiB,yCA2BN,YAAO,MACgB,EADhB,MACVhP,EADU,SACFgP,EADE,WACQ5C,EADR,MAEVtO,EAAUkB,EAFA,aAGdoN,GAAOtO,EAAPsO,GAAJ,KAA0BtO,GACxBkR,EAAS,CACP/P,OAAQ,CACNnB,MAAOsO,gBAIbpM,KACA,WAAc,CACZuN,QAAQ,OAvCO,0CA2CL,aAEZ2e,EADoB,EADD,eAEnBA,GACA,WAAc,CACZ3e,QAAQ,OA/CO,+CAmDA,WACZ,QAAL,aACE,WAAc,CACZ9O,aAAa,OAtDA,+CA2DA,WACb,QAAJ,aACE,WAAc,CACZA,aAAa,OA9DA,uCAmER,WACT,IAAM+6B,EAAS,qBAAf,wBACA,WAAc,CACZzyB,MAAOyyB,EAAOzyB,WApEhB,QAAa,CACXA,OADW,EAEXwG,QAFW,EAGX9O,aAAa,GAEf,MAAW4B,IAAX,YACA,aAAkBA,IAAlB,YARiB,mD,qDAWnB,WACEsH,KAAA,WACA9I,iCAAkC8I,KAAlC9I,Y,kCAGF,WACEA,oCAAqC8I,KAArC9I,Y,yBAyDF,WAAc,MAC6B8I,KAD7B,MACJ8xB,EADI,UACKzqB,EADL,wBAEZ,EACEyqB,IAEAzqB,EAAS,CAAE/P,OAAQ,CAAEnB,MAAO,OAGzB6J,KAAKsB,KAAN,IAAJ,SAA8BtB,KAAKsB,IAAIkZ,QAAQuX,U,sCAGjD,WAA2B,MACc/xB,KADd,MACjB2E,EADiB,YACNxO,EADM,QACC+N,EADD,WAEzB,SAAqB,KACdS,GAAA,EACL,sBACE0N,WADF,OAEE8J,cAFF,yBAGEjY,SAHF,EAIEoO,KAAM,sBAJR,MAKE7L,QAASzG,KAAKgyB,cANlB,O,oBAWF,WAAS,MAsCHhyB,KAtCG,MAELkF,EAFK,OAGL/I,EAHK,KAIL81B,EAJK,sBAKLhuB,EALK,YAML7D,EANK,YAOLiR,EAPK,OAQLhR,EARK,WASL8D,EATK,YAULC,EAVK,YAWLE,EAXK,cAYLM,EAZK,gBAaLC,EAbK,iBAcLqtB,EAdK,iBAeL3tB,EAfK,WAgBLL,EAhBK,WAiBL/N,EAjBK,QAkBLsQ,EAlBK,UAmBLY,EAnBK,WAoBLiQ,EApBK,YAqBLtQ,EArBK,UAsBLud,EAtBK,UAuBLlsB,EAvBK,SAwBL6tB,EAxBK,UAyBLphB,EAzBK,WA0BLN,EA1BK,OA2BL2tB,EA3BK,kBA4BL1tB,EA5BK,MA6BLC,EA7BK,MA8BLC,EA9BK,YA+BLvK,EA/BK,eAgCLuqB,EAhCK,aAiCLlrB,EAjCK,QAkCLK,EAlCK,iBAmCLlC,EAnCK,WAoCLK,EApCK,WAqCFqP,EArCE,oaAuCgCtH,KAvChC,MAuCCZ,EAvCD,QAuCQwG,EAvCR,SAuCgB9O,EAvChB,cAwCDq6B,EAAkB,CACtBnxB,KADsB,qCAAxB,IAIMoxB,EAAiB,CAACxsB,GAAeuL,OAAvC,IAEMsU,EAAa,GAAH,CACd,aAAcnd,EADA,cAEd,mBAFc,EAGd,gBAHc,EAId,kBAJc,EAKd,oBALc,OAMd,cAAeA,EAND,eAOdpC,KAPc,EAQd/I,GARc,EASdmF,IAAKtB,KATS,IAUdI,UAVc,EAWd6D,UAXc,EAYdC,SAAUA,GAZI,EAad7D,SAbc,EAcd8D,UAdc,EAedC,UAfc,EAgBdiN,KAhBc,EAiBdhZ,OAjBc,EAkBdgP,SAlBc,EAmBdZ,QAnBc,EAoBd8d,QApBc,EAqBdjN,UArBc,EAsBdtQ,QAtBc,EAuBdkf,QAvBc,EAwBd9rB,aAxBc,EAyBd83B,eAzBc,EA0BdvN,WA1Bc,EA2BdrgB,YA3Bc,EA4BdQ,SA5Bc,EA6BdN,KA7Bc,EA8BdrO,MA9Bc,EA+BdsO,IA/Bc,EAgCdC,IAhCc,EAiCdjL,MAjCc,EAkCd7B,YAlCF,GAsCI8sB,EACF,sBAAwBpjB,IAAKtB,KAA7B,WAA8CvG,MAAO,CAAE2F,MAAO,SAC1D+yB,EAiBA,kCACE/xB,UAAWA,GADb,GAGEuE,UAHF,EAIExO,MAAOA,IAENg8B,EAAgB,GAAD,GAzBxB,KAGM,oCACMlY,eAAKwK,EAAY,CADvB,oBAEE2N,aAFF,MAGEztB,UAAS,UAHX,GAIE0C,SAAUrH,KAJZ,eAKE3H,OAAQ2H,KALV,WAMEukB,QAASvkB,KANX,YASE4kB,YAAa5kB,KATf,iBAYE2kB,WAAY3kB,KAZd,iBAaE7J,MAAOA,MAoDf,OApCA,IACEuuB,EACE,sBACExN,OACEgb,GACAX,GAAanyB,EADb8yB,WAFJ,EAQE/d,MAAOxH,OART,GASEzT,OATF,GAUEme,iBACE,sBAAwB5d,MAAO,CAAE2F,MAAO,SAAxC,MASN+xB,UAA0BC,EAA1BD,UACE,kCACE/wB,UADF,EAEEgxB,eAFF,EAGED,gBAHF,EAIEl5B,SAAUA,GAJZ,GADFk5B,GADF,M,EA7OES,CAAkBzc,aAgQxByc,gBAAyB,CACvBv5B,OADuB,GAEvBksB,QAAS/M,IAGXoa,aAAsB,CACpBxxB,UAAW9F,IADS,OAEpB63B,gBAAiB73B,IAFG,KAGpB6B,GAAI7B,cAAoB,CAACA,IAAD,OAAmBA,IAHvB,SAIpB23B,oBAAqB33B,IAJD,KAKpBoK,IAAKpK,cAAoB,CAACA,IAAD,OAAmBA,IALxB,SAMpBmK,IAAKnK,cAAoB,CAACA,IAAD,OAAmBA,IANxB,SAOpB+W,KAAM/W,IAPc,OAQpBjC,OAAQiC,IARY,KASpB+M,SAAU/M,IATU,KAUpBmM,QAASnM,IAVW,KAWpBiqB,QAASjqB,IAXW,KAYpBgd,UAAWhd,IAZS,KAapB0M,QAAS1M,IAbW,KAcpBF,aAAcE,IAdM,KAepBqqB,WAAYrqB,IAfQ,KAgBpB4rB,QAAS5rB,IAhBW,KAiBpBw3B,QAASx3B,IAjBW,KAkBpBgK,YAAahK,IAlBO,OAmBpBwK,SAAUxK,IAnBU,KAoBpB4K,KAAM5K,IApBc,OAqBpB+F,SAAU,cAAoB,CAC5B/F,IAD4B,KAE5B,UAAgB,CAAEkgB,QAASlgB,IAAUmX,QAEvCtN,UAAW7J,IAzBS,OA0BpB8J,UAAW9J,IA1BS,OA2BpBsK,cAAetK,IA3BK,QA4BpBuK,eAAgBvK,IA5BI,QA6BpB43B,eAAgB53B,IA7BI,KA8BpBiK,SAAUjK,IA9BU,KA+BpB4J,SAAU5J,IA/BU,KAgCpB2J,UAAW3J,IAhCS,KAiCpBkK,KAAMlK,IAjCc,OAkCpBqK,UAAWrK,IAlCS,KAmCpBR,eAAgBQ,IAnCI,OAqCpBb,MAAOa,IArCa,OAsCpB1C,SAAU0C,cAAoB,CAACA,IAAD,OAAmBA,IAtC7B,SAgDpBnE,MAhDoB,gBAkDlB,GAAMuL,EAAF,qBAAJ,kBAA0CA,EAAP,GACjC,OAAO,IAAI0K,MACT,4DAAiD1K,EAAjD,iIADF,qGC1VN,IAAM2wB,GAAU,SAAC,GAAD,uBACdv4B,OADc,WAEdqC,EAFc,mBAGd8H,OAHc,sBAIdC,OAJc,uBAKd9D,OALc,yBAMduE,OANc,kBAOd0M,OAPc,yBAQdlN,OARc,0BASdC,OATc,yBAUdC,OAVc,4BAWd6tB,OAXc,SAYd5tB,EAZc,wBAadnO,OAbc,wBAcd8B,OAdc,sBAedsM,OAfc,sBAgBdlE,OAhBc,sBAiBdmE,OAjBc,uBAkBdC,OAlBc,uBAmBdC,OAnBc,iCAoBdE,OApBc,gCAqBdC,OArBc,0BAsBdC,OAtBc,6BAuBdqtB,OAvBc,aAwBdptB,EAxBc,kCAyBdktB,OAzBc,SA0BXjtB,EA1BW,kUA4Bd,uCAEEC,aAAYD,EAFd,cAGEf,UAHF,EAIE7D,UAAS,wBAAkB8D,EAAW,iBAJxC,IAKES,UALF,EAME7K,eANF,EAOEq4B,gBAPF,EAQEhW,cAAanX,kBARf,0BASEd,SATF,EAUEguB,eAVF,EAWE7tB,WAXF,EAYEpM,SAZF,EAaEkE,GAbF,EAcEkE,SAdF,EAeE4xB,oBAfF,EAgBErtB,cAhBF,EAiBEF,IAjBF,EAkBEP,UAlBF,EAmBEM,IAnBF,EAoBEL,UApBF,EAqBEiN,KArBF,EAsBE/M,YAtBF,EAuBEC,SAvBF,EAwBEO,SAxBF,EAyBED,eAzBF,EA0BEL,KA1BF,EA2BErO,MA3BF,EA4BE4O,QAASA,MCxDPf,GAAY,SAAC,GAAD,uBAChBlK,OADgB,yBAEhBmK,OAFgB,sBAGhBC,OAHgB,uBAIhBC,OAJgB,0BAKhBC,OALgB,yBAMhBC,OANgB,SAOhBC,EAPgB,wBAQhBnO,OARgB,wBAShB8B,OATgB,sBAUhBsM,OAVgB,sBAWhBlE,OAXgB,sBAYhBmE,OAZgB,uBAahBC,OAbgB,uBAchBC,OAdgB,6BAehBC,OAfgB,2BAgBhBC,OAhBgB,gCAiBhBC,OAjBgB,0BAkBhBC,OAlBgB,SAmBhBC,EAnBgB,UAoBbC,EApBa,iPAsBhB,uCAEEC,aAAYD,iBAFd,WAGEf,UAHF,EAIEU,UAJF,EAKE7K,eALF,EAMEoK,SANF,EAOEG,WAPF,EAQEpM,SARF,EASEoI,SATF,EAUEuE,cAVF,EAWEF,IAXF,EAYEP,UAZF,EAaEM,IAbF,EAcEL,UAdF,EAeEE,YAfF,EAgBEC,SAhBF,EAiBEO,SAjBF,EAkBED,eAlBF,EAmBEK,KAnBF,UAoBEV,KApBF,EAqBErO,MArBF,EAsBE4O,QAASA,MAIPrD,GAAQ,CAEZ5H,eAAgBQ,kCAFJ,mCAQZ2J,UAAW3J,6BARC,+CAcZ4J,SAAU5J,6BAdE,2CAoBZ6J,UAAW7J,+BApBC,+BAwBZ8J,UAAW9J,+BAxBC,+BA4BZ+J,WAAY/J,6BA5BA,6DAkCZgK,YAAahK,+BAlCD,gCAsCZnE,MAAOmE,+BAtCK,mDA4CZrC,SAAUqC,6BA5CE,yCAgDZiK,SAAUjK,6BAhDE,4CAoDZmK,IAAKnK,+BApDO,2BAsDZoK,IAAKpK,+BAtDO,2BA0DZqK,UAAWrK,6BA1DC,4CAgEZsK,cAAetK,gCAhEH,0DAsEZuK,eAAgBvK,gCAtEJ,2DA4EZwK,SAAUxK,6BA5EE,2CAuFZyK,QAASzK,+BAvFG,wEA2FZkK,KAAMlK,+BA3FM,mBA6FZ+F,SAAU/F,sBAAoB,CAACA,YAAD,KAAiBA,YAArCA,sC,ghCAKZ0J,gBAE4BtJ,mBAA5B,IAEAyK,aCjJA,IAEMmtB,GAAe,SAACj7B,GACpB,IAAIlB,EAAJ,EACIkB,GAAKA,EAAT,SAIElB,EADIkB,EAHa,cAMnB,UAGF,SAASk7B,GAAiBC,EAAMC,GAE9B,GAAID,EAAJ,kBACEA,UACAA,sBAF0B,QAKrB,GAAIA,EAAJ,gBAA0B,CAC/B,IAAME,EAAQF,EAAd,kBACAE,eACAA,yBACAA,2BACAA,YAIJ,IAAMC,GAAkB,SAACx8B,GAAsB,IAAfuL,EAAe,uDAAP,GAC9BkJ,EAAelJ,EADsB,KAC/BiJ,EAASjJ,EADsB,KAEvCkxB,EAAYN,GAAlB,GACMO,EAAchqB,wBAAc+pB,EAAWhoB,EAAM,GAAlB,CAC/BC,OAAO,GACHnJ,mBAAyB,CAAEoJ,gBAAiBpJ,EAAMoJ,mBAExD,cAAIH,EAAsBA,IAAOkoB,EAAPloB,gBAAP,MACZkoB,EAAP,gBAGIC,e,6BAGJ,cAAmB,iCACjB,iBADiB,qCAFT,MAES,6CAWF,YAAO,MACS,EADT,MACdC,EADc,aACF9pB,EADE,SAEtB,KACE,WAAc,CAAE8pB,YAAY,QAD9B,CAFsB,MAOK,EAPL,MAOd1rB,EAPc,WAOJuD,EAPI,OAQhBzU,EAAQm8B,GAAd,GACMO,EAAcF,GAAgBx8B,EAAO,EAA3C,OACA,WACE,CACE08B,YAAaA,WADf,GAEE18B,MAFF,EAGE47B,OAAO,IAET,WAOE1qB,EANc,CACZ/P,OAAQ,CACNnB,MADM,EAEN68B,cAAe78B,QAOvB,IAAI88B,GAAOJ,GAAD,YAAV,EACQpiB,EAAiBpZ,EA5BH,oBAtD1B,IAmFQ,YACF47B,IACApiB,YAAW,kBAAM0hB,GAAiB,EAAD,IAAtB,OAIX,CAAC,EAAG,EAAG,EAAG,IAAIlnB,QAAQoF,IAAtB,GACA7F,IAAS0c,EADT,QAGEuL,oBA5FR,IA4F0C,WAEpChiB,YAAW,kBAAM0hB,GAAiB,EAAD,IAAW9hB,EAAjC,MAEFoiB,IAAgBA,EAAYI,EAAZJ,IAAD,kBAAnB,EACLhiB,YAAW,kBAAM0hB,GAAiB,EAAD,IAAWU,EAAjC,MACFxiB,OAA0B6W,UAA9B,EAGLzW,YAAW,kBAAM0hB,GAAiB,EAAD,IAAtB,MAEFjL,UAAJ,GACLzW,YAAW,kBAAM0hB,GAAiB,EAAD,IAAtB,UA7DI,4CA8EH,YACdl7B,oBADqB,IAEbigB,EAAc,EAFD,gBAGbnhB,EAAU,EAHG,YAIf+8B,EAASP,GAAgBx8B,EAAO,EAAtC,OACA,UAAekB,EAAf,QACA,cAAIA,MACF,WAAc,CACZ4R,OAAQiqB,SAAgB,IAO1B,WAAc,CACZjqB,OAAQiqB,EAAOjqB,SAGnBqO,QAjGiB,yCAoGN,YAAO,IACVjf,EAAW,EADD,aAElB,WAAc,CAAE05B,OAAO,IACvB15B,QArGA,QAAa,CACX26B,cAAetxB,EADJ,MAEXvL,MAAOuL,EAFI,MAGXmxB,YAAaF,GAAgBjxB,EAAD,UAE9B,WAAgBhJ,IAAhB,YAPiB,E,0CA0GnB,WAAS,aA4BHsH,KA5BG,MAGLvG,GAHK,qBAILyK,EAJK,WAKL9D,EALK,YAMLiR,EANK,OAOLlN,EAPK,YAQLC,EARK,YASLC,EATK,aAULC,EAVK,cAYLmC,GAZK,uBAcL8d,GAdK,sBAgBL2B,GAhBK,oBAiBLlf,EAjBK,UAkBL/O,EAlBK,WAmBLsM,EAnBK,WAoBLC,EApBK,OAqBLnE,EArBK,mCAuBLsE,OAvBK,SAwBLC,EAxBK,gBAyBLC,EAzBK,iBA0BL+F,EA1BK,OA2BFtD,EA3BE,oSA6BwBtH,KA7BxB,MA6BC6yB,EA7BD,cA6Bcd,EA7Bd,QA8BP,OACE,uCAEE9sB,aAAYqC,EAFd,cAGElH,UAHF,EAIEuE,UAJF,EAKET,SALF,EAMEG,WANF,EAOEpM,SAPF,EAQEoI,SAAU,YACR,QACA,GAAcA,MAEhB8yB,SAZF,EAaE7nB,mBAbF,EAcE1G,cAdF,EAeEgG,KAfF,EAgBEzG,UAhBF,EAiBEC,UAjBF,EAkBEiN,KAlBF,EAmBEhZ,OAAQ2H,KAnBV,WAoBEqH,SAAUrH,KApBZ,eAqBEyG,QArBF,EAsBE8d,QAtBF,EAuBEjN,UAAWtX,KAvBb,cAwBEgH,QAxBF,EAyBEkf,QAzBF,EA0BE5hB,YA1BF,EA2BEC,SA3BF,EA4BEM,eA5BF,EA6BEpL,MA7BF,EA8BE+K,KA9BF,EA+BErO,MAAO08B,Q,uCAvGb,cAA8C,IACpC18B,EAAUuL,EAD0B,MAE5C,OAAIvL,IAAUS,EAAd,cAES,CACLT,MADK,EAEL08B,YAHkBF,GAAgBx8B,EAApC,GAIE68B,cAAe78B,GAGnB,S,EA9EE28B,CAAwB3d,aAiL9B2d,aAA4B,CAC1B7uB,UAAW3J,IADe,KAE1Bb,MAAOa,IAFmB,OAG1B4J,SAAU5J,IAHgB,KAI1B8F,UAAW9F,IAJe,OAK1B+W,KAAM/W,IALoB,OAM1B6J,UAAW7J,IANe,OAO1B8J,UAAW9J,IAPe,OAQ1B+J,WAAY/J,IARc,KAS1BgK,YAAahK,IATa,OAU1BnE,MAAOmE,IAVmB,OAW1B+M,SAAU/M,IAXgB,KAY1Bgd,UAAWhd,IAZe,KAa1BsK,cAAetK,IAbW,QAc1BuK,eAAgBvK,IAdU,QAe1BiqB,QAASjqB,IAfiB,KAgB1BjC,OAAQiC,IAhBkB,KAiB1B4rB,QAAS5rB,IAjBiB,KAkB1B0M,QAAS1M,IAlBiB,KAmB1BrC,SAAUqC,IAnBgB,KAoB1BiK,SAAUjK,IApBgB,KAqB1BmM,QAASnM,IArBiB,KAsB1BqK,UAAWrK,IAtBe,KAuB1BkK,KAAMlK,IAvBoB,OA2B1B+F,SAAU/F,IA3BgB,IA+B1BsQ,KAAMtQ,IA/BoB,IAgC1BwQ,gBAAiBxQ,IAAUmN,QC1P7B,IAAM2rB,GAAc,SAAC,GAAD,kBAClBnvB,OADkB,mBAElBxK,OAFkB,wBAGlByK,OAHkB,uBAIlB9D,OAJkB,oBAKlBiR,OALkB,yBAMlBlN,OANkB,0BAOlBC,OAPkB,yBAQlBC,OARkB,SASlBC,EATkB,4BAUlBgT,OAVkB,MAUN,wBAVM,cAWlB7Q,OAXkB,MAWR,wBAXQ,eAYlBY,OAZkB,MAYP,wBAZO,cAalBkd,OAbkB,MAaR,wBAbQ,aAclBlsB,OAdkB,MAcT,wBAdS,cAelB6tB,OAfkB,MAeR,wBAfQ,cAgBlBlf,OAhBkB,MAgBR,wBAhBQ,YAiBlB7Q,OAjBkB,wBAkBlB8B,OAlBkB,sBAmBlBsM,OAnBkB,sBAoBlBlE,OApBkB,sBAqBlBmE,OArBkB,6BAsBlBG,OAtBkB,2BAuBlBC,OAvBkB,gCAwBlBC,OAxBkB,sBAyBlB+F,OAzBkB,MAyBX0c,EAzBW,4BA0BlBxc,QA1BkB,2BA2BlBH,QA3BkB,8BA4BlB6Z,QA5BkB,aA6Bfld,GA7Be,8UA+BlB,wCAEErC,aAAYqC,kBAFd,aAGErD,UAHF,EAIE7D,UAJF,EAKEuE,UALF,EAMET,SANF,EAOEG,WAPF,EAQEpM,SARF,EASEoI,SATF,EAUEuE,cAVF,EAWEgG,KAXF,EAYEzG,UAZF,EAaEC,UAbF,EAcEiN,KAdF,EAeEhZ,OAfF,EAgBEgP,SAhBF,EAiBEZ,QAjBF,EAkBE8d,QAlBF,EAmBEjN,UAnBF,EAoBEtQ,QApBF,EAqBEkf,QArBF,EAsBEvb,KAtBF,GAuBErG,YAvBF,EAwBEwG,gBAxBF,GAyBEvG,SAzBF,EA0BEM,eA1BF,EA2BEpL,MA3BF,EA4BE+K,KA5BF,EA6BEggB,UA7BF,GA8BEruB,MAAOA,MAILsuB,GAAa,CAEjBxgB,UAAW3J,6BAFM,wCAMjBb,MAAOa,+BANU,gCAUjB4J,SAAU5J,6BAVO,6CAcjB8F,UAAW9F,+BAdM,aAgBjB+W,KAAM/W,+BAhBW,2BAoBjB6J,UAAW7J,+BApBM,iCAwBjB8J,UAAW9J,+BAxBM,iCA4BjB+J,WAAY/J,6BA5BK,0EAkCjBgK,YAAahK,6BAlCI,uCAwCjBgd,UAAWhd,6BAxCM,mEA8CjBmM,QAASnM,6BA9CQ,sEAoDjB+M,SAAU/M,6BApDO,mEA0DjBiqB,QAASjqB,6BA1DQ,sEAgEjBjC,OAAQiC,6BAhES,uEAsEjB4rB,QAAS5rB,6BAtEQ,qEA4EjB0M,QAAS1M,6BA5EQ,yFAkFjBnE,MAAOmE,+BAlFU,mDAwFjBrC,SAAUqC,6BAxFO,2CA8FjBiK,SAAUjK,6BA9FO,8CAiGjB+F,SAAU,sBAAoB,CAC5B/F,YAD4B,KAE5B,kBAAgB,CAAEkgB,QAASlgB,YAAUmX,QAF7B,YAjGO,8CAwGjBjN,KAAMlK,+BAxGW,6BA4GjBqK,UAAWrK,6BA5GM,8CAkHjBsK,cAAetK,6BAlHE,wDAwHjBuK,eAAgBvK,6BAxHC,wDA+HjBsQ,KAAMtQ,sBAAoB,CACxBA,YADwB,MAExBA,YAFwB,OAGxBA,YAHIA,mBA/HW,iJA0IjBqQ,KAAMrQ,6BA1IW,sDAgJjBkqB,UAAWlqB,+BAhJM,oCAqJjBwQ,gBAAiBxQ,kLAQnB84B,gBAE8B14B,mCAA9B,oCAGA24B,aCzOA,IAEaC,GAAqBlgB,mBAFlC,gB,6kBCUO,SAASmgB,GAAen9B,GAC7B,OAAOA,EAAA,KAAY,SAAAo9B,GAAE,uBAAche,SAAS,O,ICHxCrd,GAAkB,SAAC,GAanB,QAZJ+L,gBAYI,aAXJ/N,aAWI,WAXIsE,EAWJ,MAVJ6J,mBAUI,MAVU,aAUV,MATJsG,YASI,MATG,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,IAAK,KAAM,KAAM,KAAM,MASzD,MARJvS,cAQI,MARK,wBAQL,MAPJgP,gBAOI,MAPO,wBAOP,MANJxP,gBAMI,MANO,wBAMP,MALJiC,sBAKI,MALa,GAKb,MAHJ25B,0BAGI,MAHiB,qCAGjB,MAFJC,mBAEI,MAFU,EAEV,MADJt9B,eACI,MADM,GACN,EACEkL,EAAM/K,iBAAZ,MADI,EAE4BC,qBAF5B,mBAEGm9B,EAFH,KAEgBC,EAFhB,OAGsBp9B,oBAHtB,sBAGG0gB,EAHH,KAGW2c,EAHX,OAI0Br9B,oBAJ1B,sBAIG28B,EAJH,KAIantB,EAJb,OAKkCxP,oBALlC,sBAKGs9B,EALH,KAKiBC,EALjB,OAM8Bv9B,oBAN9B,sBAMGw9B,EANH,KAMeC,EANf,KAQJh9B,qBAAU,WACJ68B,GAAgBJ,GAAeC,EAA/BG,SAAJ,GACED,MACA7tB,SACUmtB,GAAYO,EAAcC,EAA/B,SACLE,QAED,CAACC,EAAcX,EAAUO,EAP5Bz8B,IAQAA,qBAAU,WACR28B,EAASz9B,GAATy9B,MACC,CAFH38B,IAIA,ID3CmCwe,EC2C7Bye,EAAgBpW,uBAAY,YAChC8V,EAASv8B,SAATu8B,OACA/7B,EAASR,SAATQ,OACAo8B,QAHF,IAMME,EAAerW,uBAAY,WAC/BiW,QADF,IAIMK,EAActW,uBAClB,YACEiW,MACA17B,OAEF,CALF,IAOMmlB,EAAUM,uBAAY,WAC1B9X,QADF,IAGMquB,GAAevW,uBAAY,YAC/B8V,EAAS9b,EAAT8b,OACAvsB,KACA4sB,MACA3yB,kBACAuyB,MACArW,MANF,IAQA,OACE,uBACE,uBACEtG,OAAQA,GAAU9gB,SADpB,EAEEkpB,UAAW,CAAElf,UAAW,qBAExBod,QAJF,EAKEF,iBALF,GAMElnB,QACEA,aDhF2Bqf,ECgF3Brf,ED/ED,CACL+F,GADK,YAELqI,KAFK,WAGLiR,MAHK,EAILD,SAJK,EAKL,iBALK,EAMLpV,UANK,aAOLxI,UAAW,KCwELxB,mBAGSm9B,GAHTn9B,KAKI,GAINihB,iBACE,sBACEnT,SADF,EAEE7D,SAFF,EAGEuK,KAAMA,GAHR,GAIEvS,OAJF,EAKEgP,SALF,EAMEkd,QANF,EAOEjgB,YAPF,EAQEnO,MAAOw9B,QAQbW,GAAqB,CACzBl0B,UAAW9F,+BADc,wBAEzBR,eAAgBQ,+BAFS,oDAKzB4J,SAAU5J,gEALe,GAMzBnE,MAAOmE,sBAAoB,CACzBA,YADyB,OAEzBA,YAFyB,OAGzBA,YAHKA,oCANkB,WAWzBjC,OAAQiC,6BAXiB,2BAYzB+M,SAAU/M,6BAZe,6BAazBlE,QAAS,oBACP,kBAAgB,CACdqf,MAAOnb,sBAAoB,CAACA,YAAD,OAAmBA,YADhC,SAEdnE,MAAOmE,sBAAoB,CAACA,YAAD,OAAmBA,YAAvCA,YAHF,YAbgB,sBAmBzBgK,YAAahK,iEAnBY,cAsBzBsQ,KAAMtQ,oBAAkBA,YAAlBA,sDAtBmB,sDA2BzBzC,SAAUyC,6BA3Be,4BA4BzBi6B,UAAWj6B,kEA5Bc,cA+BzBm5B,mBAAoBn5B,mEA/BK,sCAkCzBo5B,YAAap5B,kEAGfnC,gBAEgCuC,mBAASvC,IACzCq8B,a","file":"static/js/41.90c52df8.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { throttle } from 'lodash';\nimport { useExecutionTimer } from '@elliemae/ds-utilities/hooks';\n\nfunction usePopoverProviderState({\n  initialState = {\n    reference: null,\n    visible: false,\n    value: '',\n    options: {},\n  },\n  delay,\n}) {\n  const triggerRef = useRef();\n  const [tooltipState, setTooltipState] = useState(initialState);\n\n  const show = state => {\n    setTooltipState(prevState => ({\n      ...prevState,\n      ...state,\n      visible: true,\n    }));\n  };\n  const hide = state => {\n    setTooltipState(prevState => ({\n      ...prevState,\n      ...state,\n      visible: false,\n    }));\n  };\n\n  const [showTooltip, hideTooltip] = useExecutionTimer(show, hide, delay);\n\n  const handleShowTooltip = (state, e) => {\n    triggerRef.current = e.target;\n    showTooltip({ ...state, reference: e.target });\n  };\n\n  const handleHideTooltip = state => {\n    hideTooltip(state);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', throttle(handleHideTooltip, 300), true);\n    window.addEventListener('click', handleHideTooltip, true);\n    return () => {\n      window.removeEventListener(\n        'scroll',\n        throttle(handleHideTooltip, 300),\n        true,\n      );\n      window.addEventListener('click', handleHideTooltip, true);\n    };\n  }, [tooltipState.reference]);\n\n  return {\n    show: handleShowTooltip,\n    hide: handleHideTooltip,\n    state: tooltipState,\n  };\n}\n\nexport default usePopoverProviderState;\n","import React, { useState, memo } from \"react\";\nimport DSZipCodeSearch from \"@elliemae/ds-basic/dszipcodesearch\";\nimport DSFormItemLayout from \"@elliemae/ds-basic/form/FormItem\";\n\nconst Component = () => {\n  const [value, setValue] = useState();\n  const [search, setSearch] = useState('');\n  const defaultOptions = [];\n  const handleOnBlur = () => console.log('Access onBlur function');\n  return (\n    <div>\n      <DSFormItemLayout\n        extraInputProps={{\n          tabIndex: 14,\n          onSearch: v => setSearch(v),\n          options: search.includes('11') ? [] : defaultOptions,\n        }}\n        feedbackMessage=\"Some feedback from de user...\"\n        hasError={search.includes('11')}\n        inputComponent={DSZipCodeSearch}\n        labelText=\"Input search\"\n        onBlur={handleOnBlur}\n        validationMessage={search.includes('11') ? 'No matches found' : null}\n        value={value}\n      />\n    </div>\n  );\n};\nexport default memo(Component)\n","/* eslint-disable react/prop-types */\nimport React, { useMemo, useState } from 'react';\nimport DSPopover, { usePopoverProviderState } from '../Popover';\n\nexport const TruncatedTooltipContext = React.createContext();\n\nconst { Provider } = TruncatedTooltipContext;\n\nfunction TooltipTextProvider({\n  children,\n  tooltipDelay = 200,\n  placement = 'top',\n  ...tooltipOptions\n}) {\n  const {\n    show: showTooltip,\n    hide: hideTooltip,\n    state: tooltipState,\n  } = usePopoverProviderState({ delay: tooltipDelay });\n  const [zIndex, setZIndex] = useState(110);\n\n  const value = useMemo(\n    () => ({\n      showTooltip,\n      hideTooltip,\n      setZIndex,\n    }),\n    [],\n  );\n\n  return (\n    <Provider value={value}>\n      {children}\n      {tooltipState.visible ? (\n        <DSPopover\n          boundaries=\"window\"\n          placement={placement}\n          showArrow\n          {...tooltipOptions}\n          {...(tooltipState.options || {})}\n          content={tooltipState.value}\n          referenceEl={tooltipState.reference}\n          style={{ pointerEvents: 'none', zIndex }}\n          visible={tooltipState.visible}\n        />\n      ) : null}\n    </Provider>\n  );\n}\n\nTooltipTextProvider.propTypes = {};\nTooltipTextProvider.defaultProps = {};\n\nexport default TooltipTextProvider;\n","import React, { useContext, useEffect } from 'react';\nimport { describe, PropTypes } from 'react-desc';\nimport styled from 'styled-components';\nimport { PopperPositions as positions } from '../Popper';\nimport { TruncatedTooltipContext } from './TooltipTextProvider';\n\nconst isEllipsisActive = ({ offsetWidth, scrollWidth }) =>\n  offsetWidth < scrollWidth;\n\n// reduce the possibility of error showing the tooltip (text-overflow: ellipsis) https://jira.elliemae.io/browse/PUI-1755\nconst Text = styled.span`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: inline-block;\n  max-width: 100%;\n`;\n\nconst DSTruncatedTooltipText = ({\n  containerProps = {},\n  value = '',\n  zIndex = 110, // https://jira.elliemae.io/browse/PUI-1755\n  ...otherTextProps\n}) => {\n  const tooltipContext = useContext(TruncatedTooltipContext);\n  useEffect(() => {\n    if (zIndex && tooltipContext) tooltipContext.setZIndex(zIndex);\n  }, [zIndex]);\n\n  if (!tooltipContext) return value;\n\n  const { showTooltip, hideTooltip } = tooltipContext;\n\n  const handleMouseEnter = (e) => {\n    const { target } = e;\n    if (target && isEllipsisActive(target, target.getBoundingClientRect())) {\n      showTooltip(\n        {\n          value,\n          reference: target,\n        },\n        e,\n      );\n    }\n  };\n\n  const handleMouseLeave = (e) => {\n    hideTooltip({ reference: e.target });\n  };\n\n  const handlers = showTooltip\n    ? { onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave }\n    : {};\n  return (\n    <Text {...containerProps} {...otherTextProps} {...handlers}>\n      {value}\n    </Text>\n  );\n};\n\nconst truncatedTooltipTextProps = {\n  containerProps: PropTypes.object.description(\n    'Set of Properties attached to the main container',\n  ),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).description(\n    'Text that when truncated will trigger the tooltip interaction',\n  ),\n  tooltipPlacement: PropTypes.oneOf([\n    positions.AUTO_START,\n    positions.AUTO_END,\n    positions.AUTO,\n    positions.TOP_START,\n    positions.TOP,\n    positions.TOP_END,\n    positions.RIGHT_START,\n    positions.RIGHT,\n    positions.RIGHT_END,\n    positions.BOTTOM_START,\n    positions.BOTTOM,\n    positions.BOTTOM_END,\n    positions.LEFT_START,\n    positions.LEFT,\n    positions.LEFT_END,\n  ]).description('Position of the tooltip'),\n  tooltipDelay: PropTypes.number.description('Delay to show the tooltip'),\n  zIndex: PropTypes.number\n    .description('override default zIndex')\n    .defaultValue(110),\n};\n\nDSTruncatedTooltipText.defaultProps = {\n  containerProps: {},\n  value: '',\n  tooltipPlacement: undefined,\n  tooltipDelay: undefined,\n};\n\nDSTruncatedTooltipText.propTypes = truncatedTooltipTextProps;\n\nconst TruncatedTooltipTextWithSchema = describe(DSTruncatedTooltipText);\nTruncatedTooltipTextWithSchema.propTypes = truncatedTooltipTextProps;\n\nexport { TruncatedTooltipTextWithSchema };\nexport default DSTruncatedTooltipText;\n","import { useRef, useState } from 'react';\nimport { isEqual, isFunction } from '../utils';\n\nconst defaultPropUpdateOnChange = prop => prop;\n\nfunction defaultShouldUpdate({ prop, prevProp, stateValue }) {\n  return !isEqual(prop, prevProp) && !isEqual(prop, stateValue);\n}\n\nfunction setStateWithUpdate(onUpdate, setState) {\n  return state => {\n    setState(prevState =>\n      onUpdate(isFunction(state) ? state(prevState) : state, prevState),\n    );\n  };\n}\n\nexport default function useDerivedStateFromProp(prop, options = {}) {\n  const {\n    onUpdate = defaultPropUpdateOnChange,\n    shouldUpdate = defaultShouldUpdate,\n    updateOnStateChange = false,\n  } = options;\n\n  const [stateValue, setState] = useState(onUpdate(prop, {}));\n  const handleSetState = updateOnStateChange\n    ? setStateWithUpdate(onUpdate, setState)\n    : setState;\n  const prevProp = useRef(prop);\n\n  if (\n    shouldUpdate({\n      prop,\n      prevProp: prevProp.current,\n      stateValue,\n    })\n  ) {\n    const nextProp = onUpdate(prop, prevProp.current);\n    setState(nextProp);\n  }\n  prevProp.current = prop;\n  return [stateValue, handleSetState];\n}\n","// @flow\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\n\nconst hasNativePerformanceNow =\n  typeof performance === 'object' && typeof performance.now === 'function';\n\nconst now = hasNativePerformanceNow\n  ? () => performance.now()\n  : () => Date.now();\n\nexport type TimeoutID = {|\n  id: AnimationFrameID,\n|};\n\nexport function cancelTimeout(timeoutID: TimeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\n\nexport function requestTimeout(callback: Function, delay: number): TimeoutID {\n  const start = now();\n\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n\n  const timeoutID: TimeoutID = {\n    id: requestAnimationFrame(tick),\n  };\n\n  return timeoutID;\n}\n","// @flow\n\nlet size: number = -1;\n\n// This utility copied from \"dom-helpers\" package.\nexport function getScrollbarSize(recalculate?: boolean = false): number {\n  if (size === -1 || recalculate) {\n    const div = document.createElement('div');\n    const style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n\n    ((document.body: any): HTMLBodyElement).appendChild(div);\n\n    size = div.offsetWidth - div.clientWidth;\n\n    ((document.body: any): HTMLBodyElement).removeChild(div);\n  }\n\n  return size;\n}\n\nexport type RTLOffsetType =\n  | 'negative'\n  | 'positive-descending'\n  | 'positive-ascending';\n\nlet cachedRTLResult: RTLOffsetType | null = null;\n\n// TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\nexport function getRTLOffsetType(recalculate?: boolean = false): RTLOffsetType {\n  if (cachedRTLResult === null || recalculate) {\n    const outerDiv = document.createElement('div');\n    const outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n\n    const innerDiv = document.createElement('div');\n    const innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n\n    outerDiv.appendChild(innerDiv);\n\n    ((document.body: any): HTMLBodyElement).appendChild(outerDiv);\n\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n\n    ((document.body: any): HTMLBodyElement).removeChild(outerDiv);\n\n    return cachedRTLResult;\n  }\n\n  return cachedRTLResult;\n}\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getScrollbarSize, getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\ntype Direction = 'ltr' | 'rtl';\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n\ntype RenderComponentProps<T> = {|\n  columnIndex: number,\n  data: T,\n  isScrolling?: boolean,\n  rowIndex: number,\n  style: Object,\n|};\nexport type RenderComponent<T> = React$ComponentType<\n  $Shape<RenderComponentProps<T>>\n>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype OnItemsRenderedCallback = ({\n  overscanColumnStartIndex: number,\n  overscanColumnStopIndex: number,\n  overscanRowStartIndex: number,\n  overscanRowStopIndex: number,\n  visibleColumnStartIndex: number,\n  visibleColumnStopIndex: number,\n  visibleRowStartIndex: number,\n  visibleRowStopIndex: number,\n}) => void;\ntype OnScrollCallback = ({\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [key: string]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  columnCount: number,\n  columnWidth: itemSize,\n  direction: Direction,\n  height: number,\n  initialScrollLeft?: number,\n  initialScrollTop?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemData: T,\n  itemKey?: (params: {|\n    columnIndex: number,\n    data: T,\n    rowIndex: number,\n  |}) => any,\n  onItemsRendered?: OnItemsRenderedCallback,\n  onScroll?: OnScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanColumnCount?: number,\n  overscanColumnsCount?: number, // deprecated\n  overscanCount?: number, // deprecated\n  overscanRowCount?: number,\n  overscanRowsCount?: number, // deprecated\n  rowCount: number,\n  rowHeight: itemSize,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  horizontalScrollDirection: ScrollDirection,\n  scrollLeft: number,\n  scrollTop: number,\n  scrollUpdateWasRequested: boolean,\n  verticalScrollDirection: ScrollDirection,\n|};\n\ntype getItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype getEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForItemAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any,\n  scrollbarSize: number\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = ({ columnIndex, data, rowIndex }) =>\n  `${rowIndex}:${columnIndex}`;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsOverscanCount = null;\nlet devWarningsOverscanRowsColumnsCount = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = new WeakSet();\n    devWarningsOverscanRowsColumnsCount = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createGridComponent({\n  getColumnOffset,\n  getColumnStartIndexForOffset,\n  getColumnStopIndexForStartIndex,\n  getColumnWidth,\n  getEstimatedTotalHeight,\n  getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment,\n  getOffsetForRowAndAlignment,\n  getRowHeight,\n  getRowOffset,\n  getRowStartIndexForOffset,\n  getRowStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getColumnOffset: getItemOffset,\n  getColumnStartIndexForOffset: GetStartIndexForOffset,\n  getColumnStopIndexForStartIndex: GetStopIndexForStartIndex,\n  getColumnWidth: getItemSize,\n  getEstimatedTotalHeight: getEstimatedTotalSize,\n  getEstimatedTotalWidth: getEstimatedTotalSize,\n  getOffsetForColumnAndAlignment: GetOffsetForItemAndAlignment,\n  getOffsetForRowAndAlignment: GetOffsetForItemAndAlignment,\n  getRowOffset: getItemOffset,\n  getRowHeight: getItemSize,\n  getRowStartIndexForOffset: GetStartIndexForOffset,\n  getRowStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class Grid<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n    _outerRef: ?HTMLDivElement;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      horizontalScrollDirection: 'forward',\n      scrollLeft:\n        typeof this.props.initialScrollLeft === 'number'\n          ? this.props.initialScrollLeft\n          : 0,\n      scrollTop:\n        typeof this.props.initialScrollTop === 'number'\n          ? this.props.initialScrollTop\n          : 0,\n      scrollUpdateWasRequested: false,\n      verticalScrollDirection: 'forward',\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo({\n      scrollLeft,\n      scrollTop,\n    }: {\n      scrollLeft: number,\n      scrollTop: number,\n    }): void {\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n\n      this.setState(prevState => {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          return null;\n        }\n\n        return {\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem({\n      align = 'auto',\n      columnIndex,\n      rowIndex,\n    }: {\n      align: ScrollToAlign,\n      columnIndex?: number,\n      rowIndex?: number,\n    }): void {\n      const { columnCount, height, rowCount, width } = this.props;\n      const { scrollLeft, scrollTop } = this.state;\n      const scrollbarSize = getScrollbarSize();\n\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      const horizontalScrollbarSize =\n        estimatedTotalWidth > width ? scrollbarSize : 0;\n      const verticalScrollbarSize =\n        estimatedTotalHeight > height ? scrollbarSize : 0;\n\n      this.scrollTo({\n        scrollLeft:\n          columnIndex !== undefined\n            ? getOffsetForColumnAndAlignment(\n                this.props,\n                columnIndex,\n                align,\n                scrollLeft,\n                this._instanceProps,\n                verticalScrollbarSize\n              )\n            : scrollLeft,\n        scrollTop:\n          rowIndex !== undefined\n            ? getOffsetForRowAndAlignment(\n                this.props,\n                rowIndex,\n                align,\n                scrollTop,\n                this._instanceProps,\n                horizontalScrollbarSize\n              )\n            : scrollTop,\n      });\n    }\n\n    componentDidMount() {\n      const { initialScrollLeft, initialScrollTop } = this.props;\n\n      if (this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction } = this.props;\n      const { scrollLeft, scrollTop, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n            default:\n              const { clientWidth, scrollWidth } = outerRef;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        columnCount,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemData,\n        itemKey = defaultItemKey,\n        outerElementType,\n        outerTagName,\n        rowCount,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      const [\n        columnStartIndex,\n        columnStopIndex,\n      ] = this._getHorizontalRangeToRender();\n      const [rowStartIndex, rowStopIndex] = this._getVerticalRangeToRender();\n\n      const items = [];\n      if (columnCount > 0 && rowCount) {\n        for (\n          let rowIndex = rowStartIndex;\n          rowIndex <= rowStopIndex;\n          rowIndex++\n        ) {\n          for (\n            let columnIndex = columnStartIndex;\n            columnIndex <= columnStopIndex;\n            columnIndex++\n          ) {\n            items.push(\n              createElement(children, {\n                columnIndex,\n                data: itemData,\n                isScrolling: useIsScrolling ? isScrolling : undefined,\n                key: itemKey({ columnIndex, data: itemData, rowIndex }),\n                rowIndex,\n                style: this._getItemStyle(rowIndex, columnIndex),\n              })\n            );\n          }\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalHeight = getEstimatedTotalHeight(\n        this.props,\n        this._instanceProps\n      );\n      const estimatedTotalWidth = getEstimatedTotalWidth(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll: this._onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: estimatedTotalHeight,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: estimatedTotalWidth,\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanColumnStartIndex: number,\n      overscanColumnStopIndex: number,\n      overscanRowStartIndex: number,\n      overscanRowStopIndex: number,\n      visibleColumnStartIndex: number,\n      visibleColumnStopIndex: number,\n      visibleRowStartIndex: number,\n      visibleRowStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanColumnStartIndex: number,\n        overscanColumnStopIndex: number,\n        overscanRowStartIndex: number,\n        overscanRowStopIndex: number,\n        visibleColumnStartIndex: number,\n        visibleColumnStopIndex: number,\n        visibleRowStartIndex: number,\n        visibleRowStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): OnItemsRenderedCallback)({\n          overscanColumnStartIndex,\n          overscanColumnStopIndex,\n          overscanRowStartIndex,\n          overscanRowStopIndex,\n          visibleColumnStartIndex,\n          visibleColumnStopIndex,\n          visibleRowStartIndex,\n          visibleRowStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollLeft: number,\n      scrollTop: number,\n      horizontalScrollDirection: ScrollDirection,\n      verticalScrollDirection: ScrollDirection,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollLeft: number,\n        scrollTop: number,\n        horizontalScrollDirection: ScrollDirection,\n        verticalScrollDirection: ScrollDirection,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): OnScrollCallback)({\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          verticalScrollDirection,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      const { columnCount, onItemsRendered, onScroll, rowCount } = this.props;\n\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          const [\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n          ] = this._getHorizontalRangeToRender();\n          const [\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex,\n          ] = this._getVerticalRangeToRender();\n          this._callOnItemsRendered(\n            overscanColumnStartIndex,\n            overscanColumnStopIndex,\n            overscanRowStartIndex,\n            overscanRowStopIndex,\n            visibleColumnStartIndex,\n            visibleColumnStopIndex,\n            visibleRowStartIndex,\n            visibleRowStopIndex\n          );\n        }\n      }\n\n      if (typeof onScroll === 'function') {\n        const {\n          horizontalScrollDirection,\n          scrollLeft,\n          scrollTop,\n          scrollUpdateWasRequested,\n          verticalScrollDirection,\n        } = this.state;\n        this._callOnScroll(\n          scrollLeft,\n          scrollTop,\n          horizontalScrollDirection,\n          verticalScrollDirection,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (rowIndex: number, columnIndex: number) => Object;\n    _getItemStyle = (rowIndex: number, columnIndex: number): Object => {\n      const { columnWidth, direction, rowHeight } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && columnWidth,\n        shouldResetStyleCacheOnItemSizeChange && direction,\n        shouldResetStyleCacheOnItemSizeChange && rowHeight\n      );\n\n      const key = `${rowIndex}:${columnIndex}`;\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(key)) {\n        style = itemStyleCache[key];\n      } else {\n        const offset = getColumnOffset(\n          this.props,\n          columnIndex,\n          this._instanceProps\n        );\n        const isRtl = direction === 'rtl';\n        itemStyleCache[key] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offset,\n          right: isRtl ? offset : undefined,\n          top: getRowOffset(this.props, rowIndex, this._instanceProps),\n          height: getRowHeight(this.props, rowIndex, this._instanceProps),\n          width: getColumnWidth(this.props, columnIndex, this._instanceProps),\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getHorizontalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanColumnCount,\n        overscanColumnsCount,\n        overscanCount,\n        rowCount,\n      } = this.props;\n      const { horizontalScrollDirection, isScrolling, scrollLeft } = this.state;\n\n      const overscanCountResolved: number =\n        overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getColumnStartIndexForOffset(\n        this.props,\n        scrollLeft,\n        this._instanceProps\n      );\n      const stopIndex = getColumnStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollLeft,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || horizontalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || horizontalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _getVerticalRangeToRender(): [number, number, number, number] {\n      const {\n        columnCount,\n        overscanCount,\n        overscanRowCount,\n        overscanRowsCount,\n        rowCount,\n      } = this.props;\n      const { isScrolling, verticalScrollDirection, scrollTop } = this.state;\n\n      const overscanCountResolved: number =\n        overscanRowCount || overscanRowsCount || overscanCount || 1;\n\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getRowStartIndexForOffset(\n        this.props,\n        scrollTop,\n        this._instanceProps\n      );\n      const stopIndex = getRowStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollTop,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || verticalScrollDirection === 'backward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n      const overscanForward =\n        !isScrolling || verticalScrollDirection === 'forward'\n          ? Math.max(1, overscanCountResolved)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScroll = (event: ScrollEvent): void => {\n      const {\n        clientHeight,\n        clientWidth,\n        scrollLeft,\n        scrollTop,\n        scrollHeight,\n        scrollWidth,\n      } = event.currentTarget;\n      this.setState(prevState => {\n        if (\n          prevState.scrollLeft === scrollLeft &&\n          prevState.scrollTop === scrollTop\n        ) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n        // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n        let calculatedScrollLeft = scrollLeft;\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              calculatedScrollLeft = -scrollLeft;\n              break;\n            case 'positive-descending':\n              calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        calculatedScrollLeft = Math.max(\n          0,\n          Math.min(calculatedScrollLeft, scrollWidth - clientWidth)\n        );\n        const calculatedScrollTop = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          horizontalScrollDirection:\n            prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: calculatedScrollLeft,\n          scrollTop: calculatedScrollTop,\n          verticalScrollDirection:\n            prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1);\n      });\n    };\n  };\n}\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    innerTagName,\n    outerTagName,\n    overscanColumnsCount,\n    overscanCount,\n    overscanRowsCount,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn(\n          'The overscanCount prop has been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (\n      typeof overscanColumnsCount === 'number' ||\n      typeof overscanRowsCount === 'number'\n    ) {\n      if (\n        devWarningsOverscanRowsColumnsCount &&\n        !devWarningsOverscanRowsColumnsCount.has(instance)\n      ) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn(\n          'The overscanColumnsCount and overscanRowsCount props have been deprecated. ' +\n            'Please use the overscanColumnCount and overscanRowCount props instead.'\n        );\n      }\n    }\n\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    if (typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Grids must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    }\n\n    if (typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Grids must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport { cancelTimeout, requestTimeout } from './timer';\nimport { getRTLOffsetType } from './domHelpers';\n\nimport type { TimeoutID } from './timer';\n\nexport type ScrollToAlign = 'auto' | 'smart' | 'center' | 'start' | 'end';\n\ntype itemSize = number | ((index: number) => number);\n// TODO Deprecate directions \"horizontal\" and \"vertical\"\ntype Direction = 'ltr' | 'rtl' | 'horizontal' | 'vertical';\ntype Layout = 'horizontal' | 'vertical';\n\ntype RenderComponentProps<T> = {|\n  data: T,\n  index: number,\n  isScrolling?: boolean,\n  style: Object,\n|};\ntype RenderComponent<T> = React$ComponentType<$Shape<RenderComponentProps<T>>>;\n\ntype ScrollDirection = 'forward' | 'backward';\n\ntype onItemsRenderedCallback = ({\n  overscanStartIndex: number,\n  overscanStopIndex: number,\n  visibleStartIndex: number,\n  visibleStopIndex: number,\n}) => void;\ntype onScrollCallback = ({\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n}) => void;\n\ntype ScrollEvent = SyntheticEvent<HTMLDivElement>;\ntype ItemStyleCache = { [index: number]: Object };\n\ntype OuterProps = {|\n  children: React$Node,\n  className: string | void,\n  onScroll: ScrollEvent => void,\n  style: {\n    [string]: mixed,\n  },\n|};\n\ntype InnerProps = {|\n  children: React$Node,\n  style: {\n    [string]: mixed,\n  },\n|};\n\nexport type Props<T> = {|\n  children: RenderComponent<T>,\n  className?: string,\n  direction: Direction,\n  height: number | string,\n  initialScrollOffset?: number,\n  innerRef?: any,\n  innerElementType?: string | React$AbstractComponent<InnerProps, any>,\n  innerTagName?: string, // deprecated\n  itemCount: number,\n  itemData: T,\n  itemKey?: (index: number, data: T) => any,\n  itemSize: itemSize,\n  layout: Layout,\n  onItemsRendered?: onItemsRenderedCallback,\n  onScroll?: onScrollCallback,\n  outerRef?: any,\n  outerElementType?: string | React$AbstractComponent<OuterProps, any>,\n  outerTagName?: string, // deprecated\n  overscanCount: number,\n  style?: Object,\n  useIsScrolling: boolean,\n  width: number | string,\n|};\n\ntype State = {|\n  instance: any,\n  isScrolling: boolean,\n  scrollDirection: ScrollDirection,\n  scrollOffset: number,\n  scrollUpdateWasRequested: boolean,\n|};\n\ntype GetItemOffset = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetItemSize = (\n  props: Props<any>,\n  index: number,\n  instanceProps: any\n) => number;\ntype GetEstimatedTotalSize = (props: Props<any>, instanceProps: any) => number;\ntype GetOffsetForIndexAndAlignment = (\n  props: Props<any>,\n  index: number,\n  align: ScrollToAlign,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype GetStartIndexForOffset = (\n  props: Props<any>,\n  offset: number,\n  instanceProps: any\n) => number;\ntype GetStopIndexForStartIndex = (\n  props: Props<any>,\n  startIndex: number,\n  scrollOffset: number,\n  instanceProps: any\n) => number;\ntype InitInstanceProps = (props: Props<any>, instance: any) => any;\ntype ValidateProps = (props: Props<any>) => void;\n\nconst IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\n\nconst defaultItemKey = (index: number, data: any) => index;\n\n// In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\nlet devWarningsDirection = null;\nlet devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = new WeakSet();\n    devWarningsTagName = new WeakSet();\n  }\n}\n\nexport default function createListComponent({\n  getItemOffset,\n  getEstimatedTotalSize,\n  getItemSize,\n  getOffsetForIndexAndAlignment,\n  getStartIndexForOffset,\n  getStopIndexForStartIndex,\n  initInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange,\n  validateProps,\n}: {|\n  getItemOffset: GetItemOffset,\n  getEstimatedTotalSize: GetEstimatedTotalSize,\n  getItemSize: GetItemSize,\n  getOffsetForIndexAndAlignment: GetOffsetForIndexAndAlignment,\n  getStartIndexForOffset: GetStartIndexForOffset,\n  getStopIndexForStartIndex: GetStopIndexForStartIndex,\n  initInstanceProps: InitInstanceProps,\n  shouldResetStyleCacheOnItemSizeChange: boolean,\n  validateProps: ValidateProps,\n|}) {\n  return class List<T> extends PureComponent<Props<T>, State> {\n    _instanceProps: any = initInstanceProps(this.props, this);\n    _outerRef: ?HTMLDivElement;\n    _resetIsScrollingTimeoutId: TimeoutID | null = null;\n\n    static defaultProps = {\n      direction: 'ltr',\n      itemData: undefined,\n      layout: 'vertical',\n      overscanCount: 2,\n      useIsScrolling: false,\n    };\n\n    state: State = {\n      instance: this,\n      isScrolling: false,\n      scrollDirection: 'forward',\n      scrollOffset:\n        typeof this.props.initialScrollOffset === 'number'\n          ? this.props.initialScrollOffset\n          : 0,\n      scrollUpdateWasRequested: false,\n    };\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    constructor(props: Props<T>) {\n      super(props);\n    }\n\n    static getDerivedStateFromProps(\n      nextProps: Props<T>,\n      prevState: State\n    ): $Shape<State> | null {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    }\n\n    scrollTo(scrollOffset: number): void {\n      scrollOffset = Math.max(0, scrollOffset);\n\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true,\n        };\n      }, this._resetIsScrollingDebounced);\n    }\n\n    scrollToItem(index: number, align: ScrollToAlign = 'auto'): void {\n      const { itemCount } = this.props;\n      const { scrollOffset } = this.state;\n\n      index = Math.max(0, Math.min(index, itemCount - 1));\n\n      this.scrollTo(\n        getOffsetForIndexAndAlignment(\n          this.props,\n          index,\n          align,\n          scrollOffset,\n          this._instanceProps\n        )\n      );\n    }\n\n    componentDidMount() {\n      const { direction, initialScrollOffset, layout } = this.props;\n\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentDidUpdate() {\n      const { direction, layout } = this.props;\n      const { scrollOffset, scrollUpdateWasRequested } = this.state;\n\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        const outerRef = ((this._outerRef: any): HTMLElement);\n\n        // TODO Deprecate direction \"horizontal\"\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n              default:\n                const { clientWidth, scrollWidth } = outerRef;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n\n      this._callPropsCallbacks();\n    }\n\n    componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    }\n\n    render() {\n      const {\n        children,\n        className,\n        direction,\n        height,\n        innerRef,\n        innerElementType,\n        innerTagName,\n        itemCount,\n        itemData,\n        itemKey = defaultItemKey,\n        layout,\n        outerElementType,\n        outerTagName,\n        style,\n        useIsScrolling,\n        width,\n      } = this.props;\n      const { isScrolling } = this.state;\n\n      // TODO Deprecate direction \"horizontal\"\n      const isHorizontal =\n        direction === 'horizontal' || layout === 'horizontal';\n\n      const onScroll = isHorizontal\n        ? this._onScrollHorizontal\n        : this._onScrollVertical;\n\n      const [startIndex, stopIndex] = this._getRangeToRender();\n\n      const items = [];\n      if (itemCount > 0) {\n        for (let index = startIndex; index <= stopIndex; index++) {\n          items.push(\n            createElement(children, {\n              data: itemData,\n              key: itemKey(index, itemData),\n              index,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              style: this._getItemStyle(index),\n            })\n          );\n        }\n      }\n\n      // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n      const estimatedTotalSize = getEstimatedTotalSize(\n        this.props,\n        this._instanceProps\n      );\n\n      return createElement(\n        outerElementType || outerTagName || 'div',\n        {\n          className,\n          onScroll,\n          ref: this._outerRefSetter,\n          style: {\n            position: 'relative',\n            height,\n            width,\n            overflow: 'auto',\n            WebkitOverflowScrolling: 'touch',\n            willChange: 'transform',\n            direction,\n            ...style,\n          },\n        },\n        createElement(innerElementType || innerTagName || 'div', {\n          children: items,\n          ref: innerRef,\n          style: {\n            height: isHorizontal ? '100%' : estimatedTotalSize,\n            pointerEvents: isScrolling ? 'none' : undefined,\n            width: isHorizontal ? estimatedTotalSize : '100%',\n          },\n        })\n      );\n    }\n\n    _callOnItemsRendered: (\n      overscanStartIndex: number,\n      overscanStopIndex: number,\n      visibleStartIndex: number,\n      visibleStopIndex: number\n    ) => void;\n    _callOnItemsRendered = memoizeOne(\n      (\n        overscanStartIndex: number,\n        overscanStopIndex: number,\n        visibleStartIndex: number,\n        visibleStopIndex: number\n      ) =>\n        ((this.props.onItemsRendered: any): onItemsRenderedCallback)({\n          overscanStartIndex,\n          overscanStopIndex,\n          visibleStartIndex,\n          visibleStopIndex,\n        })\n    );\n\n    _callOnScroll: (\n      scrollDirection: ScrollDirection,\n      scrollOffset: number,\n      scrollUpdateWasRequested: boolean\n    ) => void;\n    _callOnScroll = memoizeOne(\n      (\n        scrollDirection: ScrollDirection,\n        scrollOffset: number,\n        scrollUpdateWasRequested: boolean\n      ) =>\n        ((this.props.onScroll: any): onScrollCallback)({\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        })\n    );\n\n    _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        const { itemCount } = this.props;\n        if (itemCount > 0) {\n          const [\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex,\n          ] = this._getRangeToRender();\n          this._callOnItemsRendered(\n            overscanStartIndex,\n            overscanStopIndex,\n            visibleStartIndex,\n            visibleStopIndex\n          );\n        }\n      }\n\n      if (typeof this.props.onScroll === 'function') {\n        const {\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested,\n        } = this.state;\n        this._callOnScroll(\n          scrollDirection,\n          scrollOffset,\n          scrollUpdateWasRequested\n        );\n      }\n    }\n\n    // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    _getItemStyle: (index: number) => Object;\n    _getItemStyle = (index: number): Object => {\n      const { direction, itemSize, layout } = this.props;\n\n      const itemStyleCache = this._getItemStyleCache(\n        shouldResetStyleCacheOnItemSizeChange && itemSize,\n        shouldResetStyleCacheOnItemSizeChange && layout,\n        shouldResetStyleCacheOnItemSizeChange && direction\n      );\n\n      let style;\n      if (itemStyleCache.hasOwnProperty(index)) {\n        style = itemStyleCache[index];\n      } else {\n        const offset = getItemOffset(this.props, index, this._instanceProps);\n        const size = getItemSize(this.props, index, this._instanceProps);\n\n        // TODO Deprecate direction \"horizontal\"\n        const isHorizontal =\n          direction === 'horizontal' || layout === 'horizontal';\n\n        const isRtl = direction === 'rtl';\n        const offsetHorizontal = isHorizontal ? offset : 0;\n        itemStyleCache[index] = style = {\n          position: 'absolute',\n          left: isRtl ? undefined : offsetHorizontal,\n          right: isRtl ? offsetHorizontal : undefined,\n          top: !isHorizontal ? offset : 0,\n          height: !isHorizontal ? size : '100%',\n          width: isHorizontal ? size : '100%',\n        };\n      }\n\n      return style;\n    };\n\n    _getItemStyleCache: (_: any, __: any, ___: any) => ItemStyleCache;\n    _getItemStyleCache = memoizeOne((_: any, __: any, ___: any) => ({}));\n\n    _getRangeToRender(): [number, number, number, number] {\n      const { itemCount, overscanCount } = this.props;\n      const { isScrolling, scrollDirection, scrollOffset } = this.state;\n\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n\n      const startIndex = getStartIndexForOffset(\n        this.props,\n        scrollOffset,\n        this._instanceProps\n      );\n      const stopIndex = getStopIndexForStartIndex(\n        this.props,\n        startIndex,\n        scrollOffset,\n        this._instanceProps\n      );\n\n      // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n      const overscanBackward =\n        !isScrolling || scrollDirection === 'backward'\n          ? Math.max(1, overscanCount)\n          : 1;\n      const overscanForward =\n        !isScrolling || scrollDirection === 'forward'\n          ? Math.max(1, overscanCount)\n          : 1;\n\n      return [\n        Math.max(0, startIndex - overscanBackward),\n        Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)),\n        startIndex,\n        stopIndex,\n      ];\n    }\n\n    _onScrollHorizontal = (event: ScrollEvent): void => {\n      const { clientWidth, scrollLeft, scrollWidth } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollLeft) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        const { direction } = this.props;\n\n        let scrollOffset = scrollLeft;\n        if (direction === 'rtl') {\n          // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              scrollOffset = -scrollLeft;\n              break;\n            case 'positive-descending':\n              scrollOffset = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        scrollOffset = Math.max(\n          0,\n          Math.min(scrollOffset, scrollWidth - clientWidth)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _onScrollVertical = (event: ScrollEvent): void => {\n      const { clientHeight, scrollHeight, scrollTop } = event.currentTarget;\n      this.setState(prevState => {\n        if (prevState.scrollOffset === scrollTop) {\n          // Scroll position may have been updated by cDM/cDU,\n          // In which case we don't need to trigger another render,\n          // And we don't want to update state.isScrolling.\n          return null;\n        }\n\n        // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n        const scrollOffset = Math.max(\n          0,\n          Math.min(scrollTop, scrollHeight - clientHeight)\n        );\n\n        return {\n          isScrolling: true,\n          scrollDirection:\n            prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset,\n          scrollUpdateWasRequested: false,\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n\n    _outerRefSetter = (ref: any): void => {\n      const { outerRef } = this.props;\n\n      this._outerRef = ((ref: any): HTMLDivElement);\n\n      if (typeof outerRef === 'function') {\n        outerRef(ref);\n      } else if (\n        outerRef != null &&\n        typeof outerRef === 'object' &&\n        outerRef.hasOwnProperty('current')\n      ) {\n        outerRef.current = ref;\n      }\n    };\n\n    _resetIsScrollingDebounced = () => {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n\n      this._resetIsScrollingTimeoutId = requestTimeout(\n        this._resetIsScrolling,\n        IS_SCROLLING_DEBOUNCE_INTERVAL\n      );\n    };\n\n    _resetIsScrolling = () => {\n      this._resetIsScrollingTimeoutId = null;\n\n      this.setState({ isScrolling: false }, () => {\n        // Clear style cache after state update has been committed.\n        // This way we don't break pure sCU for items that don't use isScrolling param.\n        this._getItemStyleCache(-1, null);\n      });\n    };\n  };\n}\n\n// NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nconst validateSharedProps = (\n  {\n    children,\n    direction,\n    height,\n    layout,\n    innerTagName,\n    outerTagName,\n    width,\n  }: Props<any>,\n  { instance }: State\n): void => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn(\n          'The innerTagName and outerTagName props have been deprecated. ' +\n            'Please use the innerElementType and outerElementType props instead.'\n        );\n      }\n    }\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn(\n            'The direction prop should be either \"ltr\" (default) or \"rtl\". ' +\n              'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.'\n          );\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"direction\" prop has been specified. ' +\n            'Value should be either \"ltr\" or \"rtl\". ' +\n            `\"${direction}\" was specified.`\n        );\n    }\n\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error(\n          'An invalid \"layout\" prop has been specified. ' +\n            'Value should be either \"horizontal\" or \"vertical\". ' +\n            `\"${layout}\" was specified.`\n        );\n    }\n\n    if (children == null) {\n      throw Error(\n        'An invalid \"children\" prop has been specified. ' +\n          'Value should be a React component. ' +\n          `\"${children === null ? 'null' : typeof children}\" was specified.`\n      );\n    }\n\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error(\n        'An invalid \"width\" prop has been specified. ' +\n          'Horizontal lists must specify a number for width. ' +\n          `\"${width === null ? 'null' : typeof width}\" was specified.`\n      );\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error(\n        'An invalid \"height\" prop has been specified. ' +\n          'Vertical lists must specify a number for height. ' +\n          `\"${height === null ? 'null' : typeof height}\" was specified.`\n      );\n    }\n  }\n};\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst DEFAULT_ESTIMATED_ITEM_SIZE = 50;\n\ntype VariableSizeProps = {|\n  estimatedItemSize: number,\n  ...Props<any>,\n|};\n\ntype itemSizeGetter = (index: number) => number;\n\ntype ItemMetadata = {|\n  offset: number,\n  size: number,\n|};\ntype InstanceProps = {|\n  itemMetadataMap: { [index: number]: ItemMetadata },\n  estimatedItemSize: number,\n  lastMeasuredIndex: number,\n|};\n\nconst getItemMetadata = (\n  props: Props<any>,\n  index: number,\n  instanceProps: InstanceProps\n): ItemMetadata => {\n  const { itemSize } = ((props: any): VariableSizeProps);\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  if (index > lastMeasuredIndex) {\n    let offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n\n    for (let i = lastMeasuredIndex + 1; i <= index; i++) {\n      let size = ((itemSize: any): itemSizeGetter)(i);\n\n      itemMetadataMap[i] = {\n        offset,\n        size,\n      };\n\n      offset += size;\n    }\n\n    instanceProps.lastMeasuredIndex = index;\n  }\n\n  return itemMetadataMap[index];\n};\n\nconst findNearestItem = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  offset: number\n) => {\n  const { itemMetadataMap, lastMeasuredIndex } = instanceProps;\n\n  const lastMeasuredItemOffset =\n    lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(\n      props,\n      instanceProps,\n      lastMeasuredIndex,\n      0,\n      offset\n    );\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(\n      props,\n      instanceProps,\n      Math.max(0, lastMeasuredIndex),\n      offset\n    );\n  }\n};\n\nconst findNearestItemBinarySearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  high: number,\n  low: number,\n  offset: number\n): number => {\n  while (low <= high) {\n    const middle = low + Math.floor((high - low) / 2);\n    const currentOffset = getItemMetadata(props, middle, instanceProps).offset;\n\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\n\nconst findNearestItemExponentialSearch = (\n  props: Props<any>,\n  instanceProps: InstanceProps,\n  index: number,\n  offset: number\n): number => {\n  const { itemCount } = props;\n  let interval = 1;\n\n  while (\n    index < itemCount &&\n    getItemMetadata(props, index, instanceProps).offset < offset\n  ) {\n    index += interval;\n    interval *= 2;\n  }\n\n  return findNearestItemBinarySearch(\n    props,\n    instanceProps,\n    Math.min(index, itemCount - 1),\n    Math.floor(index / 2),\n    offset\n  );\n};\n\nconst getEstimatedTotalSize = (\n  { itemCount }: Props<any>,\n  { itemMetadataMap, estimatedItemSize, lastMeasuredIndex }: InstanceProps\n) => {\n  let totalSizeOfMeasuredItems = 0;\n\n  // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n\n  if (lastMeasuredIndex >= 0) {\n    const itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n\n  const numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  const totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\n\nconst VariableSizeList = createListComponent({\n  getItemOffset: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => getItemMetadata(props, index, instanceProps).offset,\n\n  getItemSize: (\n    props: Props<any>,\n    index: number,\n    instanceProps: InstanceProps\n  ): number => instanceProps.itemMetadataMap[index].size,\n\n  getEstimatedTotalSize,\n\n  getOffsetForIndexAndAlignment: (\n    props: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, index, instanceProps);\n\n    // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n    const estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n\n    const maxOffset = Math.max(\n      0,\n      Math.min(estimatedTotalSize - size, itemMetadata.offset)\n    );\n    const minOffset = Math.max(\n      0,\n      itemMetadata.offset - size + itemMetadata.size\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    props: Props<any>,\n    offset: number,\n    instanceProps: InstanceProps\n  ): number => findNearestItem(props, instanceProps, offset),\n\n  getStopIndexForStartIndex: (\n    props: Props<any>,\n    startIndex: number,\n    scrollOffset: number,\n    instanceProps: InstanceProps\n  ): number => {\n    const { direction, height, itemCount, layout, width } = props;\n\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const itemMetadata = getItemMetadata(props, startIndex, instanceProps);\n    const maxOffset = scrollOffset + size;\n\n    let offset = itemMetadata.offset + itemMetadata.size;\n    let stopIndex = startIndex;\n\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata(props, stopIndex, instanceProps).size;\n    }\n\n    return stopIndex;\n  },\n\n  initInstanceProps(props: Props<any>, instance: any): InstanceProps {\n    const { estimatedItemSize } = ((props: any): VariableSizeProps);\n\n    const instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredIndex: -1,\n    };\n\n    instance.resetAfterIndex = (\n      index: number,\n      shouldForceUpdate?: boolean = true\n    ) => {\n      instanceProps.lastMeasuredIndex = Math.min(\n        instanceProps.lastMeasuredIndex,\n        index - 1\n      );\n\n      // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n      instance._getItemStyleCache(-1);\n\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n\n    return instanceProps;\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: false,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a function. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default VariableSizeList;\n","// @flow\n\nimport createListComponent from './createListComponent';\n\nimport type { Props, ScrollToAlign } from './createListComponent';\n\nconst FixedSizeList = createListComponent({\n  getItemOffset: ({ itemSize }: Props<any>, index: number): number =>\n    index * ((itemSize: any): number),\n\n  getItemSize: ({ itemSize }: Props<any>, index: number): number =>\n    ((itemSize: any): number),\n\n  getEstimatedTotalSize: ({ itemCount, itemSize }: Props<any>) =>\n    ((itemSize: any): number) * itemCount,\n\n  getOffsetForIndexAndAlignment: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    index: number,\n    align: ScrollToAlign,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const size = (((isHorizontal ? width : height): any): number);\n    const lastItemOffset = Math.max(\n      0,\n      itemCount * ((itemSize: any): number) - size\n    );\n    const maxOffset = Math.min(\n      lastItemOffset,\n      index * ((itemSize: any): number)\n    );\n    const minOffset = Math.max(\n      0,\n      index * ((itemSize: any): number) - size + ((itemSize: any): number)\n    );\n\n    if (align === 'smart') {\n      if (\n        scrollOffset >= minOffset - size &&\n        scrollOffset <= maxOffset + size\n      ) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center': {\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        const middleOffset = Math.round(\n          minOffset + (maxOffset - minOffset) / 2\n        );\n        if (middleOffset < Math.ceil(size / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n          return lastItemOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      }\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n\n  getStartIndexForOffset: (\n    { itemCount, itemSize }: Props<any>,\n    offset: number\n  ): number =>\n    Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(offset / ((itemSize: any): number)))\n    ),\n\n  getStopIndexForStartIndex: (\n    { direction, height, itemCount, itemSize, layout, width }: Props<any>,\n    startIndex: number,\n    scrollOffset: number\n  ): number => {\n    // TODO Deprecate direction \"horizontal\"\n    const isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    const offset = startIndex * ((itemSize: any): number);\n    const size = (((isHorizontal ? width : height): any): number);\n    const numVisibleItems = Math.ceil(\n      (size + scrollOffset - offset) / ((itemSize: any): number)\n    );\n    return Math.max(\n      0,\n      Math.min(\n        itemCount - 1,\n        startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n      )\n    );\n  },\n\n  initInstanceProps(props: Props<any>): any {\n    // Noop\n  },\n\n  shouldResetStyleCacheOnItemSizeChange: true,\n\n  validateProps: ({ itemSize }: Props<any>): void => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error(\n          'An invalid \"itemSize\" prop has been specified. ' +\n            'Value should be a number. ' +\n            `\"${itemSize === null ? 'null' : typeof itemSize}\" was specified.`\n        );\n      }\n    }\n  },\n});\n\nexport default FixedSizeList;\n","// @flow\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nexport default function shallowDiffers(prev: Object, next: Object): boolean {\n  for (let attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n  for (let attribute in next) {\n    if (prev[attribute] !== next[attribute]) {\n      return true;\n    }\n  }\n  return false;\n}\n","// @flow\n\nimport shallowDiffers from './shallowDiffers';\n\n// Custom comparison function for React.memo().\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\nexport default function areEqual(\n  prevProps: Object,\n  nextProps: Object\n): boolean {\n  const { style: prevStyle, ...prevRest } = prevProps;\n  const { style: nextStyle, ...nextRest } = nextProps;\n\n  return (\n    !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest)\n  );\n}\n","import React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport DSInput from '../Input';\n\nconst DSTextBox = ({\n  containerProps = {},\n  autoFocus = false,\n  disabled = false,\n  maxLength = 255,\n  minLength = 0,\n  fluidWidth = false,\n  placeholder,\n  value = '',\n  hasError = false,\n  readOnly = false,\n  innerRef = null,\n  type = 'text',\n  min = undefined,\n  max = undefined,\n  clearable = false,\n  leftComponent = null,\n  rightComponent = null,\n  required = false,\n  variant,\n  ...otherProps\n}) => (\n  <DSInput\n    {...otherProps}\n    aria-label={otherProps['aria-label'] || 'Text Box'}\n    autoFocus={autoFocus}\n    clearable={clearable}\n    containerProps={containerProps}\n    disabled={disabled}\n    fluidWidth={fluidWidth}\n    hasError={hasError}\n    innerRef={innerRef}\n    leftComponent={leftComponent}\n    max={max}\n    maxLength={maxLength}\n    min={min}\n    minLength={minLength}\n    placeholder={placeholder}\n    readOnly={readOnly}\n    required={required}\n    rightComponent={rightComponent}\n    role=\"textbox\"\n    type={type}\n    value={value}\n    variant={variant}\n  />\n);\n\nconst props = {\n  /** inject props at textbox wrapper */\n  containerProps: PropTypes.shape({}).description(\n    'inject props at textbox wrapper',\n  ),\n  /**\n   * Whether the text box uses auto focus or not\n   */\n  autoFocus: PropTypes.bool.description(\n    'Whether the text box uses auto focus or not',\n  ),\n  /**\n   * Whether the text box is disabled or not\n   */\n  disabled: PropTypes.bool.description(\n    'Whether the text box is disabled or not',\n  ),\n  /**\n   * Max length for the text box\n   */\n  maxLength: PropTypes.number.description('Max length for the text box'),\n  /**\n   * Min length for the text box\n   */\n  minLength: PropTypes.number.description('Min length for the text box'),\n  /**\n   * Make the content of the text box fit the container or not\n   */\n  fluidWidth: PropTypes.bool.description(\n    'Make the content of the text box fit the container or not',\n  ),\n  /**\n   * Placeholder for the text box\n   */\n  placeholder: PropTypes.string.description('Placeholder for the text box'),\n  /**\n   * Default value once the component is initialized\n   */\n  value: PropTypes.string.description(\n    'Default value once the component is initialized',\n  ),\n  /**\n   * Whether the text box has error or not\n   */\n  hasError: PropTypes.bool.description('Whether the text box has error or not'),\n  /**\n   * Whether the text box is read only or not\n   */\n  readOnly: PropTypes.bool.description(\n    'Whether the text box is read only or not',\n  ),\n  /** html min prop for input */\n  min: PropTypes.number.description('html min prop for input'),\n  /** html max prop for input */\n  max: PropTypes.number.description('html max prop for input'),\n  /**\n   * Whether the text box is clearable or not\n   */\n  clearable: PropTypes.bool.description(\n    'Whether the text box is clearable or not',\n  ),\n  /**\n   * Component to be added at the left side of the text box\n   */\n  leftComponent: PropTypes.element.description(\n    'Component to be added at the left side of the text box',\n  ),\n  /**\n   * Component to be added at the right side of the text box\n   */\n  rightComponent: PropTypes.element.description(\n    'Component to be added at the right side of the text box',\n  ),\n  /**\n   * Whether the text box is required or not\n   */\n  required: PropTypes.bool.description(\n    'Whether the text box is required or not',\n  ),\n  /**\n   * [\n   *  'variant-default',\n   *  'variant-focus',\n   *  'variant-active',\n   *  'variant-disabled',\n   * ]\n   */\n  variant: PropTypes.string.description(\n    \"variant-default','variant-focus','variant-active','variant-disabled'\",\n  ),\n  /** html input type */\n  type: PropTypes.string.description('html input type'),\n  /** Internal ref */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).description(\n    'internal ref',\n  ),\n};\n\nDSTextBox.propTypes = props;\n\nconst DSTextBoxWithSchema = describe(DSTextBox);\n\nDSTextBoxWithSchema.propTypes = props;\n\nexport default DSTextBox;\nexport { DSTextBoxWithSchema };\n","import { useContext, useEffect } from 'react';\nimport FocusGroupContext from './FocusGroupContext';\n\nexport default function useFocusGroupItem(ref = {}, props) {\n  const { register, unregister, ...otherActions } =\n    useContext(FocusGroupContext) || {};\n\n  useEffect(() => {\n    if (ref.current && register) register(ref.current, props);\n    return () => {\n      if (ref.current && unregister) unregister(ref.current);\n    };\n  });\n\n  // if the focus item is not wrapped with the focus provider then return null\n  if (!register) return {};\n  return otherActions;\n}\n\nexport const useFocusGroupWithState = (ref = {}, props) => {\n  const { register, unregister, ...otherActions } =\n    useContext(FocusGroupContext) || {};\n\n  useEffect(() => {\n    if (ref && register) register(ref, props);\n    return () => {\n      if (ref && unregister) unregister(ref);\n    };\n  }, [ref]);\n\n  // if the focus item is not wrapped with the focus provider then return null\n  if (!register) return {};\n  return otherActions;\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.496 12c-.828 0-1.5-.672-1.5-1.5S8.668 9 9.496 9s1.5.672 1.5 1.5-.672 1.5-1.5 1.5zM9.496 7c-.828 0-1.5-.672-1.5-1.5S8.668 4 9.496 4s1.5.672 1.5 1.5-.672 1.5-1.5 1.5zM9.496 17c-.828 0-1.5-.672-1.5-1.5s.672-1.5 1.5-1.5 1.5.672 1.5 1.5-.672 1.5-1.5 1.5z',\n  ],\n  height: 20,\n  width: 20,\n});\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M18.869 19.162l-5.943-6.484c1.339-1.401 2.075-3.233 2.075-5.178 0-2.003-.78-3.887-2.197-5.303S9.504 0 7.501 0 3.614.78 2.198 2.197.001 5.497.001 7.5s.78 3.887 2.197 5.303S5.498 15 7.501 15c1.726 0 3.362-.579 4.688-1.645l5.943 6.483a.497.497 0 0 0 .369.162.4997.4997 0 0 0 .369-.837l-.001-.001zM1 7.5C1 3.916 3.916 1 7.5 1S14 3.916 14 7.5 11.084 14 7.5 14 1 11.084 1 7.5z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React, { cloneElement, useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { addOrRemove, runAll } from '@elliemae/ds-utilities/utils';\nimport useDerivedStateFromProps from '@elliemae/ds-utilities/hooks/useDerivedStateFromProps';\n\nexport function useCheckableGroup({\n  children,\n  active: activeProp,\n  multi,\n  onCheck = () => null,\n}) {\n  const [active, setActive] = useDerivedStateFromProps(activeProp);\n\n  const handleCheck = ({ target: { value } }, item) => {\n    setActive(prevActive => {\n      const nextActive = multi ? addOrRemove(prevActive, value) : value;\n      onCheck(nextActive, item);\n      return nextActive;\n    });\n  };\n\n  return React.Children.map(children, child => {\n    const { props } = child;\n    const checked = Array.isArray(active)\n      ? active.indexOf(props.name) !== -1\n      : active === props.name;\n\n    return cloneElement(child, {\n      ...props,\n      checked,\n      onClick: runAll(handleCheck, props.onClick),\n    });\n  });\n}\n\nfunction CheckableGroup({\n  active = [],\n  multi = false, // checkbox or radio\n  children,\n}) {\n  return useCheckableGroup({ active, multi, children });\n}\n\nCheckableGroup.propTypes = {\n  /* The item (if multi false) or items (if multi true) selected */\n  active: PropTypes.arrayOf(PropTypes.string),\n  /* Whether is multi select or not */\n  multi: PropTypes.bool,\n  /* Handler when a user checks an item */\n  onCheck: PropTypes.func,\n};\n\nexport default CheckableGroup;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { debounce } from '@elliemae/ds-utilities/utils';\n\nconst withSearchable = (WrappedComponent) => {\n  class Searchable extends Component {\n    debouncedSearch = debounce(this.handleSearch, 200);\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        value: props.value,\n      };\n      this.handleSearch = this.handleSearch.bind(this);\n      this.handleKeyUp = this.handleKeyUp.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.buttonRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(nextProps, { prevPropValue }) {\n      if (nextProps.value !== prevPropValue) {\n        return {\n          value: nextProps.value,\n          prevPropValue: nextProps.value,\n        };\n      }\n      return null;\n    }\n\n    handleKeyUp(e) {\n      const { onKeyUp, searchOnEnter } = this.props;\n      const { key } = e;\n      if (searchOnEnter && key === 'Enter') {\n        this.handleSearch();\n      }\n      onKeyUp(e);\n    }\n\n    handleSearch() {\n      const { onSearch, property, clearOnSearch, searchOnEnter } = this.props;\n      const { value } = this.state;\n\n      if (clearOnSearch) this.setState({ value: '' });\n      if (searchOnEnter && !value) return;\n      onSearch({\n        query: { [property]: value },\n        property,\n        value,\n      });\n    }\n\n    handleChange({ target }) {\n      const { value } = target;\n      const { searchOnEnter, onChange } = this.props;\n      onChange(value);\n      this.setState({ value }, () => {\n        if (!searchOnEnter) this.debouncedSearch();\n      });\n    }\n\n    render() {\n      const { value } = this.state;\n      const { containerProps, ...rest } = this.props;\n\n      return (\n        <WrappedComponent\n          {...rest}\n          buttonRef={this.buttonRef}\n          containerProps={containerProps}\n          onChange={this.handleChange}\n          onKeyUp={this.handleKeyUp}\n          onSearch={this.handleSearch}\n          value={value}\n        />\n      );\n    }\n  }\n\n  Searchable.defaultProps = {\n    onChange: () => null,\n    onSearch: () => null,\n    onKeyUp: () => null,\n    property: 'all',\n    searchOnEnter: true,\n    clearOnSearch: false,\n    containerProps: {},\n  };\n\n  Searchable.propTypes = {\n    containerProps: PropTypes.shape({}),\n    onChange: PropTypes.func,\n    onSearch: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    property: PropTypes.string,\n    searchOnEnter: PropTypes.bool,\n    clearOnSearch: PropTypes.bool,\n    value: PropTypes.string,\n  };\n\n  return Searchable;\n};\n\nexport default withSearchable;\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"react\")):\"function\"==typeof define&&define.amd?define([\"react\"],t):\"object\"==typeof exports?exports.reactTextMask=t(require(\"react\")):e.reactTextMask=t(e.React)}(this,function(e){return function(e){function t(n){if(r[n])return r[n].exports;var o=r[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var r={};return t.m=e,t.c=r,t.p=\"\",t(0)}([function(e,t,r){\"use strict\";function n(e){return e&&e.__esModule?e:{default:e}}function o(e,t){var r={};for(var n in e)t.indexOf(n)>=0||Object.prototype.hasOwnProperty.call(e,n)&&(r[n]=e[n]);return r}function i(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function a(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function u(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,\"__esModule\",{value:!0}),t.conformToMask=void 0;var s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},l=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),f=r(3);Object.defineProperty(t,\"conformToMask\",{enumerable:!0,get:function(){return n(f).default}});var c=r(11),p=n(c),d=r(9),h=n(d),v=r(5),y=n(v),m=r(2),b=function(e){function t(){var e;i(this,t);for(var r=arguments.length,n=Array(r),o=0;o<r;o++)n[o]=arguments[o];var u=a(this,(e=t.__proto__||Object.getPrototypeOf(t)).call.apply(e,[this].concat(n)));return u.setRef=u.setRef.bind(u),u.onBlur=u.onBlur.bind(u),u.onChange=u.onChange.bind(u),u}return u(t,e),l(t,[{key:\"setRef\",value:function(e){this.inputElement=e}},{key:\"initTextMask\",value:function(){var e=this.props,t=this.props.value;this.textMaskInputElement=(0,y.default)(s({inputElement:this.inputElement},e)),this.textMaskInputElement.update(t)}},{key:\"componentDidMount\",value:function(){this.initTextMask()}},{key:\"componentDidUpdate\",value:function(e){var t=this.props,r=t.value,n=t.pipe,o=t.mask,i=t.guide,a=t.placeholderChar,u=t.showMask,s={guide:i,placeholderChar:a,showMask:u},l=\"function\"==typeof n&&\"function\"==typeof e.pipe?n.toString()!==e.pipe.toString():(0,m.isNil)(n)&&!(0,m.isNil)(e.pipe)||!(0,m.isNil)(n)&&(0,m.isNil)(e.pipe),f=o.toString()!==e.mask.toString(),c=Object.keys(s).some(function(t){return s[t]!==e[t]})||f||l,p=r!==this.inputElement.value;(p||c)&&this.initTextMask()}},{key:\"render\",value:function e(){var t=this.props,e=t.render,r=o(t,[\"render\"]);return delete r.mask,delete r.guide,delete r.pipe,delete r.placeholderChar,delete r.keepCharPositions,delete r.value,delete r.onBlur,delete r.onChange,delete r.showMask,e(this.setRef,s({onBlur:this.onBlur,onChange:this.onChange,defaultValue:this.props.value},r))}},{key:\"onChange\",value:function(e){this.textMaskInputElement.update(),\"function\"==typeof this.props.onChange&&this.props.onChange(e)}},{key:\"onBlur\",value:function(e){\"function\"==typeof this.props.onBlur&&this.props.onBlur(e)}}]),t}(p.default.PureComponent);t.default=b,b.propTypes={mask:h.default.oneOfType([h.default.array,h.default.func,h.default.bool,h.default.shape({mask:h.default.oneOfType([h.default.array,h.default.func]),pipe:h.default.func})]).isRequired,guide:h.default.bool,value:h.default.oneOfType([h.default.string,h.default.number]),pipe:h.default.func,placeholderChar:h.default.string,keepCharPositions:h.default.bool,showMask:h.default.bool},b.defaultProps={render:function(e,t){return p.default.createElement(\"input\",s({ref:e},t))}}},function(e,t){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0}),t.placeholderChar=\"_\",t.strFunction=\"function\"},function(e,t,r){\"use strict\";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:f,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l.placeholderChar;if(!o(e))throw new Error(\"Text-mask:convertMaskToPlaceholder; The mask property must be an array.\");if(e.indexOf(t)!==-1)throw new Error(\"Placeholder character must not be used as part of the mask. Please specify a character that is not present in your mask as your placeholder character.\\n\\n\"+(\"The placeholder character that was received is: \"+JSON.stringify(t)+\"\\n\\n\")+(\"The mask that was received is: \"+JSON.stringify(e)));return e.map(function(e){return e instanceof RegExp?t:e}).join(\"\")}function o(e){return Array.isArray&&Array.isArray(e)||e instanceof Array}function i(e){return\"string\"==typeof e||e instanceof String}function a(e){return\"number\"==typeof e&&void 0===e.length&&!isNaN(e)}function u(e){return\"undefined\"==typeof e||null===e}function s(e){for(var t=[],r=void 0;r=e.indexOf(c),r!==-1;)t.push(r),e.splice(r,1);return{maskWithoutCaretTraps:e,indexes:t}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.convertMaskToPlaceholder=n,t.isArray=o,t.isString=i,t.isNumber=a,t.isNil=u,t.processCaretTraps=s;var l=r(1),f=[],c=\"[]\"},function(e,t,r){\"use strict\";function n(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:s,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!(0,i.isArray)(t)){if((\"undefined\"==typeof t?\"undefined\":o(t))!==a.strFunction)throw new Error(\"Text-mask:conformToMask; The mask property must be an array.\");t=t(e,r),t=(0,i.processCaretTraps)(t).maskWithoutCaretTraps}var n=r.guide,l=void 0===n||n,f=r.previousConformedValue,c=void 0===f?s:f,p=r.placeholderChar,d=void 0===p?a.placeholderChar:p,h=r.placeholder,v=void 0===h?(0,i.convertMaskToPlaceholder)(t,d):h,y=r.currentCaretPosition,m=r.keepCharPositions,b=l===!1&&void 0!==c,g=e.length,k=c.length,C=v.length,O=t.length,T=g-k,P=T>0,x=y+(P?-T:0),w=x+Math.abs(T);if(m===!0&&!P){for(var S=s,_=x;_<w;_++)v[_]===d&&(S+=d);e=e.slice(0,x)+S+e.slice(x,g)}for(var M=e.split(s).map(function(e,t){return{char:e,isNew:t>=x&&t<w}}),j=g-1;j>=0;j--){var E=M[j].char;if(E!==d){var R=j>=x&&k===O;E===v[R?j-T:j]&&M.splice(j,1)}}var V=s,N=!1;e:for(var A=0;A<C;A++){var B=v[A];if(B===d){if(M.length>0)for(;M.length>0;){var I=M.shift(),F=I.char,q=I.isNew;if(F===d&&b!==!0){V+=d;continue e}if(t[A].test(F)){if(m===!0&&q!==!1&&c!==s&&l!==!1&&P){for(var D=M.length,L=null,W=0;W<D;W++){var J=M[W];if(J.char!==d&&J.isNew===!1)break;if(J.char===d){L=W;break}}null!==L?(V+=F,M.splice(L,1)):A--}else V+=F;continue e}N=!0}b===!1&&(V+=v.substr(A,C));break}V+=B}if(b&&P===!1){for(var U=null,H=0;H<V.length;H++)v[H]===d&&(U=H);V=null!==U?V.substr(0,U+1):s}return{conformedValue:V,meta:{someCharsRejected:N}}}Object.defineProperty(t,\"__esModule\",{value:!0});var o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};t.default=n;var i=r(2),a=r(1),u=[],s=\"\"},function(e,t){\"use strict\";function r(e){var t=e.previousConformedValue,r=void 0===t?o:t,i=e.previousPlaceholder,a=void 0===i?o:i,u=e.currentCaretPosition,s=void 0===u?0:u,l=e.conformedValue,f=e.rawValue,c=e.placeholderChar,p=e.placeholder,d=e.indexesOfPipedChars,h=void 0===d?n:d,v=e.caretTrapIndexes,y=void 0===v?n:v;if(0===s||!f.length)return 0;var m=f.length,b=r.length,g=p.length,k=l.length,C=m-b,O=C>0,T=0===b,P=C>1&&!O&&!T;if(P)return s;var x=O&&(r===l||l===p),w=0,S=void 0,_=void 0;if(x)w=s-C;else{var M=l.toLowerCase(),j=f.toLowerCase(),E=j.substr(0,s).split(o),R=E.filter(function(e){return M.indexOf(e)!==-1});_=R[R.length-1];var V=a.substr(0,R.length).split(o).filter(function(e){return e!==c}).length,N=p.substr(0,R.length).split(o).filter(function(e){return e!==c}).length,A=N!==V,B=void 0!==a[R.length-1]&&void 0!==p[R.length-2]&&a[R.length-1]!==c&&a[R.length-1]!==p[R.length-1]&&a[R.length-1]===p[R.length-2];!O&&(A||B)&&V>0&&p.indexOf(_)>-1&&void 0!==f[s]&&(S=!0,_=f[s]);for(var I=h.map(function(e){return M[e]}),F=I.filter(function(e){return e===_}).length,q=R.filter(function(e){return e===_}).length,D=p.substr(0,p.indexOf(c)).split(o).filter(function(e,t){return e===_&&f[t]!==e}).length,L=D+q+F+(S?1:0),W=0,J=0;J<k;J++){var U=M[J];if(w=J+1,U===_&&W++,W>=L)break}}if(O){for(var H=w,Y=w;Y<=g;Y++)if(p[Y]===c&&(H=Y),p[Y]===c||y.indexOf(Y)!==-1||Y===g)return H}else if(S){for(var z=w-1;z>=0;z--)if(l[z]===_||y.indexOf(z)!==-1||0===z)return z}else for(var G=w;G>=0;G--)if(p[G-1]===c||y.indexOf(G)!==-1||0===G)return G}Object.defineProperty(t,\"__esModule\",{value:!0}),t.default=r;var n=[],o=\"\"},function(e,t,r){\"use strict\";function n(e){return e&&e.__esModule?e:{default:e}}function o(e){var t={previousConformedValue:void 0,previousPlaceholder:void 0};return{state:t,update:function(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e,o=n.inputElement,l=n.mask,c=n.guide,y=n.pipe,b=n.placeholderChar,g=void 0===b?h.placeholderChar:b,k=n.keepCharPositions,C=void 0!==k&&k,O=n.showMask,T=void 0!==O&&O;if(\"undefined\"==typeof r&&(r=o.value),r!==t.previousConformedValue){(\"undefined\"==typeof l?\"undefined\":s(l))===m&&void 0!==l.pipe&&void 0!==l.mask&&(y=l.pipe,l=l.mask);var P=void 0,x=void 0;if(l instanceof Array&&(P=(0,d.convertMaskToPlaceholder)(l,g)),l!==!1){var w=a(r),S=o.selectionEnd,_=t.previousConformedValue,M=t.previousPlaceholder,j=void 0;if((\"undefined\"==typeof l?\"undefined\":s(l))===h.strFunction){if(x=l(w,{currentCaretPosition:S,previousConformedValue:_,placeholderChar:g}),x===!1)return;var E=(0,d.processCaretTraps)(x),R=E.maskWithoutCaretTraps,V=E.indexes;x=R,j=V,P=(0,d.convertMaskToPlaceholder)(x,g)}else x=l;var N={previousConformedValue:_,guide:c,placeholderChar:g,pipe:y,placeholder:P,currentCaretPosition:S,keepCharPositions:C},A=(0,p.default)(w,x,N),B=A.conformedValue,I=(\"undefined\"==typeof y?\"undefined\":s(y))===h.strFunction,F={};I&&(F=y(B,u({rawValue:w},N)),F===!1?F={value:_,rejected:!0}:(0,d.isString)(F)&&(F={value:F}));var q=I?F.value:B,D=(0,f.default)({previousConformedValue:_,previousPlaceholder:M,conformedValue:q,placeholder:P,rawValue:w,currentCaretPosition:S,placeholderChar:g,indexesOfPipedChars:F.indexesOfPipedChars,caretTrapIndexes:j}),L=q===P&&0===D,W=T?P:v,J=L?W:q;t.previousConformedValue=J,t.previousPlaceholder=P,o.value!==J&&(o.value=J,i(o,D))}}}}}function i(e,t){document.activeElement===e&&(b?g(function(){return e.setSelectionRange(t,t,y)},0):e.setSelectionRange(t,t,y))}function a(e){if((0,d.isString)(e))return e;if((0,d.isNumber)(e))return String(e);if(void 0===e||null===e)return v;throw new Error(\"The 'value' provided to Text Mask needs to be a string or a number. The value received was:\\n\\n \"+JSON.stringify(e))}Object.defineProperty(t,\"__esModule\",{value:!0});var u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e};t.default=o;var l=r(4),f=n(l),c=r(3),p=n(c),d=r(2),h=r(1),v=\"\",y=\"none\",m=\"object\",b=\"undefined\"!=typeof navigator&&/Android/i.test(navigator.userAgent),g=\"undefined\"!=typeof requestAnimationFrame?requestAnimationFrame:setTimeout},function(e,t){\"use strict\";function r(e){return function(){return e}}var n=function(){};n.thatReturns=r,n.thatReturnsFalse=r(!1),n.thatReturnsTrue=r(!0),n.thatReturnsNull=r(null),n.thatReturnsThis=function(){return this},n.thatReturnsArgument=function(e){return e},e.exports=n},function(e,t,r){\"use strict\";function n(e,t,r,n,i,a,u,s){if(o(t),!e){var l;if(void 0===t)l=new Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else{var f=[r,n,i,a,u,s],c=0;l=new Error(t.replace(/%s/g,function(){return f[c++]})),l.name=\"Invariant Violation\"}throw l.framesToPop=1,l}}var o=function(e){};e.exports=n},function(e,t,r){\"use strict\";var n=r(6),o=r(7),i=r(10);e.exports=function(){function e(e,t,r,n,a,u){u!==i&&o(!1,\"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\")}function t(){return e}e.isRequired=e;var r={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return r.checkPropTypes=n,r.PropTypes=r,r}},function(e,t,r){\"use strict\";\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},e.exports=r(8)()},function(e,t){\"use strict\";var r=\"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\";e.exports=r},function(t,r){t.exports=e}])});","/* eslint-disable react/no-unused-state */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Search from '@elliemae/ds-icons/Search';\nimport DSButton from '../../Button';\nimport DSTextBox from '../TextBox';\nimport withSearchable from './withSearchable';\n\nconst SearchBoxImpl = ({\n  containerProps,\n  placeholder,\n  className,\n  disabled,\n  disableButton,\n  innerRef,\n  showIcon,\n  style,\n  onChange,\n  onKeyUp,\n  onSearch,\n  onBlur,\n  readOnly,\n  value,\n  clearable,\n}) => (\n  <DSTextBox\n    className={className}\n    clearable={clearable}\n    containerProps={containerProps}\n    disabled={disabled}\n    innerRef={innerRef}\n    onChange={onChange}\n    onKeyUp={onKeyUp}\n    onBlur={onBlur}\n    placeholder={placeholder}\n    readOnly={readOnly}\n    rightComponent={\n      showIcon && (\n        <DSButton\n          disabled={disabled || disableButton}\n          buttonType=\"text\"\n          icon={<Search />}\n          iconSize=\"s\"\n          onClick={onSearch}\n          type=\"secondary\"\n          style={{ borderColor: '#A9B1BE', borderLeft: 'none' }}\n        />\n      )\n    }\n    style={style}\n    value={value}\n  />\n);\n\nSearchBoxImpl.propTypes = {\n  containerProps: PropTypes.shape({}),\n  className: PropTypes.string,\n  innerRef: PropTypes.any,\n  style: PropTypes.objectOf(PropTypes.string),\n  placeholder: PropTypes.string,\n  onKeyUp: PropTypes.func,\n  onSearch: PropTypes.func,\n  onChange: PropTypes.func,\n  onBlur: PropTypes.func,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n  ]),\n  showIcon: PropTypes.bool,\n  disabled: PropTypes.bool,\n  disableButton: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  clearable: PropTypes.bool,\n};\n\nexport default withSearchable(SearchBoxImpl);\n","import React from 'react';\n\nexport default React.createContext();\n","import React from 'react';\nimport { FixedSizeList as List } from 'react-window';\nimport useHeightByAmountOfItems from './utils/useHeightByAmountOfItems';\n\nconst MenuItem = ({ data, index, style }) => (\n  <div key={index} style={style}>\n    {data[index]}\n  </div>\n);\n\n// eslint-disable-next-line no-unused-vars\nfunction resolveComputation(items, cb, timeout = 1000) {\n  return () =>\n    new Promise(resolve => {\n      const doResolve = result => {\n        cb(result);\n        resolve(result);\n      };\n      let result = 0;\n      const timer = setTimeout(() => doResolve(result), timeout);\n      items.forEach(option => {\n        result =\n          option.props.label.length > result\n            ? option.props.label.length\n            : result;\n      });\n\n      clearTimeout(timer);\n      doResolve(result);\n    });\n}\n\nexport default function VirtualMenuList({\n  items,\n  itemHeight = 32,\n  amountItemsInWindow = 5,\n  width,\n  height,\n}) {\n  const computedListHeight = useHeightByAmountOfItems({\n    amountItems: amountItemsInWindow,\n    itemHeight,\n    items,\n  });\n\n  return (\n    <List\n      height={height || computedListHeight}\n      itemCount={items.length}\n      itemData={items}\n      itemSize={itemHeight}\n      width={width}\n    >\n      {MenuItem}\n    </List>\n  );\n}\n","import { useMemo } from 'react';\n\nconst calculateHeight = (itemHeight, amountItemsInWindow, itemsLength) => {\n  const realAmountItemsInWindow =\n    itemsLength < amountItemsInWindow ? itemsLength : amountItemsInWindow;\n  return itemHeight * realAmountItemsInWindow;\n};\n\nexport default function useHeightByAmountOfItems({\n  itemHeight,\n  amountItems,\n  items,\n}) {\n  const calculatedHeight = useMemo(\n    () => calculateHeight(itemHeight, amountItems, items.length),\n    [amountItems, items],\n  );\n\n  return calculatedHeight;\n}\n","import React, { useEffect, useMemo, useState, useRef, useContext } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport { focusGroupManagerHoc } from '@elliemae/ds-shared/FocusGroup';\nimport { PropTypes, describe } from 'react-desc';\nimport DSSearchBox from '../../form/SearchBox';\nimport VirtualMenuList from '../VirtualMenuList';\nimport MenuContext from '../MenuContext';\n\nconst SearchBoxWrapper = aggregatedClasses('div')(\n  'menu-search-group',\n  'search-wrapper',\n);\nconst NoOptionsWrapper = aggregatedClasses('div')(\n  'menu-search-group',\n  'no-options',\n);\n\nfunction SearchableGroup({\n  children,\n  amountItemsInWindow = 5,\n  searchTerm: searchTermProp = '',\n  noOptionsText = 'No options',\n  height,\n  width,\n  focusOnOpen = false,\n}) {\n  const searchRef = useRef(null);\n  const [searchTerm, setSearchTerm] = useState(searchTermProp);\n\n  useEffect(() => {\n    if (searchRef.current) searchRef.current.focus();\n  }, []);\n\n  const { visible } = useContext(MenuContext) || {};\n\n  useEffect(() => {\n    if (focusOnOpen && visible) {\n      setTimeout(() => {\n        if (searchRef.current) searchRef.current.focus();\n      }, 0);\n    }\n  }, [focusOnOpen, visible]);\n\n  const filteredChildren = useMemo(\n    () =>\n      children.filter(\n        (child) =>\n          !searchTerm ||\n          child.props.label.toLowerCase().startsWith(searchTerm.toLowerCase()),\n      ),\n    [children, searchTerm],\n  );\n\n  return (\n    <>\n      <SearchBoxWrapper>\n        <DSSearchBox\n          innerRef={searchRef}\n          onSearch={({ value }) => setSearchTerm(value)}\n          searchOnEnter={false}\n          showIcon={false}\n          value={searchTerm}\n        />\n      </SearchBoxWrapper>\n      {!filteredChildren.length && (\n        <NoOptionsWrapper>{noOptionsText}</NoOptionsWrapper>\n      )}\n      <VirtualMenuList\n        amountItemsInWindow={amountItemsInWindow}\n        height={height}\n        items={filteredChildren}\n        width={width}\n      />\n    </>\n  );\n}\n\nconst props = {\n  /** The amount of items that are going to be rendered in the group */\n  amountItemsInWindow: PropTypes.number.description(\n    'The amount of items that are going to be rendered in the group',\n  ),\n  /** A search term */\n  searchTerm: PropTypes.string.description('A search term'),\n  /** Text to show when there's no options to show */\n  noOptionsText: PropTypes.string.description(\n    \"Text to show when there's no options to show\",\n  ),\n  /** array of children for search list */\n  children: PropTypes.array.description('array of children for search list'),\n  /** height for virtual list wrapper */\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).description(\n    'height for virtual list wrapper',\n  ),\n  /** width for virtual list wrapper */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).description(\n    'width for virtual list wrapper',\n  ),\n  /** weather to focus on searchable group on open */\n  focusOnOpen: PropTypes.bool.description(\n    'weather to focus on searchable group on open',\n  ),\n};\n\nSearchableGroup.propTypes = props;\n\nconst DSMenuSearchableGroupWithSchema = describe(SearchableGroup);\nDSMenuSearchableGroupWithSchema.propTypes = props;\n\nexport default focusGroupManagerHoc(SearchableGroup);\n\nexport { DSMenuSearchableGroupWithSchema };\n","import React from 'react';\nimport { describe, PropTypes } from 'react-desc';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport styled from 'styled-components';\nimport DSSeparator from '../../Separator';\n\nconst blockName = 'menu-separator';\nconst Li = styled.li`\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n`;\n\nconst Title = aggregatedClasses('h5')(blockName, 'title');\nconst MenuSeparator = ({ title, showSeparator = true }) => (\n  <Li>\n    {showSeparator && <DSSeparator />}\n    {title && <Title>{title}</Title>}\n  </Li>\n);\n\nconst props = {\n  /** menu separator h5 title */\n  title: PropTypes.string.description('menu separator h5 title'),\n  /** toggle separator on and off */\n  showSeparator: PropTypes.bool.description('toggle separator on and off'),\n};\n\nMenuSeparator.propTypes = props;\n\nconst DSMenuSeparatorWithSchema = describe(MenuSeparator);\nDSMenuSeparatorWithSchema.propTypes = props;\n\nexport default MenuSeparator;\n\nexport { DSMenuSeparatorWithSchema };\n","import React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport CheckableGroup from '@elliemae/ds-shared/CheckableGroup';\n\nfunction CheckboxGroup(props) {\n  return <CheckableGroup {...props} multi />;\n}\n\nconst props = {\n  /* The item (if multi false) or items (if multi true) selected */\n  active: PropTypes.arrayOf(PropTypes.string).description(\n    'The item (if multi false) or items (if multi true) selected',\n  ),\n  /* Whether is multi select or not */\n  multi: PropTypes.bool.description('Whether is multi select or not'),\n  /* Handler when a user checks an item */\n  onCheck: PropTypes.func.description('Handler when a user checks an item'),\n};\n\nCheckboxGroup.propTypes = props;\n\nconst DSMenuCheckboxGroupWithSchema = describe(CheckboxGroup);\nDSMenuCheckboxGroupWithSchema.propTypes = props;\n\nexport default CheckboxGroup;\n\nexport { DSMenuCheckboxGroupWithSchema };\n","import React from 'react';\nimport { describe, PropTypes } from 'react-desc';\nimport CheckableGroup from '@elliemae/ds-shared/CheckableGroup';\n\nfunction RadioGroup(props) {\n  return <CheckableGroup {...props} multi={false} />;\n}\n\nconst props = {\n  /* The item selected */\n  active: PropTypes.arrayOf(PropTypes.string).description('the item selected'),\n  /* Handler when a user checks an item */\n  onCheck: PropTypes.func.description('Handler when a user checks an item'),\n};\n\nRadioGroup.propTypes = props;\n\nconst DSMenuRadioGroupWithSchema = describe(RadioGroup);\n\nDSMenuRadioGroupWithSchema.propTypes = props;\n\nexport default RadioGroup;\n\nexport { DSMenuRadioGroupWithSchema };\n","import React from 'react';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\n\nconst { cssClassName } = convertPropToCssClassName('form-required-mark');\nconst RequiredMark = ({ required = false, optional = false }) => {\n  if (!required && !optional) return null;\n  if (required) {\n    return <span className={`${cssClassName}`}>&#9679;</span>;\n  }\n  return <span className={`${cssClassName} optional-mark`}>&#9900;</span>;\n};\n\nexport default RequiredMark;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M12 10.5a.503.503 0 0 0-.109-.313l-4-5a.5013.5013 0 0 0-.703-.078c-.214.173-.25.488-.078.703l3.75 4.688-3.75 4.688c-.172.218-.136.531.078.703.216.172.53.138.703-.078l4-5A.501.501 0 0 0 12 10.5z',\n  ],\n  height: 20,\n  width: 20,\n});\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: ['M7.5 12.875L4.625 10l-.875.875 3.75 3.75 8.75-8.75L15.375 5z'],\n  height: 20,\n  width: 20,\n});\n","import React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-addon-group';\n\nconst Container = aggregatedClasses('div')(blockName);\nconst InputAddon = aggregatedClasses('span')(blockName, 'addon');\n\nexport default class AddonWrapper extends Component {\n  static defaultProps = {};\n\n  state = {};\n\n  render() {\n    const {\n      leftAddon,\n      rightAddon,\n      children: inputComponent,\n      className,\n      containerProps,\n    } = this.props;\n    const childType =\n      inputComponent && inputComponent.type && inputComponent.type.name\n        ? inputComponent.type.name.toLowerCase()\n        : 'default';\n    return (\n      <Container\n        className={`${className} ${blockName}--${childType}`}\n        {...containerProps}\n      >\n        {leftAddon && <InputAddon>{leftAddon}</InputAddon>}\n        {inputComponent}\n        {rightAddon && <InputAddon>{rightAddon}</InputAddon>}\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport { describe, PropTypes } from 'react-desc';\nimport SearchBoxImpl from './SearchBoxImpl';\n\nconst DSSearchBox = ({\n  containerProps = {},\n  innerRef = undefined,\n  className = '',\n  disabled = false,\n  disableButton = false,\n  style = {},\n  property = 'all',\n  placeholder = 'Search all', // todo: i18nize this\n  searchOnEnter = true,\n  clearOnSearch = false,\n  onKeyUp = () => null,\n  onSearch = () => null,\n  onChange = () => null,\n  onBlur = () => null,\n  readOnly = false,\n  value = undefined,\n  showIcon = true,\n}) => (\n  <SearchBoxImpl\n    className={className}\n    clearOnSearch={clearOnSearch}\n    containerProps={containerProps}\n    disabled={disabled}\n    disableButton={disableButton}\n    innerRef={innerRef}\n    onKeyUp={onKeyUp}\n    onSearch={onSearch}\n    onChange={onChange}\n    onBlur={onBlur}\n    placeholder={placeholder}\n    property={property}\n    readOnly={readOnly}\n    searchOnEnter={searchOnEnter}\n    showIcon={showIcon}\n    style={style}\n    value={value}\n  />\n);\n\nconst searchBoxProps = {\n  containerProps: PropTypes.object.description(\n    'Set of Properties attached to the main container',\n  ),\n  className: PropTypes.string.description('html class attribute'),\n  innerRef: PropTypes.object.description('ref to the components container'),\n  style: PropTypes.object.description('Set style to the search box'),\n  property: PropTypes.string\n    .description('search property')\n    .defaultValue('property'),\n  placeholder: PropTypes.string\n    .description('Placeholder for the search box')\n    .defaultValue('Search All'),\n  searchOnEnter: PropTypes.bool\n    .description('Whether to trigger the search once the enter is pressed')\n    .defaultValue(true),\n  clearOnSearch: PropTypes.bool\n    .description('Whether to clear the input on search')\n    .defaultValue(false),\n  onKeyUp: PropTypes.func.description(\n    'function triggered once in the search box a keyboard key is released',\n  ),\n  onSearch: PropTypes.func.description(\n    'function triggered once the search icon is clicked',\n  ),\n  onChange: PropTypes.func.description('function that is triggered on change'),\n  onBlur: PropTypes.func.description('Function that is triggered on blur'),\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n  ]).description('searchbox input value'),\n  showIcon: PropTypes.bool\n    .description('Whether to show an icon or not')\n    .defaultValue(true),\n  disabled: PropTypes.bool\n    .description('Disables the search input and button')\n    .defaultValue(false),\n  disableButton: PropTypes.bool\n    .description('Disables the search button')\n    .defaultValue(false),\n  readOnly: PropTypes.bool\n    .description('whether the input is read only or not')\n    .defaultValue(false),\n};\n\nDSSearchBox.propTypes = searchBoxProps;\n\nconst SearchBoxWithSchema = describe(DSSearchBox);\nSearchBoxWithSchema.propTypes = searchBoxProps;\n\nexport { SearchBoxWithSchema };\nexport default DSSearchBox;\n","/* eslint-disable indent */\n/* eslint-disable max-lines */\n/* eslint-disable import/no-cycle */\nimport React, { useRef } from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport ChevronRight from '@elliemae/ds-icons/ChevronSmallRight';\nimport VerticalElipsis from '@elliemae/ds-icons/MoreOptionsVert';\nimport { useFocusGroupItem } from '@elliemae/ds-shared/FocusGroup';\nimport DSButton, { BUTTON_VARIANT } from '../../Button';\nimport DSPopper from '../../Popper';\nimport { interactions } from '../../Popper/interaction';\nimport { useHiddenController } from '../../Hidden';\nimport Menu from '../Menu';\nimport MenuItem from './MenuItem';\n\nfunction SubMenu({\n  noAddon,\n  leftAddon = undefined,\n  label = undefined,\n  interactionType = 'hover',\n  children: subitems,\n  rightAddonType,\n  disabledAddonInactive,\n  checkableProps = {},\n  customRenderer,\n  onClick,\n  closeMenu,\n  id,\n}) {\n  const itemRef = useRef(null);\n  const focusOnOpen = useRef(false);\n  const { visible = false, onShow, onHide } = useHiddenController(undefined, {\n    interaction: 'click',\n  });\n\n  const interaction = rightAddonType === 'elipsis' ? 'click' : 'hover';\n\n  const { focusItemByNode } = useFocusGroupItem();\n  // todo: create a menu state to handle all related menu things\n  const handleShowSubItemsWithMouse = (e) => {\n    e.stopPropagation();\n    onShow();\n    focusOnOpen.current = true;\n  };\n  const handleShowWithMouse = (e) => {\n    if (onClick) onClick(e);\n  };\n  const handleShowWithMouseHover = () => {\n    onShow();\n    focusOnOpen.current = false;\n  };\n\n  const handleShowWithKeyboard = () => {\n    onShow();\n    focusOnOpen.current = true;\n  };\n\n  const hoverHandlers =\n    interaction === 'hover'\n      ? {\n          onMouseEnter: handleShowWithMouseHover,\n          onMouseLeave: onHide,\n        }\n      : { onClick: handleShowWithMouse };\n\n  const rightAddon =\n    rightAddonType === 'elipsis' ? (\n      <DSButton\n        aria-label=\"vertical-elipsis\"\n        buttonType=\"text\"\n        leftIcon={\n          <VerticalElipsis\n            className=\"submenu-arrow\"\n            color={['brand-primary', 600]}\n            size=\"s\"\n          />\n        }\n        onClick={(e) => handleShowSubItemsWithMouse(e)}\n        size=\"m\"\n        variant={BUTTON_VARIANT.DEFAULT}\n      />\n    ) : (\n      <ChevronRight\n        className=\"submenu-arrow\"\n        color={['brand-primary', 600]}\n        size=\"sm\"\n      />\n    );\n\n  return (\n    <>\n      <DSPopper\n        contentComponent={\n          <Menu\n            focusKeyBindings={{\n              ArrowLeft: [() => focusItemByNode(itemRef.current), 'exit'],\n            }}\n            focusOnOpen={focusOnOpen.current}\n            onExitFocusGroup={onHide}\n            {...hoverHandlers}\n            closeMenu={closeMenu}\n            visible={visible}\n          >\n            {subitems}\n          </Menu>\n        }\n        interactionType={interactionType}\n        isOpen={visible}\n        onOpen={(opening) => (opening ? onShow() : onHide())}\n        placement=\"right-start\"\n        showArrow={false}\n        triggerComponent={\n          <MenuItem\n            customRenderer={customRenderer}\n            disabledAddonInactive={disabledAddonInactive}\n            id={id}\n            innerRef={itemRef}\n            label={label}\n            leftAddon={leftAddon}\n            noAddon={noAddon}\n            {...hoverHandlers}\n            onKeyDown={(e) => {\n              if (\n                e.key === 'ArrowRight' ||\n                e.key === 'Enter' ||\n                e.keyCode === 32\n              ) {\n                handleShowWithKeyboard();\n              }\n            }}\n            rightAddon={rightAddon}\n            {...checkableProps}\n          />\n        }\n      />\n    </>\n  );\n}\n\nconst props = {\n  /** dont show addon for submenu */\n  noAddon: PropTypes.bool.description('dont show addon for submenu'),\n  /** left addon */\n  leftAddon: PropTypes.node.description('left addon'),\n  /** submenu label */\n  label: PropTypes.string.description('submenu label'),\n  /** A type indicating how to open/close the tooltip */\n  interactionType: PropTypes.oneOf(interactions).description(\n    'A type indicating how to open/close the tooltip',\n  ),\n  /** sub menu items */\n  children: PropTypes.oneOfType([PropTypes.array, PropTypes.node]).description(\n    'sub menu items',\n  ),\n  /** right addon, ellipsis or undefined */\n  rightAddonType: PropTypes.oneOf(['ellipsis']).description(\n    'right addon, ellipsis or undefined',\n  ),\n  disabledAddonInactive: PropTypes.bool.description(''),\n  /** props passed to MenuItem component */\n  checkableProps: PropTypes.object.description(\n    'props passed to MenuItem component',\n  ),\n  /** custom renderer for menu item */\n  customRenderer: PropTypes.func.description('custom renderer for menu item'),\n  /** on click handler */\n  onClick: PropTypes.func.description('on click handler'),\n  closeMenu: PropTypes.any.description(''),\n  /** component id */\n  id: PropTypes.string.description('component id'),\n};\n\nSubMenu.propTypes = props;\n\nconst DSSubMenuWithSchema = describe(SubMenu);\n\nDSSubMenuWithSchema.propTypes = props;\n\nexport default SubMenu;\n\nexport { DSSubMenuWithSchema };\n","import React, { useMemo } from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport { useCheckableGroup } from '@elliemae/ds-shared/CheckableGroup';\nimport SearchableGroup from './SearchableGroup';\nimport { menuItemFactory } from './menuItemFactory';\nimport VirtualMenuList from '../VirtualMenuList';\n\nconst noop = () => null;\n\nfunction SelectionGroup({\n  multi = false,\n  searchable = false,\n  focusOnOpen = false,\n  onSelect = noop,\n  children,\n  items = undefined,\n  active = multi ? [] : '',\n  width,\n  height,\n}) {\n  const renderedItems = useMemo(\n    () =>\n      items &&\n      items.map((item) => {\n        const Component = menuItemFactory(multi ? 'checkbox' : 'radio');\n        return (\n          <Component\n            {...item}\n            key={item.name || item.id || item.key}\n            item={item}\n            name={item.id || item.name}\n          />\n        );\n      }),\n    [items],\n  );\n  const decoratedGroupChildren = useCheckableGroup({\n    children: renderedItems || children,\n    multi,\n    active,\n    onCheck: onSelect,\n  });\n\n  if (searchable) {\n    return (\n      <SearchableGroup\n        focusOnOpen={focusOnOpen}\n        height={height}\n        items={items}\n        width={width}\n      >\n        {decoratedGroupChildren}\n      </SearchableGroup>\n    );\n  }\n  return (\n    <VirtualMenuList\n      height={height}\n      items={decoratedGroupChildren}\n      width={width}\n    />\n  );\n}\n\nconst props = {\n  /** toggle on multi select */\n  multi: PropTypes.bool.description('toggle on multi select'),\n  /** toggle on searchable behavior */\n  searchable: PropTypes.bool.description('toggle on searchable behavior'),\n  /** toggle to focus component on open */\n  focusOnOpen: PropTypes.bool.description('toggle to focus component on open'),\n  /** callback that triggers when select happens */\n  onSelect: PropTypes.func.description(\n    'callback that triggers when select happens',\n  ),\n  children: PropTypes.node.description(''),\n  /** selection group items  */\n  items: PropTypes.array.description('selection group items'),\n  /** array of values for multi and string for single selection */\n  active: PropTypes.oneOfType([PropTypes.string, PropTypes.array]).description(\n    'array of values for multi and string for single selection',\n  ),\n  /** selection group width */\n  width: PropTypes.number.description('selection group width'),\n  /** selection group height */\n  height: PropTypes.number.description('selection group height'),\n};\n\nSelectionGroup.propTypes = props;\n\nconst DSMenuSelectionGroupWithSchema = describe(SelectionGroup);\nDSMenuSelectionGroupWithSchema.propTypes = props;\n\nexport default SelectionGroup;\n\nexport { DSMenuSelectionGroupWithSchema };\n","import React from 'react';\nimport DSCheckbox from '../../form/Checkbox';\nimport MenuItemCheckable from './MenuItemCheckable';\n\nfunction MenuItemCheckbox({ checked, ...rest }) {\n  return (\n    <MenuItemCheckable\n      {...rest}\n      leftAddon={<DSCheckbox checked={checked} />}\n      role=\"menuitemcheckbox\"\n    />\n  );\n}\n\nexport default MenuItemCheckbox;\n","/* eslint-disable import/no-cycle */\nimport React from 'react';\nimport { isFunction } from '@elliemae/ds-utilities/utils';\n\nimport Separator from './Separator';\nimport MenuItem from './MenuItem';\nimport SubMenu from './SubMenu';\nimport SelectionGroup from './SelectionGroup';\nimport MenuItemCheckbox from './MenuItemCheckbox';\nimport MenuItemRadio from './MenuItemRadio';\n\nconst itemTypes = {\n  separator: Separator,\n  menuitem: MenuItem,\n  radio: MenuItemRadio,\n  checkbox: MenuItemCheckbox,\n  submenu: SubMenu,\n  'selection-group': SelectionGroup,\n};\n\nconst fallback = {\n  SelectionGroup: 'selection-group',\n};\n\nexport function menuItemFactory(\n  type = '',\n  items,\n  defaultItem = itemTypes.menuitem,\n) {\n  const itemsObject = items || itemTypes;\n  const parsedType = fallback[type] || type.toLowerCase();\n  return itemsObject[parsedType] || defaultItem;\n}\n\nexport function renderMenuItems(options, factory = menuItemFactory) {\n  return options.map((option, index) => {\n    if (isFunction(option.renderer)) {\n      return option.renderer({\n        key: option.id,\n        item: option,\n      });\n    }\n    const ItemComponent = factory(option.type);\n    const children =\n      option.subItems && renderMenuItems(option.subItems, factory);\n    return (\n      <ItemComponent\n        {...option}\n        key={option.id || index}\n        item={option}\n        onClick={null}\n        onMouseDown={option.onClick}\n        // onClick callback called in onMouseDown due to events order issue\n      >\n        {children}\n      </ItemComponent>\n    );\n  });\n}\n","/* eslint-disable max-lines */\n/* eslint-disable import/no-cycle */\nimport React, { useRef, useMemo, useContext } from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport { omit } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport { mergeRefs } from '@elliemae/ds-utilities/system';\nimport { useFocusGroupItem } from '@elliemae/ds-shared/FocusGroup';\nimport { runAll } from '@elliemae/ds-utilities/utils';\nimport DSTruncatedTooltipText from '../../TruncatedTooltipText';\nimport { renderMenuItems } from './menuItemFactory';\nimport SubMenu from './SubMenu';\nimport MenuContext from '../MenuContext';\n\nconst noop = () => null;\n\nconst blockName = 'menu-item';\n\nconst Content = aggregatedClasses('div')(blockName, 'content');\nconst Addon = aggregatedClasses('div')(\n  blockName,\n  'addon',\n  ({ empty, fixedItem }) => ({ empty, fixedItem }),\n);\n\nconst renderAddon = (addon, fixedItem, addonId) => (\n  <Addon key={addonId} classProps={{ fixedItem }}>\n    {addon}\n  </Addon>\n);\n\nconst renderAddons = (addons, fixedItem) =>\n  Array.isArray(addons)\n    ? addons.map(renderAddon)\n    : renderAddon(addons, fixedItem);\n\nconst Wrapper = aggregatedClasses('li')(\n  blockName,\n  null,\n  ({ disabled, disabledAddonInactive, customRenderer, fixedItem, type }) => ({\n    disabled,\n    disabledAddonInactive,\n    customRenderer,\n    fixedItem,\n    [`menu-type-${type}`]: type,\n  }),\n);\nconst calculateSize = (length = 0) => {\n  if (length > 45) return 45 * 7;\n  return length * 7;\n};\nfunction MenuItem(props) {\n  const {\n    innerRef,\n    as = 'li',\n    role = 'menuitem',\n    leftAddon = null,\n    rightAddon = undefined,\n    disabledAddonInactive = undefined,\n    label = undefined,\n    children,\n    tabIndex = -1,\n    onKeyDown = noop,\n    fixedItem = false,\n    noAddon,\n    disabled = false,\n    customRenderer,\n    maxOption,\n    closeMenu,\n    style,\n    ...otherProps\n  } = props;\n\n  const menuCxt = useContext(MenuContext);\n  const ref = useRef(null);\n  useFocusGroupItem(ref);\n  if (otherProps.subItems) {\n    return (\n      <SubMenu {...props} closeMenu={menuCxt.closeMenu}>\n        {renderMenuItems(otherProps.subItems)}\n      </SubMenu>\n    );\n  }\n\n  const wrapperProps = useMemo(() => omit(otherProps, ['icon']), [otherProps]);\n\n  const onClick = (...args) => {\n    if (wrapperProps.onClick) wrapperProps.onClick(...args);\n    if (wrapperProps.closeOnClick && menuCxt.closeMenu) {\n      menuCxt.closeMenu(...args);\n    }\n  };\n\n  return (\n    <Wrapper\n      as={as}\n      classProps={{\n        disabled,\n        disabledAddonInactive,\n        customRenderer,\n        fixedItem,\n        type: otherProps.type,\n      }}\n      id={otherProps.id}\n      innerRef={\n        otherProps.type !== 'disabled' ? mergeRefs(innerRef, ref) : innerRef\n      }\n      onKeyDown={\n        !fixedItem &&\n        runAll((e) => {\n          if (e.key === ' ' || e.key === 'Enter') {\n            e.preventDefault();\n            e.target.dispatchEvent(\n              new MouseEvent('click', {\n                view: window,\n                bubbles: true,\n                cancelable: false,\n              }),\n            );\n          }\n        }, onKeyDown)\n      }\n      role={role}\n      style={style}\n      tabIndex={tabIndex}\n      {...wrapperProps}\n      onClick={onClick}\n    >\n      {!noAddon && renderAddons(leftAddon, fixedItem)}\n      {label && (\n        <Content\n          style={\n            maxOption > 0\n              ? {\n                  width: `${calculateSize(maxOption)}px`,\n                  maxWidth: `${calculateSize(maxOption)}px`,\n                }\n              : undefined\n          }\n        >\n          <DSTruncatedTooltipText value={label} />\n        </Content>\n      )}\n      {customRenderer}\n      {rightAddon && renderAddons(rightAddon)}\n      {children}\n    </Wrapper>\n  );\n}\n\nconst props = {\n  /** Renders the MenuItem with a specific html element */\n  as: PropTypes.element.description(\n    'Renders the MenuItem with a specific html element',\n  ),\n  /**\n   * reference to the component\n   */\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]).description('reference to the component'),\n  /** Renders the passed element to the left */\n  leftAddon: PropTypes.element.description(\n    'Renders the passed element to the left',\n  ),\n  /** Renders the passed element to the right */\n  rightAddon: PropTypes.element.description(\n    'Renders the passed element to the right',\n  ),\n  /** Label for the menu item */\n  label: PropTypes.string.description('Label for the menu item'),\n  /** style object for menu item wrapper */\n  style: PropTypes.object.description('style object for menu item wrapper'),\n  /** disable menu item */\n  disabled: PropTypes.bool.description('disable menu item'),\n  /** HTML tabindex to manage focus order */\n  tabindex: PropTypes.number.description('HTML tabindex to manage focus order'),\n  /** a11y role */\n  role: PropTypes.string.description('a11y role'),\n};\n\nMenuItem.propTypes = props;\n\nconst DSMenuItemWithSchema = describe(MenuItem);\nDSMenuItemWithSchema.propTypes = props;\n\nexport default MenuItem;\n\nexport { DSMenuItemWithSchema };\n","/* eslint-disable import/no-cycle */\nimport React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport Checkmark from '@elliemae/ds-icons/Checkmark';\nimport { runAll } from '@elliemae/ds-utilities/utils';\nimport MenuItem from './MenuItem';\n\n// TODO: where to move this?\nfunction useCheckable({ checked }) {\n  return {\n    checked,\n    'aria-checked': checked,\n  };\n}\n\n/**\n * Reuses the same props as the MenuItem\n *\n * @param root0\n * @param root0.role\n * @param root0.checked\n * @param root0.name\n * @param root0.checkIcon\n * @param root0.children\n * @param root0.leftAddon\n * @param root0.item\n */\nfunction MenuItemCheckable({\n  role = 'menuitemcheckbox',\n  checked = false,\n  name = '',\n  checkIcon = <Checkmark color={['brand-primary', 600]} />,\n  // eslint-disable-next-line react/prop-types\n  children,\n  leftAddon,\n  item = undefined,\n  ...otherProps\n}) {\n  const checkableProps = useCheckable({ checked, name });\n  const handleClick = () =>\n    runAll(otherProps.onClick, checkableProps.onClick)(\n      { target: { value: name, checked } },\n      item,\n    );\n\n  const checkAddon =\n    leftAddon ||\n    (checkableProps.checked ? (\n      <div className=\"checkable-mark\">{checkIcon}</div>\n    ) : (\n      <div />\n    ));\n  return (\n    <MenuItem\n      {...item}\n      {...otherProps}\n      {...checkableProps}\n      customRenderer={\n        item && item.customRenderer ? item.customRenderer : () => {}\n      }\n      items={otherProps.subItems}\n      leftAddon={checkAddon}\n      onClick={handleClick}\n      role={role}\n    />\n  );\n}\n\nconst props = {\n  /** Whether the item is checked or not */\n  checked: PropTypes.bool.description('Whether the item is checked or not'),\n  /** A custom item when the item is checked */\n  checkIcon: PropTypes.element.description(\n    'A custom item when the item is checked',\n  ),\n  /** form field name */\n  name: PropTypes.string.description('form field name'),\n  /** menu item object props */\n  item: PropTypes.object.description('menu item object props'),\n  /** a11y role */\n  role: PropTypes.string.description('a11y role'),\n  /** left addon component */\n  leftAddon: PropTypes.node.description('left addon component'),\n};\n\nMenuItemCheckable.propTypes = props;\n\nconst DSMenuItemCheckeableWithSchema = describe(MenuItemCheckable);\nDSMenuItemCheckeableWithSchema.propTypes = props;\n\nexport default MenuItemCheckable;\nexport { DSMenuItemCheckeableWithSchema };\n","import React from 'react';\nimport { describe, PropTypes } from 'react-desc';\nimport MenuItemCheckable from './MenuItemCheckable';\n\nfunction MenuItemRadio(props) {\n  return <MenuItemCheckable {...props} role=\"menuitemradio\" />;\n}\n\nconst props = {\n  /** Whether the item is checked or not */\n  checked: PropTypes.bool.description('Whether the item is checked or not'),\n  /** A custom item when the item is checked */\n  checkIcon: PropTypes.element.description(\n    'A custom item when the item is checked',\n  ),\n};\n\nMenuItemRadio.propTypes = props;\n\nconst DSMenuItemRadioWithSchema = describe(MenuItemCheckable);\nDSMenuItemRadioWithSchema.propTypes = props;\n\nexport default MenuItemRadio;\n\nexport { DSMenuItemRadioWithSchema };\n","/* eslint-disable max-lines */\n/* eslint-disable react/prop-types */\n/* eslint-disable import/no-cycle */\nimport React, { useContext, useEffect, useMemo, useRef } from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport { omit } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport { animated } from 'react-spring/web.cjs';\nimport { useOnClickOutside } from '@elliemae/ds-utilities/hooks';\nimport { mergeRefs } from '@elliemae/ds-utilities/system';\nimport {\n  focusGroupManagerHoc,\n  FocusGroupContext,\n} from '@elliemae/ds-shared/FocusGroup';\nimport { useHiddenTransition } from '../Hidden';\nimport MenuItemRadio from './MenuItems/MenuItemRadio';\nimport MenuItemCheckbox from './MenuItems/MenuItemCheckbox';\nimport CheckboxGroup from './MenuItems/CheckboxGroup';\nimport RadioGroup from './MenuItems/RadioGroup';\nimport Separator from './MenuItems/Separator';\nimport MenuItem from './MenuItems/MenuItem';\nimport SubMenu from './MenuItems/SubMenu';\nimport SearchableGroup from './MenuItems/SearchableGroup';\nimport SelectionGroup from './MenuItems/SelectionGroup';\nimport { renderMenuItems, menuItemFactory } from './MenuItems/menuItemFactory';\nimport MenuContext from './MenuContext';\n\nconst RESPONSIVE_HEIHGT_MARGIN = 120;\n\nconst blockName = 'menu';\n\nconst noop = () => {};\n\nconst MenuComponent = aggregatedClasses('div')(\n  blockName,\n  '',\n  ({ menuComboBox, type }) => ({\n    'menu-combo-box': menuComboBox,\n    [`type-${type}`]: type,\n  }),\n);\n\n/**\n * todo: -- IDEA -- each menu could have an overlay based on an overlay stack context so we can\n * capture the context of the clicks on very nested components\n */\n\nconst isChildOfType = (child, type) => child.type.name === type;\n\nfunction DSMenu({\n  containerProps = {},\n  innerRef,\n  as: MenuTag = animated.ul,\n  children = undefined,\n  onClickOutside = noop,\n  // handlers from hidden\n  visible = undefined,\n  focusOnOpen = false,\n  maxOption = 0,\n  style = {},\n  minWidth = undefined,\n  maxWidth = undefined,\n  closeMenu,\n  responsiveHeight = false,\n  ...otherProps\n}) {\n  const menuRef = useRef(null);\n  const { focusFirst } = useContext(FocusGroupContext);\n  const { destroyed, ...hiddenProps } = useHiddenTransition({ visible, style });\n\n  // force no addon to the children if the menu doesn't have any item with leftAddon like SelectionGroup\n  const nextChildren = useMemo(() => {\n    const forceLeftAddon = React.Children.toArray(children).some(\n      (child) =>\n        isChildOfType(child, 'SelectionGroup') ||\n        isChildOfType(child, 'MenuItemCheckbox') ||\n        isChildOfType(child, 'MenuItemRadio') ||\n        child.props.leftAddon,\n    );\n\n    return React.Children.map(\n      children,\n      (child) =>\n        child &&\n        React.cloneElement(child, {\n          ...child.props,\n          noAddon: !forceLeftAddon ? true : undefined,\n          maxOption,\n          closeMenu,\n        }),\n    );\n  }, [children]);\n\n  useOnClickOutside(menuRef, onClickOutside);\n\n  useEffect(() => {\n    if (focusOnOpen && visible) {\n      setTimeout(() => {\n        focusFirst();\n      }, 0);\n    }\n  }, [visible, focusOnOpen]);\n  // todo: find out a better approach to this\n  return !hiddenProps.destroyed ? (\n    <MenuContext.Provider value={{ visible, closeMenu }}>\n      <MenuComponent\n        data-testid=\"em-ds-menu\"\n        {...containerProps}\n        as={MenuTag}\n        classProps={{ ...(otherProps.classProps || {}), type: otherProps.type }}\n        innerRef={mergeRefs(innerRef, menuRef)}\n        role=\"menu\"\n        {...omit(otherProps, ['scheduleUpdate'])}\n        {...hiddenProps}\n      >\n        {/* eslint-disable indent */}\n        <div\n          className=\"menu-component-internal-wrapper\"\n          style={{\n            ...style,\n            minWidth,\n            maxWidth,\n            ...(responsiveHeight\n              ? {\n                  overflowY: 'scroll',\n                  maxHeight: responsiveHeight\n                    ? `${window.innerHeight - RESPONSIVE_HEIHGT_MARGIN}px`\n                    : undefined,\n                }\n              : {}),\n          }}\n        >\n          {/* eslint-enable indent */}\n          {nextChildren}\n        </div>\n      </MenuComponent>\n    </MenuContext.Provider>\n  ) : null;\n}\n\nconst WrappedMenu = focusGroupManagerHoc(DSMenu, { loop: true });\n\nconst props = {\n  /** Injected props to wrapper element of component */\n  containerProps: PropTypes.object.description(\n    'Injected props to wrapper element of component',\n  ),\n  /** Renders the menu with a specific html element */\n  as: PropTypes.element.description(\n    'Renders the menu with a specific html element',\n  ),\n  /** Handler when a user clicks outside the menu */\n  onClickOutside: PropTypes.func.description(\n    'Handler when a user clicks outside the menu',\n  ),\n  /** Whether the menu is visible or not */\n  visible: PropTypes.bool.description('Whether the menu is visible or not'),\n  /** When set to true, it's going to focus the first item */\n  focusOnOpen: PropTypes.bool.description(\n    \"When set to true, it's going to focus the first item\",\n  ),\n  /** Customize menu minWidth. Can be undefined or 'number' */\n  minWidth: PropTypes.number.description(\n    \"Customize menu minWidth. Can be undefined or 'number'\",\n  ),\n  /** Customize menu maxWidth. Can be undefined or 'number' */\n  maxWidth: PropTypes.number.description(\n    \"Customize menu maxWidth. Can be undefined or 'number'\",\n  ),\n};\n\nDSMenu.propTypes = props;\n\nconst DSMenuWithSchema = describe(DSMenu);\n\nDSMenuWithSchema.propTypes = props;\n\n// todo: add a handler to get this kind of exports for documentation\nWrappedMenu.Item = MenuItem;\nWrappedMenu.ItemCheckbox = MenuItemCheckbox;\nWrappedMenu.ItemRadio = MenuItemRadio;\nWrappedMenu.SubMenu = SubMenu;\nWrappedMenu.Separator = Separator;\nWrappedMenu.CheckboxGroup = CheckboxGroup;\nWrappedMenu.RadioGroup = RadioGroup;\nWrappedMenu.SearchableGroup = SearchableGroup;\nWrappedMenu.SelectionGroup = SelectionGroup;\n\nexport { menuItemFactory, renderMenuItems, DSMenuWithSchema };\nexport default WrappedMenu;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeObservation_1 = require(\"./ResizeObservation\");\nvar ResizeObserverEntry_1 = require(\"./ResizeObserverEntry\");\nvar resizeObservers = [];\nvar ResizeObserver = /** @class */ (function () {\n    function ResizeObserver(callback) {\n        /** @internal */\n        this.$$observationTargets = [];\n        /** @internal */\n        this.$$activeTargets = [];\n        /** @internal */\n        this.$$skippedTargets = [];\n        var message = callbackGuard(callback);\n        if (message) {\n            throw TypeError(message);\n        }\n        this.$$callback = callback;\n        resizeObservers.push(this);\n    }\n    ResizeObserver.prototype.observe = function (target) {\n        var message = targetGuard('observe', target);\n        if (message) {\n            throw TypeError(message);\n        }\n        var index = findTargetIndex(this.$$observationTargets, target);\n        if (index > 0) {\n            return;\n        }\n        this.$$observationTargets.push(new ResizeObservation_1.ResizeObservation(target));\n        startLoop();\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        var message = targetGuard('unobserve', target);\n        if (message) {\n            throw TypeError(message);\n        }\n        var index = findTargetIndex(this.$$observationTargets, target);\n        if (index < 0) {\n            return;\n        }\n        this.$$observationTargets.splice(index, 1);\n        checkStopLoop();\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        this.$$observationTargets = [];\n        this.$$activeTargets = [];\n    };\n    return ResizeObserver;\n}());\nexports.ResizeObserver = ResizeObserver;\nfunction callbackGuard(callback) {\n    if (typeof (callback) === 'undefined') {\n        return \"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\";\n    }\n    if (typeof (callback) !== 'function') {\n        return \"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\";\n    }\n}\nfunction targetGuard(functionName, target) {\n    if (typeof (target) === 'undefined') {\n        return \"Failed to execute '\" + functionName + \"' on 'ResizeObserver': 1 argument required, but only 0 present.\";\n    }\n    if (!(target instanceof window.Element)) {\n        return \"Failed to execute '\" + functionName + \"' on 'ResizeObserver': parameter 1 is not of type 'Element'.\";\n    }\n}\nfunction findTargetIndex(collection, target) {\n    for (var index = 0; index < collection.length; index += 1) {\n        if (collection[index].target === target) {\n            return index;\n        }\n    }\n    return -1;\n}\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function (ro) {\n        ro.$$activeTargets = [];\n        ro.$$skippedTargets = [];\n        ro.$$observationTargets.forEach(function (ot) {\n            if (ot.isActive()) {\n                var targetDepth = calculateDepthForNode(ot.target);\n                if (targetDepth > depth) {\n                    ro.$$activeTargets.push(ot);\n                }\n                else {\n                    ro.$$skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return !!ro.$$activeTargets.length; });\n};\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return !!ro.$$skippedTargets.length; });\n};\nvar broadcastActiveObservations = function () {\n    var shallowestTargetDepth = Infinity;\n    resizeObservers.forEach(function (ro) {\n        if (!ro.$$activeTargets.length) {\n            return;\n        }\n        var entries = [];\n        ro.$$activeTargets.forEach(function (obs) {\n            var entry = new ResizeObserverEntry_1.ResizeObserverEntry(obs.target);\n            entries.push(entry);\n            obs.$$broadcastWidth = entry.contentRect.width;\n            obs.$$broadcastHeight = entry.contentRect.height;\n            var targetDepth = calculateDepthForNode(obs.target);\n            if (targetDepth < shallowestTargetDepth) {\n                shallowestTargetDepth = targetDepth;\n            }\n        });\n        ro.$$callback(entries, ro);\n        ro.$$activeTargets = [];\n    });\n    return shallowestTargetDepth;\n};\nvar deliverResizeLoopErrorNotification = function () {\n    var errorEvent = new window.ErrorEvent('ResizeLoopError', {\n        message: 'ResizeObserver loop completed with undelivered notifications.',\n    });\n    window.dispatchEvent(errorEvent);\n};\nvar calculateDepthForNode = function (target) {\n    var depth = 0;\n    while (target.parentNode) {\n        target = target.parentNode;\n        depth += 1;\n    }\n    return depth;\n};\nvar notificationIteration = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopErrorNotification();\n    }\n};\nvar animationFrameCancelToken;\nvar startLoop = function () {\n    if (animationFrameCancelToken)\n        return;\n    runLoop();\n};\nvar runLoop = function () {\n    animationFrameCancelToken = window.requestAnimationFrame(function () {\n        notificationIteration();\n        runLoop();\n    });\n};\nvar checkStopLoop = function () {\n    if (animationFrameCancelToken && !resizeObservers.some(function (ro) { return !!ro.$$observationTargets.length; })) {\n        window.cancelAnimationFrame(animationFrameCancelToken);\n        animationFrameCancelToken = undefined;\n    }\n};\nvar install = function () {\n    return window.ResizeObserver = ResizeObserver;\n};\nexports.install = install;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplT2JzZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvUmVzaXplT2JzZXJ2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5REFBd0Q7QUFFeEQsNkRBQTREO0FBRTVELElBQU0sZUFBZSxHQUFHLEVBQXNCLENBQUM7QUFFL0M7SUFVSSx3QkFBWSxRQUFnQztRQVA1QyxnQkFBZ0I7UUFDVCx5QkFBb0IsR0FBRyxFQUF5QixDQUFDO1FBQ3hELGdCQUFnQjtRQUNULG9CQUFlLEdBQUcsRUFBeUIsQ0FBQztRQUNuRCxnQkFBZ0I7UUFDVCxxQkFBZ0IsR0FBRyxFQUF5QixDQUFDO1FBR2hELElBQU0sT0FBTyxHQUFHLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4QyxJQUFJLE9BQU8sRUFBRTtZQUNULE1BQU0sU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVCO1FBQ0QsSUFBSSxDQUFDLFVBQVUsR0FBRyxRQUFRLENBQUM7UUFDM0IsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRU0sZ0NBQU8sR0FBZCxVQUFlLE1BQWU7UUFDMUIsSUFBTSxPQUFPLEdBQUcsV0FBVyxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUMvQyxJQUFJLE9BQU8sRUFBRTtZQUNULE1BQU0sU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVCO1FBQ0QsSUFBTSxLQUFLLEdBQUcsZUFBZSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNqRSxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUU7WUFDWCxPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLElBQUkscUNBQWlCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUM5RCxTQUFTLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRU0sa0NBQVMsR0FBaEIsVUFB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","import { useRef } from 'react';\n\nexport default function useExecutionDelay(startFn, cleanFn, delayTime) {\n  const startTimer = useRef();\n  const closeTimer = useRef();\n\n  const startFunction = (...args) => {\n    clearTimeout(closeTimer.current);\n    startTimer.current = setTimeout(() => startFn(...args), delayTime);\n  };\n\n  const cleanFunction = (...args) => {\n    clearTimeout(startTimer.current);\n    closeTimer.current = setTimeout(() => cleanFn(...args), 30);\n  };\n  return [startFunction, cleanFunction];\n}\n","import React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport AddonWrapper from './AddonWrapper';\n\nconst DSInputGroup = ({\n  containerProps = {},\n  innerRef = null,\n  className = '',\n  style = {},\n  leftAddon = null,\n  rightAddon = null,\n  children: InputComponents, // as InputComponents,\n}) => (\n  <AddonWrapper\n    ref={innerRef}\n    className={className}\n    containerProps={containerProps}\n    leftAddon={leftAddon}\n    rightAddon={rightAddon}\n    style={style}\n  >\n    {InputComponents}\n  </AddonWrapper>\n);\n\nconst props = {\n  /** props injected to wrapper of page header */\n  containerProps: PropTypes.shape({}).description(\n    'props injected to wrapper of page header',\n  ),\n  /** inner ref for input group wrapper */\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]).description('inner ref for input group wrapper'),\n  /** class for input group wrapper */\n  className: PropTypes.string.description('class for input group wrapper'),\n  /**\n   * Set style for the input group\n   */\n  style: PropTypes.object.description('Set style for the input group'),\n  /**\n   * Component to be added at the left side of the input\n   */\n  leftAddon: PropTypes.element.description(\n    'Component to be added at the left side of the input',\n  ),\n  /**\n   * Component to be added at the right side of the input\n   */\n  rightAddon: PropTypes.element.description(\n    'Component to be added at the right side of the input',\n  ),\n  /**\n   * Input components to show\n   */\n  children: PropTypes.element.description('Input components to show'),\n};\n\nDSInputGroup.propTypes = props;\nconst DSInputGroupWithSchema = describe(DSInputGroup);\n\nDSInputGroupWithSchema.propTypes = props;\n\nexport default DSInputGroup;\nexport { DSInputGroupWithSchema };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentRect = function (target) {\n    if ('getBBox' in target) {\n        var box = target.getBBox();\n        return Object.freeze({\n            height: box.height,\n            left: 0,\n            top: 0,\n            width: box.width,\n        });\n    }\n    else { // if (target instanceof HTMLElement) { // also includes all other non-SVGGraphicsElements\n        var styles = window.getComputedStyle(target);\n        return Object.freeze({\n            height: parseFloat(styles.height || '0'),\n            left: parseFloat(styles.paddingLeft || '0'),\n            top: parseFloat(styles.paddingTop || '0'),\n            width: parseFloat(styles.width || '0'),\n        });\n    }\n};\nexports.ContentRect = ContentRect;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudFJlY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQ29udGVudFJlY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFPQSxJQUFNLFdBQVcsR0FBRyxVQUFDLE1BQWU7SUFDaEMsSUFBSSxTQUFTLElBQUssTUFBNkIsRUFBRTtRQUM3QyxJQUFNLEdBQUcsR0FBSSxNQUE2QixDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3JELE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQztZQUNqQixNQUFNLEVBQUUsR0FBRyxDQUFDLE1BQU07WUFDbEIsSUFBSSxFQUFFLENBQUM7WUFDUCxHQUFHLEVBQUUsQ0FBQztZQUNOLEtBQUssRUFBRSxHQUFHLENBQUMsS0FBSztTQUNuQixDQUFDLENBQUM7S0FDTjtTQUFNLEVBQUUsMEZBQTBGO1FBQy9GLElBQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMvQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUM7WUFDakIsTUFBTSxFQUFFLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FBQztZQUN4QyxJQUFJLEVBQUUsVUFBVSxDQUFDLE1BQU0sQ0FBQyxXQUFXLElBQUksR0FBRyxDQUFDO1lBQzNDLEdBQUcsRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLFVBQVUsSUFBSSxHQUFHLENBQUM7WUFDekMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxJQUFJLEdBQUcsQ0FBQztTQUN6QyxDQUFDLENBQUM7S0FDTjtBQUNMLENBQUMsQ0FBQztBQUVPLGtDQUFXIn0=","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FocusGroupManager from './FocusGroupManager';\n\nexport default function FocusGroupHoc(WrappedComponent, options = {}) {\n  return ({\n    onExitFocusGroup,\n    onFocusPrevGroup,\n    focusKeyBindings,\n    ...props\n  }) => (\n    <FocusGroupManager\n      keyBindings={focusKeyBindings}\n      onExitFocusGroup={onExitFocusGroup}\n      onFocusPrevGroup={onFocusPrevGroup}\n      {...options}\n    >\n      <WrappedComponent {...props} {...options} />\n    </FocusGroupManager>\n  );\n}\n","import React from 'react';\n\nexport default React.createContext();\n","/* eslint-disable react/prop-types */\n/* eslint-disable indent */\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { runAll, toggleInObject } from '@elliemae/ds-utilities/utils';\nimport DropdownMenuContext from './DropdownMenuContext';\n\nconst noop = () => null;\n\nfunction DropdownMenuProvider({\n  onSelectMenuItem = noop,\n  onOpenMenu = noop,\n  onClose,\n  children,\n  isOpen,\n  selection,\n  singleGroupSelection,\n  onSelectChange = noop,\n}) {\n  const [isMenuOpen, setMenuOpen] = useState(isOpen);\n\n  const closeMenu = useCallback(() => {\n    setMenuOpen(false);\n    onOpenMenu(false);\n    onClose();\n  });\n  const openMenu = useCallback(() => {\n    setMenuOpen(true);\n    onOpenMenu(true);\n  });\n\n  const handleItemClick = ({ item, group }) => {\n    let activeState;\n    // reset selection if single selection group is activated\n    let nextSelection = !singleGroupSelection ? selection : {};\n\n    if (group) {\n      activeState = group.active;\n      nextSelection = {\n        ...nextSelection,\n        [group.id]: activeState,\n      };\n    } else {\n      const selectionItem = group || item;\n      activeState = selectionItem.active || selectionItem.checked;\n\n      // can be toggled (radio with unselection)\n      nextSelection = Array.isArray(activeState)\n        ? {\n            ...nextSelection,\n            [selectionItem.id]: activeState,\n          }\n        : toggleInObject(\n            nextSelection,\n            selectionItem.id,\n            item.label || activeState || true,\n          );\n    }\n    onSelectChange({\n      item,\n      group,\n      selection: nextSelection,\n    });\n    // todo: just pass item on item and group when selection callback,\n    //  use onSelectchange for nextSelection\n    onSelectMenuItem(item, activeState, nextSelection);\n  };\n\n  const handleCloseOnClick = useCallback(({ item, group = {} }) => {\n    if (item.closeOnClick !== undefined) {\n      if (item.closeOnClick) closeMenu();\n      return;\n    }\n    if (group.closeOnClick !== undefined) {\n      if (group.closeOnClick) closeMenu();\n    }\n  }, []);\n\n  const valueProvider = useMemo(\n    () => ({\n      onItemClick: runAll(handleItemClick, handleCloseOnClick),\n      closeMenu,\n      openMenu,\n      isMenuOpen,\n      selection,\n    }),\n    [isMenuOpen, selection],\n  );\n  return (\n    <DropdownMenuContext.Provider value={valueProvider}>\n      {children}\n    </DropdownMenuContext.Provider>\n  );\n}\n\nexport default DropdownMenuProvider;\n","/* eslint-disable react/display-name */\nimport React, { useContext } from 'react';\nimport { runAll, get } from '@elliemae/ds-utilities/utils';\nimport DropdownMenuContext from './DropdownMenuContext';\n\nconst noop = () => null;\n\nfunction MenuItemGroupSelectionHOC(WrappedComponent, handlerName = 'onSelect') {\n  return ({ item = {}, ...restProps }) => {\n    const { onItemClick, selection } = useContext(DropdownMenuContext);\n    const propHandler = restProps[handlerName] || noop;\n    const handler = {\n      [handlerName]: (active, itemOption) =>\n        runAll(\n          item.onSelect,\n          onItemClick,\n          propHandler,\n        )({ item: itemOption, group: { ...item, active } }),\n    };\n    return (\n      <WrappedComponent\n        {...restProps}\n        {...(selection\n          ? { active: get(selection, [item.id]) || item.active }\n          : {})}\n        {...handler}\n      />\n    );\n  };\n}\n\nexport default MenuItemGroupSelectionHOC;\n","/* eslint-disable react/display-name */\nimport React, { useContext } from 'react';\nimport { runAll, get } from '@elliemae/ds-utilities/utils';\nimport DropdownMenuContext from './DropdownMenuContext';\n\nconst noop = () => null;\n\nconst defaultConfig = { type: 'default', handlerName: 'onClick' };\n\nfunction MenuItemClickableHOC(WrappedComponent, config) {\n  return ({ item = {}, ...restProps }) => {\n    const { type, handlerName } = { ...defaultConfig, ...config };\n    const { onItemClick, selection } = useContext(DropdownMenuContext);\n    const propHandler = restProps[handlerName] || noop;\n    const handler = {\n      [handlerName]: () => runAll(onItemClick, propHandler)({ item, type }),\n    };\n    return (\n      <WrappedComponent\n        {...restProps}\n        {...(type === 'selectable' && selection\n          ? { checked: get(selection, [item.id]) }\n          : {})}\n        {...handler}\n      />\n    );\n  };\n}\n\nexport default MenuItemClickableHOC;\n","import {\n  Menu,\n  renderMenuItems,\n  menuItemFactory,\n} from '@elliemae/ds-basic/Menu';\n\nimport MenuItemClickableHOC from './MenuItemClickableHOC';\nimport MenuItemGroupSelectionHOC from './MenuItemGroupSelectionHOC';\n\nconst itemTypes = {\n  separator: Menu.Separator,\n  menuitem: MenuItemClickableHOC(Menu.Item),\n  radio: MenuItemClickableHOC(Menu.ItemRadio, { type: 'selectable' }),\n  checkbox: MenuItemClickableHOC(Menu.ItemCheckbox, { type: 'selectable' }),\n  submenu: Menu.SubMenu,\n  'selection-group': MenuItemGroupSelectionHOC(Menu.SelectionGroup),\n};\n\nexport const factory = type =>\n  menuItemFactory(type, itemTypes, itemTypes.menuitem);\nexport const renderOptions = options => renderMenuItems(options, factory);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { DSCircularProgressIndicator } from '@elliemae/ds-basic/CircularProgressIndicator';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  height: 56px;\n`;\n\nconst LoadingIndicator = () => (\n  <Wrapper>\n    <DSCircularProgressIndicator size=\"m\" />\n  </Wrapper>\n);\n\nexport default LoadingIndicator;\n","import React, { useContext, useEffect, useMemo, useState } from 'react';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport { Menu } from '@elliemae/ds-basic/Menu';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport { runAll, isFunction } from '@elliemae/ds-utilities/utils';\nimport DropdownMenuContext from './DropdownMenuContext';\nimport { renderOptions, factory } from './decoratedMenuItemFactory';\nimport LoadingIndicator from './DropdownMenuLoadingIndicator';\n\nconst blockName = 'menu';\n\nconst getMax = options => {\n  let max = 0;\n  options.forEach(o => {\n    if (o && o.label && String(o.label).length > max)\n      max = String(o.label).length;\n  });\n  return max;\n};\n\nconst DropdownMenuRenderer = ({\n  containerProps,\n  className,\n  options = [],\n  triggerComponent,\n  placement,\n  interactionType,\n  preventOverflow,\n  customMenu,\n  contentOffset,\n  contentStyle,\n  isOpen,\n  children,\n  menuProps,\n  referenceNode,\n  focusOnOpen: focusOnOpenProp,\n  onClickOutsideMenu,\n  responsiveHeight,\n  itemsRenderer,\n  maxWidth,\n  minWidth,\n  zIndex,\n  type,\n  loading,\n}) => {\n  const [focusOnOpen, setFocusOnOpenMenu] = useState(focusOnOpenProp);\n  const { isMenuOpen, openMenu, closeMenu } = useContext(DropdownMenuContext);\n  const maxOption = useMemo(() => {\n    let max = 0;\n    options.forEach(o => {\n      if (o && o.label && String(o.label).length > max)\n        max = String(o.label).length;\n      if (o && o.items) {\n        const nestedMax = getMax(o.items);\n        if (nestedMax > max) max = nestedMax;\n      }\n    });\n    return max;\n  }, [options]);\n\n  const optionsRendererd = useMemo(() => {\n    if (options[0] && options[0].type === 'separator') {\n      options[0].showSeparator = false;\n    }\n    return isFunction(itemsRenderer)\n      ? itemsRenderer(options, factory)\n      : renderOptions(options);\n  }, [options]);\n\n  const dropdownBlockName = convertPropToCssClassName(blockName);\n\n  const menuContent = () => {\n    if (loading) return <LoadingIndicator />;\n    if (children) return children;\n    if (optionsRendererd) return optionsRendererd;\n  };\n\n  const MenuComponent = customMenu ? (\n    getComponentFromProps(customMenu, {\n      options,\n      focusOnOpen,\n      maxOption,\n      ...menuProps,\n      closeMenu,\n      loading,\n    })\n  ) : (\n    <Menu\n      closeMenu={closeMenu}\n      focusOnOpen={focusOnOpen}\n      maxOption={type === 'phone' ? maxOption : undefined}\n      maxWidth={maxWidth}\n      minWidth={minWidth}\n      onClickOutside={onClickOutsideMenu}\n      onExitFocusGroup={closeMenu}\n      responsiveHeight={responsiveHeight}\n      type={type}\n      visible\n      {...menuProps}\n    >\n      {menuContent()}\n    </Menu>\n  );\n\n  useEffect(() => {\n    setFocusOnOpenMenu(focusOnOpenProp);\n  });\n\n  return (\n    <DSPopper\n      blockName={dropdownBlockName}\n      containerProps={containerProps}\n      contentComponent={MenuComponent}\n      contentOffset={contentOffset}\n      contentStyle={contentStyle}\n      interactionType={interactionType}\n      isOpen={isOpen !== undefined ? isOpen : isMenuOpen}\n      onOpen={opening => (opening ? openMenu() : closeMenu())}\n      placement={placement}\n      preventOverflow={preventOverflow}\n      referenceNode={referenceNode}\n      showArrow={false}\n      triggerComponent={getComponentFromProps(triggerComponent, {\n        onClick:\n          interactionType === 'hover'\n            ? runAll(openMenu, triggerComponent.props.onClick)\n            : runAll(\n                !isMenuOpen ? openMenu : closeMenu,\n                triggerComponent.props.onClick,\n              ),\n        onMouseEnter: interactionType === 'hover' ? openMenu : undefined,\n        onKeyDown: e => {\n          if (e.key === 'ArrowDown' || e.key === ' ') {\n            e.preventDefault();\n            setFocusOnOpenMenu(true);\n            openMenu();\n          }\n        },\n        className: `${triggerComponent.props.className} ${className}`,\n      })}\n      zIndex={zIndex || menuProps.zIndex}\n    />\n  );\n};\n\nexport default DropdownMenuRenderer;\n","import React from 'react';\nimport DropdownMenuProvider from './DropdownMenuProvider';\nimport DropdownMenuRenderer from './DropdownMenuRenderer';\n\nfunction DropdownMenuWrapper(props) {\n  return (\n    <DropdownMenuProvider {...props}>\n      <DropdownMenuRenderer {...props} />\n    </DropdownMenuProvider>\n  );\n}\n\nexport default DropdownMenuWrapper;\n","export const Position = {\n  AUTO: 'auto',\n  AUTO_START: 'auto-start',\n  AUTO_END: 'auto-end',\n  BOTTOM: 'bottom',\n  BOTTOM_START: 'bottom-start',\n  BOTTOM_END: 'bottom-end',\n  LEFT: 'left',\n  LEFT_END: 'left-end',\n  LEFT_START: 'left-start',\n  RIGHT: 'right',\n  RIGHT_END: 'right-end',\n  RIGHT_START: 'right-start',\n  TOP: 'top',\n  TOP_START: 'top-start',\n  TOP_END: 'top-end',\n};\n\nexport const positions = [\n  Position.AUTO_START,\n  Position.AUTO_END,\n  Position.AUTO,\n  Position.TOP_START,\n  Position.TOP,\n  Position.TOP_END,\n  Position.RIGHT_START,\n  Position.RIGHT,\n  Position.RIGHT_END,\n  Position.BOTTOM_START,\n  Position.BOTTOM,\n  Position.BOTTOM_END,\n  Position.LEFT_START,\n  Position.LEFT,\n  Position.LEFT_END,\n];\n","export const Interaction = {\n  CLICK: 'click',\n  HOVER: 'hover',\n};\n\nexport const interactions = [Interaction.CLICK, Interaction.HOVER];\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport { TooltipTextProvider } from '@elliemae/ds-basic/TruncatedTooltipText';\n// todo: docgen handlers at the moment don't get data from alias\nimport { positions, Position } from '../../../ds-basic/src/Popper/positions';\nimport {\n  interactions,\n  Interaction,\n} from '../../../ds-basic/src/Popper/interaction';\nimport DropdownMenuWrapper from './DropdownMenuWrapper';\n\nconst noop = () => null;\n\nconst DSDropdownMenu = ({\n  containerProps = {},\n  className = '',\n  contentStyle = null,\n  options = [],\n  onSelectMenuItem = noop,\n  onOpenMenu = noop,\n  onClickOutsideMenu = noop,\n  preventOverflow = 'viewport',\n  placement = Position.BOTTOM_START,\n  interactionType = Interaction.CLICK,\n  triggerComponent = noop,\n  customMenu = null,\n  isOpen = undefined,\n  selection = {},\n  menuProps = {},\n  referenceNode = undefined,\n  focusOnOpen = false,\n  onClose = noop,\n  itemsRenderer = undefined,\n  responsiveHeight = false,\n  singleGroupSelection = false,\n  onSelectChange = noop,\n  minWidth = undefined,\n  maxWidth = undefined,\n  zIndex,\n  type,\n  loading = false,\n}) => (\n  <TooltipTextProvider>\n    <DropdownMenuWrapper\n      className={className}\n      containerProps={containerProps}\n      contentStyle={contentStyle}\n      customMenu={customMenu}\n      focusOnOpen={focusOnOpen}\n      interactionType={interactionType}\n      isOpen={isOpen}\n      itemsRenderer={itemsRenderer}\n      maxWidth={maxWidth}\n      menuProps={menuProps}\n      minWidth={minWidth}\n      onClickOutsideMenu={onClickOutsideMenu}\n      onClose={onClose}\n      onOpenMenu={onOpenMenu}\n      onSelectChange={onSelectChange}\n      onSelectMenuItem={onSelectMenuItem}\n      options={options}\n      placement={placement}\n      preventOverflow={preventOverflow}\n      referenceNode={referenceNode}\n      responsiveHeight={responsiveHeight}\n      selection={selection}\n      singleGroupSelection={singleGroupSelection}\n      triggerComponent={triggerComponent}\n      type={type}\n      zIndex={zIndex}\n      loading={loading}\n    />\n  </TooltipTextProvider>\n);\n\nconst dropdownMenuProps = {\n  containerProps: PropTypes.shape({}).description(\n    'Set of Properties attached to the main container',\n  ),\n  contentStyle: PropTypes.shape({}).description(\n    'Object style passed to the menu',\n  ),\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      type: PropTypes.string,\n      id: PropTypes.string,\n      label: PropTypes.string,\n    }),\n  ).description('Options items for the dropdown menu. Check menu item types'),\n  onSelectMenuItem: PropTypes.func.description(\n    'Handler when user clicks on a menu item',\n  ),\n  onOpenMenu: PropTypes.func.description('Handler when the menu shows up'),\n  /**  Handler when user clicks outside the menu */\n  onClickOutsideMenu: PropTypes.func.description(\n    'Handler when user clicks outside the menu',\n  ),\n  /** Prevent to move the menu outside of the container defined when interacting with the page  */\n  preventOverflow: PropTypes.oneOf([\n    'viewport',\n    'scrollParent',\n    'window',\n  ]).description(\n    'Prevent to move the menu outside of the container defined when interacting with the page',\n  ),\n  /** Menu placement */\n  placement: PropTypes.oneOf(positions).description('Menu placement'),\n  /** How to open the menu with click, hover */\n  interactionType: PropTypes.oneOf(interactions).description(\n    'How to open the menu with click, hover',\n  ),\n  /** The component that is going to open / close the menu */\n  triggerComponent: PropTypes.element.description(\n    'The component that is going to open / close the menu',\n  ),\n  /** Custom menu component */\n  customMenu: PropTypes.element.description('Custom menu component'),\n  /** Whether the menu is open or not */\n  isOpen: PropTypes.bool.description('Whether the menu is open or not'),\n  /** Selection state. Ex: { [itemId]: '{bool}', [idMultiSelectionItem]: '{string}' } */\n  selection: PropTypes.shape({}).description(\n    'Selection state. Ex: { [itemId]: {bool}, [idMultiSelectionItem]: {string} }',\n  ),\n  /** Props object passed to the menu component */\n  menuProps: PropTypes.shape({}).description(\n    'Props object passed to the menu component',\n  ),\n  /** Customize the items render */\n  itemsRenderer: PropTypes.func.description('Customize the items render'),\n  /** Customize menu format. Can be undefined or 'phone' */\n  type: PropTypes.string.description(\n    'Customize menu format. Can be undefined or \"phone\"',\n  ),\n  /** Customize menu minWidth. Can be undefined or 'number' */\n  minWidth: PropTypes.number.description(\n    'Customize menu minWidth. Can be undefined or \"number\"',\n  ),\n  /** Customize menu maxWidth. Can be undefined or 'number' */\n  maxWidth: PropTypes.number.description(\n    'Customize menu maxWidth. Can be undefined or \"number\"',\n  ),\n  /** Make the menu responsive, it uses a margin of 120 px */\n  responsiveHeight: PropTypes.bool.description(\n    'Make the menu responsive, it uses a margin of 120 px',\n  ),\n  /** Customize menu zIndex. Can be undefined or 'number' */\n  zIndex: PropTypes.number.description(\n    'Customize menu zIndex. Can be undefined or \"number\"',\n  ),\n  className: PropTypes.string.description('html class attribute'),\n  focusOnOpen: PropTypes.bool\n    .description('focus element on open or not')\n    .defaultValue(true),\n  loading: PropTypes.bool\n    .description('is loading content or not')\n    .defaultValue(false),\n  referenceNode: PropTypes.any.description('reference node'),\n  onClose: PropTypes.func.description('function called on close mene'),\n  onSelectChange: PropTypes.func.description(\n    'function called when selection changes',\n  ),\n  singleGroupSelection: PropTypes.bool.description(\n    'select items in same group or not',\n  ),\n};\n\nDSDropdownMenu.propTypes = dropdownMenuProps;\n\nconst DropdownMenuWithSchema = describe(DSDropdownMenu);\nDropdownMenuWithSchema.propTypes = dropdownMenuProps;\n\nexport { DropdownMenuWithSchema };\nexport default DSDropdownMenu;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentRect_1 = require(\"./ContentRect\");\nvar ResizeObservation = /** @class */ (function () {\n    function ResizeObservation(target) {\n        this.target = target;\n        this.$$broadcastWidth = this.$$broadcastHeight = 0;\n    }\n    Object.defineProperty(ResizeObservation.prototype, \"broadcastWidth\", {\n        get: function () {\n            return this.$$broadcastWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResizeObservation.prototype, \"broadcastHeight\", {\n        get: function () {\n            return this.$$broadcastHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResizeObservation.prototype.isActive = function () {\n        var cr = ContentRect_1.ContentRect(this.target);\n        return !!cr\n            && (cr.width !== this.broadcastWidth\n                || cr.height !== this.broadcastHeight);\n    };\n    return ResizeObservation;\n}());\nexports.ResizeObservation = ResizeObservation;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplT2JzZXJ2YXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvUmVzaXplT2JzZXJ2YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2Q0FBNEM7QUFFNUM7SUFlSSwyQkFBWSxNQUFlO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFWRCxzQkFBVyw2Q0FBYzthQUF6QjtZQUNJLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDO1FBQ2pDLENBQUM7OztPQUFBO0lBQ0Qsc0JBQVcsOENBQWU7YUFBMUI7WUFDSSxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztRQUNsQyxDQUFDOzs7T0FBQTtJQU9NLG9DQUFRLEdBQWY7UUFDSSxJQUFNLEVBQUUsR0FBRyx5QkFBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVwQyxPQUFPLENBQUMsQ0FBQyxFQUFFO2VBQ0osQ0FDQyxFQUFFLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxjQUFjO21CQUM3QixFQUFFLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxlQUFlLENBQ3hDLENBQUM7SUFDVixDQUFDO0lBQ0wsd0JBQUM7QUFBRCxDQUFDLEFBN0JELElBNkJDO0FBRVEsOENBQWlCIn0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentRect_1 = require(\"./ContentRect\");\nvar ResizeObserverEntry = /** @class */ (function () {\n    function ResizeObserverEntry(target) {\n        this.target = target;\n        this.contentRect = ContentRect_1.ContentRect(target);\n    }\n    return ResizeObserverEntry;\n}());\nexports.ResizeObserverEntry = ResizeObserverEntry;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplT2JzZXJ2ZXJFbnRyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9SZXNpemVPYnNlcnZlckVudHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQTRDO0FBRTVDO0lBR0ksNkJBQVksTUFBZTtRQUN2QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLHlCQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUNMLDBCQUFDO0FBQUQsQ0FBQyxBQVBELElBT0M7QUFFUSxrREFBbUIifQ==","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GroupContext } from './GroupContext';\n\nconst getValueItem = (e) => {\n  const { target, currentTarget } = e;\n  if (target) {\n    const { value } = target;\n    return value;\n  }\n  if (currentTarget) {\n    const { value } = currentTarget;\n    return value;\n  }\n  return e;\n};\n\nconst toggleItemValue = (array, e) => {\n  const newvalue = getValueItem(e);\n  const res = array;\n  const index = array.indexOf(newvalue);\n\n  if (index === -1) {\n    res.push(newvalue);\n  } else {\n    res.splice(index, 1);\n  }\n\n  return res;\n};\n\nconst { Provider } = GroupContext;\n/** deprecated use CheckableGroup instead */\nclass Group extends Component {\n  constructor(props) {\n    super(props);\n    const { activeValue, disabled } = props;\n    this.state = {\n      activeValue,\n      disabled,\n      prevValue: null,\n      onChange: this.handleChange.bind(this),\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, { prevValue }) {\n    if (nextProps.activeValue === prevValue) return null;\n    return {\n      activeValue: nextProps.activeValue,\n      prevValue: nextProps.activeValue,\n    };\n  }\n\n  handleChange(e, ...rest) {\n    const { multiple, onChange } = this.props;\n    const { activeValue } = this.state;\n    const value = getValueItem(e);\n    let newValue;\n    if (multiple) {\n      newValue = toggleItemValue(activeValue || [], value);\n    } else if (activeValue !== value) {\n      // default behaviour it will be toggle the active value\n      newValue = value;\n    }\n\n    this.setState({\n      activeValue: newValue,\n    });\n\n    if (onChange) onChange(newValue, ...rest);\n  }\n\n  render() {\n    const { children } = this.props;\n    return <Provider value={this.state}>{children}</Provider>;\n  }\n}\n\nGroup.defaultProps = {\n  multiple: false,\n};\n\nGroup.propTypes = {\n  children: PropTypes.array,\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  activeValue: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  disabled: PropTypes.bool,\n};\n\nexport default Group;\n","import React from 'react';\n\nexport const GroupContext = React.createContext();\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/no-unknown-property, jsx-a11y/label-has-for */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport DSTruncatedTooltipText from '../../../TruncatedTooltipText';\nimport RequiredMark from '../../RequiredMark';\n\nconst blockName = 'em-ds-label';\n\nconst Text = aggregatedClasses('span')(blockName, 'text');\n\nconst DSLabel = ({\n  children,\n  label,\n  htmlFor,\n  required,\n  optional,\n  truncateText = true,\n  isGroup = false,\n}) => {\n  const Tag = isGroup ? 'legend' : 'label';\n\n  return (\n    <Tag\n      className={`${blockName}${isGroup ? ` ${blockName}--group` : ''}`}\n      htmlFor={htmlFor}\n    >\n      {truncateText ? (\n        <DSTruncatedTooltipText value={children || label} />\n      ) : (\n        <Text>{label}</Text>\n      )}\n      <RequiredMark optional={optional} required={required} />\n    </Tag>\n  );\n};\n\nDSLabel.propTypes = {\n  children: PropTypes.string,\n  label: PropTypes.string,\n  htmlFor: PropTypes.string,\n  required: PropTypes.bool,\n  optional: PropTypes.bool,\n  truncateText: PropTypes.bool,\n  isGroup: PropTypes.bool,\n};\n\nexport default DSLabel;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { describe, PropTypes } from 'react-desc';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\n\n/**\n * if we don't care about word break\n * const regx = new RegExp(`.{1,${maxCharacters}}`, 'g')\n * text.match(regx)\n *\n * @param {*} param0\n */\nconst DSTextWrapper = ({\n  containerProps = {},\n  className = '',\n  style = {},\n  text = '',\n  maxCharacters = 0,\n  maxWidth = '100%',\n  textEllipsis = false,\n  textAlignment = 'left',\n  wordBreak = true,\n}) => {\n  const { cssClassName, classNameElement } = convertPropToCssClassName(\n    'text-wrapperRef',\n    className,\n    {\n      textEllipsis,\n      textAlignment,\n      wordBreak,\n    },\n  );\n  const limitPerCharacter = () =>\n    text.split(' ').reduce(\n      (result, word) => {\n        let resultIndex = result.length - 1;\n        if (result[resultIndex].length + word.length > maxCharacters)\n          resultIndex += 1;\n        result[resultIndex] = `${result[resultIndex] || ''} ${word}`;\n        return result;\n      },\n      [''],\n    );\n\n  let displayText = text;\n\n  if (textEllipsis)\n    displayText =\n      maxCharacters > 0 ? displayText.substring(0, maxCharacters) : displayText;\n  else if (maxCharacters > 0) {\n    displayText = limitPerCharacter().map((textpart, index) => (\n      <span key={index} className={classNameElement('line')}>\n        {textpart}\n      </span>\n    ));\n  }\n\n  return (\n    <span\n      {...containerProps}\n      className={cssClassName}\n      style={{\n        maxWidth: maxCharacters < 1 ? maxWidth : null,\n        ...style,\n      }}\n    >\n      {textEllipsis ? (\n        <span className={classNameElement('ellipsis-wrapperRef')}>\n          {displayText}\n        </span>\n      ) : (\n        displayText\n      )}\n    </span>\n  );\n};\n\nconst textWrapperProps = {\n  containerProps: PropTypes.object.description(\n    'Set of Properties attached to the main container',\n  ),\n  className: PropTypes.string.description('css class'),\n  style: PropTypes.object.description('css style'),\n  text: PropTypes.string.description('Text to display').isRequired,\n  maxCharacters: PropTypes.number\n    .description('Maximum amount of charachters allowed')\n    .defaultValue(0),\n  maxWidth: PropTypes.string\n    .description('Maximum width allowed')\n    .defaultValue('100%'),\n  textEllipsis: PropTypes.bool\n    .description('Whether to show ellipsis or not')\n    .defaultValue(false),\n  textAlignment: PropTypes.oneOf(['left', 'center', 'right'])\n    .description('Text alignement')\n    .defaultValue('left'),\n  wordBreak: PropTypes.bool\n    .description('Whether to break the line or not')\n    .defaultValue(true),\n};\n\nDSTextWrapper.propTypes = textWrapperProps;\n\nconst TextWrapperWithSchema = describe(DSTextWrapper);\nTextWrapperWithSchema.propTypes = textWrapperProps;\n\nexport { TextWrapperWithSchema };\nexport default DSTextWrapper;\n","/* eslint-disable prefer-template,max-statements,no-nested-ternary */\nfunction getSvgPath({\n  labelWidth = 50,\n  width = 200,\n  height = 35,\n  radiusStyle,\n  hasRightRadius = true,\n  hasLeftRadius = true,\n}) {\n  const notchWidth = labelWidth;\n  const isRtl = false;\n\n  const radius = parseFloat(radiusStyle);\n  const cornerWidth = radius + 1.3;\n  const leadingStrokeLength = 4;\n  const paddedNotchWidth = notchWidth + 8;\n\n  let extraSizeForH = 0;\n  let extraSizeForLeftV = 0;\n  let extraSizeForRightV = 0;\n  let extraSizeForTopH = radius;\n\n  if (!hasRightRadius) {\n    extraSizeForH += radius;\n    extraSizeForRightV = radius * 2;\n  }\n  if (!hasLeftRadius) {\n    extraSizeForH += radius;\n    extraSizeForLeftV = radius * 2;\n  }\n\n  if ((!hasLeftRadius && hasRightRadius) || (hasRightRadius && hasLeftRadius)) {\n    extraSizeForTopH = 0;\n  }\n\n  const pathMiddle =\n    '' +\n    (hasRightRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      : '') +\n    'v' +\n    (height - (2 * cornerWidth - (extraSizeForRightV + 1.5))) + // right vertical line\n    (hasRightRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      : '') +\n    'h' +\n    (-width + 2 * cornerWidth - extraSizeForH) +\n    (hasLeftRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      : '') +\n    'v' +\n    (-height + (2 * cornerWidth - (extraSizeForLeftV + 1.5))) + // left vertical line\n    (hasLeftRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius\n      : '');\n\n  let path;\n  if (!isRtl) {\n    path =\n      '' +\n      'M' +\n      (cornerWidth + leadingStrokeLength + paddedNotchWidth) +\n      ',' +\n      0.5 +\n      'h' +\n      (width -\n        2 * cornerWidth -\n        paddedNotchWidth -\n        leadingStrokeLength +\n        extraSizeForTopH) +\n      pathMiddle +\n      'h' +\n      leadingStrokeLength;\n  } else {\n    path =\n      '' +\n      'M' +\n      (width - cornerWidth - leadingStrokeLength) +\n      ',' +\n      0.5 +\n      'h' +\n      leadingStrokeLength +\n      pathMiddle +\n      'h' +\n      (width - 2 * cornerWidth - paddedNotchWidth - leadingStrokeLength);\n  }\n  return path;\n}\n\nexport default getSvgPath;\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport { ResizeObserver } from 'resize-observer';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport getSvgPath from './getSvgPath';\nimport DSTextWrapper from '../../TextWrapper/DSTextWrapper';\nimport RequiredMark from '../RequiredMark/RequiredMark';\n\nconst blockName = 'labeled-outline';\n\nconst Wrapper = aggregatedClasses('div')(blockName, null, ({ isOpen }) => ({\n  'has-value': isOpen,\n}));\nconst FloatingLabel = aggregatedClasses('label')(blockName, 'label');\nconst OutlineIdle = aggregatedClasses('div')(blockName, 'idle');\nconst Outline = aggregatedClasses('div')(blockName, 'outline');\nconst OutlinePath = aggregatedClasses('path')(blockName, 'outline__path');\n\nconst shouldUpdateSvgPath = ({ width, height, labelWidth }, prevSizes) => {\n  if (width !== prevSizes.width) return true;\n  if (height !== prevSizes.height) return true;\n  return labelWidth !== prevSizes.labelWidth;\n};\n\nclass FloatingLabelInputImpl extends Component {\n  resizeObserver = new ResizeObserver(() => this.updatePath());\n\n  prevSizes = {};\n\n  static defaultProps = { onChange: () => null };\n\n  constructor(props) {\n    super(props);\n    this.wrapperRef = React.createRef();\n    this.outlinePathRef = React.createRef();\n    this.outlineIdleRef = React.createRef();\n    this.labelRef = React.createRef();\n\n    this.updatePath = this.updatePath.bind(this);\n  }\n\n  componentDidMount() {\n    this.resizeObserver.observe(this.wrapperRef.current);\n  }\n\n  componentDidUpdate() {\n    if (!shouldUpdateSvgPath(this.sizes, this.prevSizes)) return;\n    this.updatePath();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver.unobserve(this.wrapperRef.current);\n  }\n\n  get sizes() {\n    const { current: labelEl } = this.labelRef;\n    const { current: wrapperEl } = this.wrapperRef;\n    const { current: outlineIdleEl } = this.outlineIdleRef;\n    const elStyles = window.getComputedStyle(outlineIdleEl);\n    const leftRadius = elStyles.getPropertyValue('border-top-left-radius');\n    const rightRadius = elStyles.getPropertyValue('border-top-right-radius');\n    const hasLeftRadius = parseFloat(leftRadius) !== 0;\n    const hasRightRadius = parseFloat(rightRadius) !== 0;\n    return {\n      labelWidth: labelEl.offsetWidth * 0.9,\n      width: wrapperEl.offsetWidth,\n      height: wrapperEl.offsetHeight,\n      radiusStyle: leftRadius,\n      hasLeftRadius,\n      hasRightRadius,\n    };\n  }\n\n  get isOpened() {\n    const { focused, isOpen, value } = this.props;\n    return (\n      focused || (Array.isArray(value) ? !!value.length : !!value) || isOpen\n    );\n  }\n\n  getValue(value) {\n    const { valueAccessor } = this.props;\n    if (valueAccessor) return valueAccessor(value);\n    // is an event\n    if (value && value.target) return value.target.value;\n\n    return value;\n  }\n\n  updatePath() {\n    const path = getSvgPath(this.sizes);\n    this.prevSizes = this.sizes;\n    this.outlinePathRef.current.setAttribute('d', path);\n  }\n\n  render() {\n    const {\n      ariaLabel,\n      hasError,\n      readOnly,\n      disabled,\n      inputComponent,\n      labelText,\n      onBlur,\n      onFocus,\n      innerRef,\n      extraInputProps,\n      required,\n      value,\n      onChange,\n      mask,\n      useSubfix,\n      optional,\n    } = this.props;\n\n    const inputProps = {\n      ariaLabel,\n      className: 'floating-label-input-controller',\n      disabled,\n      hasError,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      value,\n      innerRef,\n      mask,\n      useSubfix,\n      ...extraInputProps,\n    };\n    const InputComponent = getComponentFromProps(inputComponent, inputProps);\n    const isOpen = this.isOpened;\n\n    return (\n      <Wrapper\n        classProps={{\n          hasError,\n          isOpen,\n          readOnly,\n          disabled,\n        }}\n        innerRef={this.wrapperRef}\n        onBlur={() => null}\n        onFocus={() => null}\n        onMouseOut={this.handleMouseOut}\n        onMouseOver={this.handleMouseOver}\n      >\n        {InputComponent}\n        <FloatingLabel classProps={{ isOpen }} innerRef={this.labelRef}>\n          <DSTextWrapper maxWidth=\"100%\" text={labelText} />\n          <RequiredMark optional={optional} required={required} />\n        </FloatingLabel>\n        <Outline>\n          <svg>\n            <OutlinePath innerRef={this.outlinePathRef} />\n          </svg>\n        </Outline>\n        <OutlineIdle innerRef={this.outlineIdleRef} />\n      </Wrapper>\n    );\n  }\n}\n\nexport default FloatingLabelInputImpl;\n","import React from 'react';\nimport FloatingLabelInputImpl from './FloatingLabelInputImpl';\nimport DSLabel from '../FormItem/Label/DSLabel';\nimport DSTextBox from '../TextBox/DSTextBox';\n\nconst noop = () => {};\nconst DSFloatingLabelInput = ({\n  containerProps = {},\n  arialLabel = '',\n  /**\n   * Gets the reference for the input controller\n   *\n   * @param {HTMLElement} node\n   */\n  innerRef = noop,\n  /**\n   * Custom className for floatingLabelInput\n   */\n  className = '',\n  /**\n   * Props injected to the input component\n   *\n   * @type Object\n   */\n  extraInputProps = {},\n  /**\n   * Input controller\n   *\n   * @type {element}\n   */\n  inputComponent = DSTextBox,\n  /**\n   * Input value\n   *\n   * @type {string}\n   */\n  value = '',\n  /**\n   * Label component\n   *\n   * @type {element}\n   */\n  labelComponent = DSLabel,\n  /**\n   * Label text\n   *\n   * @type {string | element}\n   */\n  labelText = null,\n  /**\n   * Callback when input controller has changed\n   *\n   * @param event\n   */\n  onChange = noop,\n  onBlur = noop,\n  onFocus = noop,\n  /**\n   * Whether the label is floating or not\n   *\n   * @type {boolean}\n   */\n  isOpen = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  hasError = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  readOnly = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  disabled = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  required = false,\n  optional = false,\n  mask = null,\n  useSubfix = '',\n}) => (\n  <FloatingLabelInputImpl\n    arialLabel={arialLabel}\n    className={className}\n    disabled={disabled}\n    extraInputProps={extraInputProps}\n    hasError={hasError}\n    innerRef={innerRef}\n    inputComponent={inputComponent}\n    isOpen={isOpen}\n    labelComponent={labelComponent}\n    labelText={labelText}\n    mask={mask}\n    onBlur={onBlur}\n    onChange={onChange}\n    onFocus={onFocus}\n    optional={optional}\n    readOnly={readOnly}\n    required={required}\n    useSubfix={useSubfix}\n    value={value}\n  />\n);\n\nexport default DSFloatingLabelInput;\n","import React from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'form-item';\n\nconst FeedbackSpan = aggregatedClasses('span')(blockName, 'feedback');\n\nconst Feedback = ({ text, hasError }) => {\n  if (!text) return null;\n  return <FeedbackSpan classProps={hasError}>{text}</FeedbackSpan>;\n};\n\nexport default Feedback;\n","/* eslint-disable consistent-return */\nimport styled from 'styled-components';\n\nexport const Suffix = styled.div`\n  height: 2.16rem;\n  align-items: center;\n  display: flex;\n  ${props => {\n    if (props.label && !props.withFeedback) {\n      return `\n      padding-top: 1.2rem;\n      `;\n    }\n    if (!props.label && !props.withFeedback) {\n      return `\n      padding-top: 1rem;\n      `;\n    }\n  }}\n`;\n\nexport const SuffixInputWrapper = styled.div`\n  padding-right: 0.32rem;\n  flex: 1;\n`;\nexport const SuffixWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport default Suffix;\n","/* eslint-disable complexity */\n/* eslint-disable max-lines */\nimport React, { Fragment } from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport Group from '@elliemae/ds-shared/GroupContext/Group';\nimport DSInputGroup from '../InputGroup';\nimport DSFloatingLabelInput from '../FloatingLabelInput';\nimport DSTextBox from '../TextBox';\nimport DSLabel from './Label/DSLabel';\nimport Feedback from './Feedback';\nimport DSError from './Error/DSError';\nimport { Suffix, SuffixInputWrapper, SuffixWrapper } from './Suffix/Suffix';\n// import { maskTypes } from '../InputMask/MaskTypes';\n\nexport { DSError };\n\nconst blockName = 'form-item';\n\nconst Wrapper = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ leftLabel, variant }) => ({\n    'with-left-label': leftLabel,\n    [variant]: variant,\n  }),\n);\nconst WrapperContent = aggregatedClasses('div')(`${blockName}-content`);\nconst WrapperContentGroup = aggregatedClasses('fieldset')(\n  `${blockName}-content`,\n);\n\nexport const FORMITEM_LAYOUT_VARIANTS = {\n  DEFAULT: 'variant-default',\n  FOCUS: 'variant-focus',\n  ACTIVE: 'variant-active',\n  DISABLED: 'variant-disabled',\n  READ_ONLY: 'variant-read-only',\n  OPTIONAL: 'variant-optional',\n};\n\nconst DSFormItemLayout = ({\n  leftLabel = false,\n  floatingLabel = false,\n  name,\n  id,\n  value,\n  inputComponent: InputComponent = DSTextBox,\n  labelComponent: LabelComponent = DSLabel,\n  feedbackComponent: FeedbackComponent = Feedback,\n  labelText,\n  truncateText,\n  hasError = false,\n  // orientation = 'vertical', // one of [ vertical, horizontal ]\n  validationState, // one of [ success, error, warning ]\n  validationMessage = '',\n  feedbackMessage = '',\n  readOnly,\n  focused = false,\n  type,\n  autoFocus = () => {},\n  disabled = false,\n  onChange = () => {},\n  onBlur = () => {},\n  onFocus = () => {},\n  onPaste = () => {},\n  onKeyUp = () => {},\n  extraInputProps = {},\n  extraContent,\n  leftAddon = null,\n  rightAddon = null,\n  required = false,\n  optional = false,\n  mask,\n  useSubfix = '',\n  suffix = '',\n  variant = FORMITEM_LAYOUT_VARIANTS.DEFAULT,\n  containerProps = {},\n  ...rest\n}) => {\n  const isGroup = InputComponent.type === (<Group />).type;\n  const floatingLabelOverride = floatingLabel === 'UNSAFE';\n  const WrapperContentComp = !isGroup ? WrapperContent : WrapperContentGroup;\n\n  // group the input props to not duplicate it inside the specific inputComponent (floating or not)\n  const inputProps = {\n    ...extraInputProps,\n    disabled,\n    hasError: hasError || validationState === 'error',\n    id,\n    name,\n    type,\n    autofocus: autoFocus,\n    onBlur,\n    onChange,\n    onFocus,\n    onPaste,\n    onKeyUp,\n    readOnly,\n    value,\n    mask,\n    useSubfix,\n    variant,\n    required,\n    ...rest,\n  };\n\n  const renderInput = (Input) =>\n    leftAddon || rightAddon ? (\n      <DSInputGroup\n        leftAddon={leftAddon}\n        rightAddon={rightAddon}\n        variant={variant}\n      >\n        {Input}\n      </DSInputGroup>\n    ) : (\n      Input\n    );\n\n  const renderFloating = (\n    <DSFloatingLabelInput\n      {...inputProps}\n      extraInputProps={extraInputProps}\n      focused={focused}\n      inputComponent={InputComponent}\n      labelComponent={LabelComponent}\n      labelText={labelText}\n      optional={optional}\n      required={required}\n      variant={variant}\n    />\n  );\n\n  const InputWithLabel = floatingLabelOverride ? (\n    renderInput(renderFloating)\n  ) : (\n    <>\n      <LabelComponent\n        htmlFor={id || name}\n        label={labelText}\n        optional={optional}\n        required={required}\n        isGroup={isGroup}\n        truncateText={truncateText}\n      />\n      {renderInput(getComponentFromProps(InputComponent, inputProps))}\n    </>\n  );\n\n  if (suffix) {\n    return (\n      <Wrapper\n        classProps={{\n          disabled,\n          readOnly,\n          hasError,\n          leftLabel,\n          variant,\n        }}\n        {...containerProps}\n      >\n        <SuffixWrapper className=\"suffix-wrapper\">\n          <SuffixInputWrapper className=\"suffix-input-wrapper\">\n            <WrapperContentComp>\n              {InputWithLabel}\n              {extraContent}\n            </WrapperContentComp>\n            <FeedbackComponent\n              hasError={hasError}\n              text={\n                validationState || hasError\n                  ? validationMessage\n                  : feedbackMessage\n              }\n            />\n          </SuffixInputWrapper>\n          <Suffix\n            className=\"suffix-label\"\n            label={!!labelText}\n            withFeedback={Boolean(validationMessage || feedbackMessage)}\n          >\n            {suffix}\n          </Suffix>\n        </SuffixWrapper>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <Wrapper\n      classProps={{\n        disabled,\n        readOnly,\n        hasError,\n        leftLabel,\n        variant,\n      }}\n      {...containerProps}\n    >\n      <WrapperContentComp>\n        {InputWithLabel}\n        {extraContent}\n      </WrapperContentComp>\n      <FeedbackComponent\n        hasError={hasError}\n        text={validationState || hasError ? validationMessage : feedbackMessage}\n      />\n    </Wrapper>\n  );\n};\n\nconst props = {\n  /** props to inject to form item layout wrapper */\n  containerProps: PropTypes.object.description(\n    'props to inject to form item layout wrapper',\n  ),\n  /** position label on the left */\n  leftLabel: PropTypes.bool.description('position label on the left'),\n  /** turn on floating label */\n  floatingLabel: PropTypes.bool.description('turn on floating label'),\n  /** id for form item layout */\n  id: PropTypes.string.description('id for form item layout'),\n  /** html name prop for form tags */\n  name: PropTypes.string.description('html name prop for form tags'),\n  /** form item layout element value */\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n  ]).description('form item layout element value'),\n  /** Any input component */\n  inputComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n  ]).description('Any input component'),\n  /** Label component  */\n  labelComponent: PropTypes.element.description('Label component'),\n  /** feedback component to embed on form item */\n  feedbackComponent: PropTypes.node.description(\n    'feedback component to embed on form item',\n  ),\n  /** label text */\n  labelText: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]).description('label text'),\n  /** error state */\n  hasError: PropTypes.bool.description('error state'),\n  /** validation state */\n  validationState: PropTypes.oneOf(['success', 'error', 'warning']).description(\n    'validation state',\n  ),\n  /** validation message */\n  validationMessage: PropTypes.string.description('validation message'),\n  /** feedback message */\n  feedbackMessage: PropTypes.string.description('feedback message'),\n  /** read only form item */\n  readOnly: PropTypes.bool.description('read only form item'),\n  /** focused state */\n  focused: PropTypes.bool.description('focused state'),\n  /** input type */\n  type: PropTypes.string.description('input type'),\n  /** auto focus input */\n  autoFocus: PropTypes.func.description('auto focus input'),\n  /** disabled state */\n  disabled: PropTypes.bool.description('disabled state'),\n  /** on change handler */\n  onChange: PropTypes.func.description('on change handler'),\n  /** on blur handler */\n  onBlur: PropTypes.func.description('on blur handler'),\n  /** extra input props to inject */\n  extraInputProps: PropTypes.object.description('extra input props to inject'),\n  /** extra content */\n  extraContent: PropTypes.element.description('extra content'),\n  /** left addon for form item */\n  leftAddon: PropTypes.element.description('left addon for form item'),\n  /** right addon for form item */\n  rightAddon: PropTypes.element.description('right addon for form item'),\n  /** add required mark */\n  required: PropTypes.bool.description('add required mark'),\n  /** add optional mark */\n  optional: PropTypes.bool.description('add optional mark'),\n  /** on focus handler */\n  onFocus: PropTypes.func.description('on focus handler'),\n  /** on paste handler */\n  onPaste: PropTypes.func.description('on paste handler'),\n  /** add truncation and ellipsis */\n  truncateText: PropTypes.bool.description('add truncation and ellipsis'),\n  /** on key up event handler */\n  onKeyUp: PropTypes.func.description('on key up event handler'),\n  /** mask for input mask component */\n  mask: PropTypes.oneOfType([\n    // PropTypes.oneOf(maskTypes),\n    PropTypes.string,\n    PropTypes.func,\n  ]).description('mask for input mask component'),\n  /** add suffix to input */\n  useSubfix: PropTypes.string.description('add suffix to input'),\n  /** suffix for input */\n  suffix: PropTypes.string.description('suffix for input'),\n  /** form item layout type */\n  variant: PropTypes.oneOf([\n    FORMITEM_LAYOUT_VARIANTS.DEFAULT,\n    FORMITEM_LAYOUT_VARIANTS.FOCUS,\n    FORMITEM_LAYOUT_VARIANTS.ACTIVE,\n    FORMITEM_LAYOUT_VARIANTS.DISABLED,\n    FORMITEM_LAYOUT_VARIANTS.READ_ONLY,\n    FORMITEM_LAYOUT_VARIANTS.OPTIONAL,\n  ]).description('form item layout type'),\n};\n\nDSFormItemLayout.propTypes = props;\nconst DSFormItemLayoutWithSchema = describe(DSFormItemLayout);\nDSFormItemLayoutWithSchema.propTypes = props;\n\nexport default DSFormItemLayout;\nexport { DSFormItemLayoutWithSchema };\n","const dollarSign = '$';\nconst emptyString = '';\nconst comma = ',';\nconst period = '.';\nconst minus = '-';\nconst minusRegExp = /-/;\nconst nonDigitsRegExp = /\\D+/g;\nconst number = 'number';\nconst digitRegExp = /\\d/;\nconst caretTrap = '[]';\n\nconst convertToMask = strNumber =>\n  strNumber\n    .split(emptyString)\n    .map(char => (digitRegExp.test(char) ? digitRegExp : char));\n\n// http://stackoverflow.com/a/10899795/604296\nconst addThousandsSeparator = (n, thousandsSeparatorSymbol) =>\n  n.replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandsSeparatorSymbol);\n\nexport default function createNumberMask({\n  prefix = dollarSign,\n  suffix = emptyString,\n  includeThousandsSeparator = true,\n  thousandsSeparatorSymbol = comma,\n  allowDecimal = false,\n  decimalSymbol = period,\n  decimalLimit = 2,\n  requireDecimal = false,\n  allowNegative = false,\n  allowLeadingZeroes = false,\n  integerLimit = null,\n} = {}) {\n  const prefixLength = (prefix && prefix.length) || 0;\n  const suffixLength = (suffix && suffix.length) || 0;\n  const thousandsSeparatorSymbolLength =\n    (thousandsSeparatorSymbol && thousandsSeparatorSymbol.length) || 0;\n\n  // eslint-disable-next-line max-statements\n  function numberMask(rawValue = emptyString) {\n    const rawValueLength = rawValue.length;\n    if (\n      rawValueLength === 1 &&\n      !Number.isInteger(parseInt(rawValue[0], 10)) &&\n      allowNegative === false\n    ) {\n      return [''];\n    }\n    if (\n      rawValue === emptyString ||\n      (rawValue[0] === prefix[0] && rawValueLength === 1)\n    ) {\n      return prefix\n        .split(emptyString)\n        .concat([digitRegExp])\n        .concat(suffix.split(emptyString));\n    }\n    if (rawValue === decimalSymbol && allowDecimal) {\n      return prefix\n        .split(emptyString)\n        .concat(['0', decimalSymbol, digitRegExp])\n        .concat(suffix.split(emptyString));\n    }\n\n    const isNegative = rawValue[0] === minus && allowNegative;\n    // If negative remove \"-\" sign\n    if (isNegative) {\n      rawValue = rawValue.toString().substr(1);\n    }\n\n    const indexOfLastDecimal = rawValue.lastIndexOf(decimalSymbol);\n    const hasDecimal = indexOfLastDecimal !== -1;\n\n    let integer;\n    let fraction;\n    let mask;\n\n    // remove the suffix\n    if (rawValue.slice(suffixLength * -1) === suffix) {\n      rawValue = rawValue.slice(0, suffixLength * -1);\n    }\n\n    if (hasDecimal && (allowDecimal || requireDecimal)) {\n      integer = rawValue.slice(\n        rawValue.slice(0, prefixLength) === prefix ? prefixLength : 0,\n        indexOfLastDecimal,\n      );\n\n      fraction = rawValue.slice(indexOfLastDecimal + 1, rawValueLength);\n      fraction = convertToMask(fraction.replace(nonDigitsRegExp, emptyString));\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (rawValue.slice(0, prefixLength) === prefix) {\n        integer = rawValue.slice(prefixLength);\n      } else {\n        integer = rawValue;\n      }\n    }\n\n    // eslint-disable-next-line valid-typeof\n    if (integerLimit && typeof integerLimit === number) {\n      const thousandsSeparatorRegex =\n        thousandsSeparatorSymbol === '.'\n          ? '[.]'\n          : `${thousandsSeparatorSymbol}`;\n      const numberOfThousandSeparators = (\n        integer.match(new RegExp(thousandsSeparatorRegex, 'g')) || []\n      ).length;\n\n      integer = integer.slice(\n        0,\n        integerLimit +\n          numberOfThousandSeparators * thousandsSeparatorSymbolLength,\n      );\n    }\n\n    integer = integer.replace(nonDigitsRegExp, emptyString);\n\n    if (!allowLeadingZeroes) {\n      integer = integer.replace(/^0+(0$|[^0])/, '$1');\n    }\n\n    integer = includeThousandsSeparator\n      ? addThousandsSeparator(integer, thousandsSeparatorSymbol)\n      : integer;\n\n    mask = convertToMask(integer);\n\n    if ((hasDecimal && allowDecimal) || requireDecimal === true) {\n      if (rawValue[indexOfLastDecimal - 1] !== decimalSymbol) {\n        mask.push(caretTrap);\n      }\n\n      mask.push(decimalSymbol, caretTrap);\n\n      if (fraction) {\n        // eslint-disable-next-line valid-typeof\n        if (typeof decimalLimit === number) {\n          fraction = fraction.slice(0, decimalLimit);\n        }\n\n        mask = mask.concat(fraction);\n      }\n\n      if (\n        requireDecimal === true &&\n        rawValue[indexOfLastDecimal - 1] === decimalSymbol\n      ) {\n        mask.push(digitRegExp);\n      }\n    }\n\n    if (prefixLength > 0) {\n      mask = prefix.split(emptyString).concat(mask);\n    }\n\n    if (isNegative) {\n      // If user is entering a negative number, add a mask placeholder spot to attract the caret to it.\n      if (mask.length === prefixLength) {\n        mask.push(digitRegExp);\n      }\n\n      mask = [minusRegExp].concat(mask);\n    }\n\n    if (suffix.length > 0) {\n      mask = mask.concat(suffix.split(emptyString));\n    }\n\n    return mask;\n  }\n\n  numberMask.instanceOf = 'createNumberMask';\n\n  return numberMask;\n}\n","const percentSign = '%';\nconst emptyString = '';\nconst comma = ',';\nconst period = '.';\nconst minus = '-';\nconst minusRegExp = /-/;\nconst nonDigitsRegExp = /\\D+/g;\nconst number = 'number';\nconst digitRegExp = /\\d/;\nconst caretTrap = '[]';\n\nconst convertToMask = strNumber =>\n  strNumber\n    .split(emptyString)\n    .map(char => (digitRegExp.test(char) ? digitRegExp : char));\n\n// http://stackoverflow.com/a/10899795/604296\nconst addThousandsSeparator = (n, thousandsSeparatorSymbol) =>\n  n.replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousandsSeparatorSymbol);\n\nexport default function createPercentMask({\n  prefix = emptyString,\n  suffix = percentSign,\n  includeThousandsSeparator = true,\n  thousandsSeparatorSymbol = comma,\n  allowDecimal = false,\n  decimalSymbol = period,\n  decimalLimit = 2,\n  requireDecimal = false,\n  allowNegative = false,\n  allowLeadingZeroes = false,\n  integerLimit = null,\n} = {}) {\n  const prefixLength = (prefix && prefix.length) || 0;\n  const suffixLength = (suffix && suffix.length) || 0;\n  const thousandsSeparatorSymbolLength =\n    (thousandsSeparatorSymbol && thousandsSeparatorSymbol.length) || 0;\n\n  // eslint-disable-next-line max-statements\n  function numberMask(rawValue = emptyString) {\n    const rawValueLength = rawValue.length;\n    if (\n      rawValueLength === 1 &&\n      !Number.isInteger(parseInt(rawValue[0], 10)) &&\n      allowNegative === false\n    ) {\n      return [''];\n    }\n    if (\n      rawValue === emptyString ||\n      (rawValue[0] === prefix[0] && rawValueLength === 1)\n    ) {\n      return prefix\n        .split(emptyString)\n        .concat([digitRegExp])\n        .concat(suffix.split(emptyString));\n    }\n    if (rawValue === decimalSymbol && allowDecimal) {\n      return prefix\n        .split(emptyString)\n        .concat(['0', decimalSymbol, digitRegExp])\n        .concat(suffix.split(emptyString));\n    }\n\n    const isNegative = rawValue[0] === minus && allowNegative;\n    // If negative remove \"-\" sign\n    if (isNegative) {\n      rawValue = rawValue.toString().substr(1);\n    }\n\n    const indexOfLastDecimal = rawValue.lastIndexOf(decimalSymbol);\n    const hasDecimal = indexOfLastDecimal !== -1;\n\n    let integer;\n    let fraction;\n    let mask;\n\n    // remove the suffix\n    if (rawValue.slice(suffixLength * -1) === suffix) {\n      rawValue = rawValue.slice(0, suffixLength * -1);\n    }\n\n    if (hasDecimal && (allowDecimal || requireDecimal)) {\n      integer = rawValue.slice(\n        rawValue.slice(0, prefixLength) === prefix ? prefixLength : 0,\n        indexOfLastDecimal,\n      );\n\n      fraction = rawValue.slice(indexOfLastDecimal + 1, rawValueLength);\n      fraction = convertToMask(fraction.replace(nonDigitsRegExp, emptyString));\n    } else {\n      // eslint-disable-next-line no-lonely-if\n      if (rawValue.slice(0, prefixLength) === prefix) {\n        integer = rawValue.slice(prefixLength);\n      } else {\n        integer = rawValue;\n      }\n    }\n\n    // eslint-disable-next-line valid-typeof\n    if (integerLimit && typeof integerLimit === number) {\n      const thousandsSeparatorRegex =\n        thousandsSeparatorSymbol === '.'\n          ? '[.]'\n          : `${thousandsSeparatorSymbol}`;\n      const numberOfThousandSeparators = (\n        integer.match(new RegExp(thousandsSeparatorRegex, 'g')) || []\n      ).length;\n\n      integer = integer.slice(\n        0,\n        integerLimit +\n          numberOfThousandSeparators * thousandsSeparatorSymbolLength,\n      );\n    }\n\n    integer = integer.replace(nonDigitsRegExp, emptyString);\n\n    if (!allowLeadingZeroes) {\n      integer = integer.replace(/^0+(0$|[^0])/, '$1');\n    }\n\n    integer = includeThousandsSeparator\n      ? addThousandsSeparator(integer, thousandsSeparatorSymbol)\n      : integer;\n\n    mask = convertToMask(integer);\n\n    if ((hasDecimal && allowDecimal) || requireDecimal === true) {\n      if (rawValue[indexOfLastDecimal - 1] !== decimalSymbol) {\n        mask.push(caretTrap);\n      }\n\n      mask.push(decimalSymbol, caretTrap);\n\n      if (fraction) {\n        // eslint-disable-next-line valid-typeof\n        if (typeof decimalLimit === number) {\n          fraction = fraction.slice(0, decimalLimit);\n        }\n\n        mask = mask.concat(fraction);\n      }\n\n      if (\n        requireDecimal === true &&\n        rawValue[indexOfLastDecimal - 1] === decimalSymbol\n      ) {\n        mask.push(digitRegExp);\n      }\n    }\n\n    if (prefixLength > 0) {\n      mask = prefix.split(emptyString).concat(mask);\n    }\n\n    if (isNegative) {\n      // If user is entering a negative number, add a mask placeholder spot to attract the caret to it.\n      if (mask.length === prefixLength) {\n        mask.push(digitRegExp);\n      }\n\n      mask = [minusRegExp].concat(mask);\n    }\n\n    if (suffix.length > 0) {\n      mask = mask.concat(suffix.split(emptyString));\n    }\n\n    return mask;\n  }\n\n  numberMask.instanceOf = 'createPercentMask';\n\n  return numberMask;\n}\n","import createNumberMask from './addons/NumberMask';\nimport createPercentMask from './addons/PercentMask';\n\nexport const MASK_TYPES = {\n  DATE: [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/],\n  DATE_TIME: [\n    /\\d/,\n    /\\d/,\n    '/',\n    /\\d/,\n    /\\d/,\n    '/',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    ' ',\n    /[0-2]/,\n    /[0-9]/,\n    ':',\n    /[0-5]/,\n    /[0-9]/,\n  ],\n  PHONE: [\n    '(',\n    /[1-9]/,\n    /\\d/,\n    /\\d/,\n    ')',\n    ' ',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    '-',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n  ],\n  PHONE_INTENATIONAL: [\n    '+',\n    '1',\n    ' ',\n    '(',\n    /[1-9]/,\n    /\\d/,\n    /\\d/,\n    ')',\n    ' ',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    '-',\n    /\\d/,\n    /\\d/,\n    /\\d/,\n    /\\d/,\n  ],\n  SSN: [/\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n  US_ZIP_CODE: [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/],\n  NUMBER: createNumberMask,\n  PERCENT: createPercentMask,\n};\n\nexport const maskTypes = [\n  MASK_TYPES.DATE,\n  MASK_TYPES.DATE_TIME,\n  MASK_TYPES.PHONE,\n  MASK_TYPES.PHONE_INTENATIONAL,\n  MASK_TYPES.SSN,\n  MASK_TYPES.US_ZIP_CODE,\n  MASK_TYPES.NUMBER,\n  MASK_TYPES.PERCENT,\n];\n","export const BUTTON_TYPE = {\n  PRIMARY: 'primary',\n  SECONDARY: 'secondary',\n  TEXT: 'text',\n  LINK: 'link',\n};\n\nexport const buttonTypes = ['primary', 'secondary', 'text', 'link'];\n\nexport const BUTTON_SIZE = {\n  S: 's',\n  M: 'm',\n  L: 'l',\n};\n\nexport const BUTTON_INTENT = {\n  DANGER: 'danger',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  INFO: 'info',\n};\n\nexport const BUTTON_VARIANT = {\n  DEFAULT: 'variant-default',\n  FOCUS: 'variant-focus',\n  ACTIVE: 'variant-active',\n  DISABLED: 'variant-disabled',\n  HOVER: 'variant-hover',\n};\n\nexport const CHECKBOX_VARIANT = {\n  DEFAULT: 'variant-default',\n  FOCUS: 'variant-focus',\n  ACTIVE: 'variant-active',\n  DISABLED: 'variant-disabled',\n  ERROR: 'variant-error',\n};\nexport const checkboxVariants = [\n  CHECKBOX_VARIANT.DEFAULT,\n  CHECKBOX_VARIANT.FOCUS,\n  CHECKBOX_VARIANT.ACTIVE,\n  CHECKBOX_VARIANT.DISABLED,\n  CHECKBOX_VARIANT.ERROR,\n];\n\nexport const COMBOBOX_VARIANT = {\n  DEFAULT: 'variant-default',\n  FOCUS: 'variant-focus-input',\n  FOCUS_ICON: 'variant-focus-icon',\n  ACTIVE: 'variant-active-input',\n  ACTIVE_ICON: 'variant-active-icon',\n  DISABLED: 'variant-disabled',\n  ERROR: 'variant-error',\n};\n\nexport const comboBoxVariants = [\n  COMBOBOX_VARIANT.DEFAULT,\n  COMBOBOX_VARIANT.FOCUS,\n  COMBOBOX_VARIANT.FOCUS_ICON,\n  COMBOBOX_VARIANT.ACTIVE,\n  COMBOBOX_VARIANT.ACTIVE_ICON,\n  COMBOBOX_VARIANT.DISABLED,\n  COMBOBOX_VARIANT.ERROR,\n];\n\nexport const buttonVariants = [\n  'variant-default',\n  'variant-focus',\n  'variant-active',\n  'variant-disabled',\n  'variant-hover',\n];\n\nexport const sizes = ['s', 'm', 'l'];\n\nexport const orientation = ['horizontal', 'vertical'];\n","/* eslint-disable no-unused-vars */\n// import PropTypes from 'prop-types';\nimport { PropTypes } from 'react-desc';\nimport {\n  BUTTON_TYPE,\n  sizes,\n  buttonTypes,\n  buttonVariants,\n  BUTTON_SIZE,\n  BUTTON_VARIANT,\n} from '../utils/prop-types';\n\nexport const btnPropTypes = {\n  /**\n   * Tab index\n   */\n  tabIndex: PropTypes.number.description('Tab index'),\n  /**\n   * Additional className\n   */\n  className: PropTypes.string.description('Additional className'),\n  /**\n   * aria disabled\n   */\n  'aria-disabled': PropTypes.string.description('aria disabled'),\n  /**\n   * Html tag. default 'button'\n   */\n  as: PropTypes.string.description('Html tag').defaultValue('button'),\n  /**\n   * Whether the button is disabled or not\n   */\n  disabled: PropTypes.bool.description('Whether the button is disabled or not'),\n  /**\n   * Make the content of the button fit the button container or not\n   */\n  fluidWidth: PropTypes.bool.description(\n    'Make the content of the button fit the button container or not',\n  ),\n  /**\n   * Displayable label inside the button\n   */\n  labelText: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]).description('Displayable label inside the button'),\n  /**\n   * Put an icon inside the button\n   */\n  icon: PropTypes.element.description('Put an icon inside the button'),\n  /**\n   * Put an icon on the left side of the button\n   */\n  leftIcon: PropTypes.element.description(\n    'Put an icon on the left side of the button',\n  ),\n  /**\n   * ['primary', 'secondary', 'text', 'link']\n   */\n  buttonType: PropTypes.oneOf(buttonTypes).description('type of the button'),\n  /**\n   * ['s', 'm', 'l']\n   */\n  size: PropTypes.oneOf(sizes).description('size of the button'),\n  /**\n   * submit or button\n   */\n  type: PropTypes.oneOf(['button', 'submit']).description('type of the button'),\n  /**\n   * [\n   *  'variant-default',\n   *  'variant-focus',\n   *  'variant-active',\n   *  'variant-disabled',\n   * ]\n   */\n  variant: PropTypes.oneOf(buttonVariants).description('variant of the button'),\n  /**\n   * Refence\n   */\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]).description('reference to the component'),\n  /**\n   * Onblur callback\n   */\n  onBlur: PropTypes.func.description(\n    'Allows a function that is triggered once the button is blur',\n  ),\n  /**\n   * Apply intent color: ['success', 'warning', 'danger', 'info']\n   * Only valid with buttonType=\"text\"\n   */\n  intent: PropTypes.oneOf(['success', 'warning', 'danger', 'info']).description(\n    'Apply intent color. Only valid with buttonType=\"text\"',\n  ),\n  /**\n   * additional props for the container\n   */\n  containerProps: PropTypes.object.description(\n    'additional props for the container',\n  ),\n  /**\n   * Allows a function that is triggered once the button is clicked\n   */\n  onClick: PropTypes.func.description(\n    'Allows a function that is triggered once the button is clicked',\n  ),\n  /**\n   * Allows a function that is triggered once the button is key pressed\n   */\n  onKeyPress: PropTypes.func.description(\n    'Allows a function that is triggered once the button is key pressed',\n  ),\n};\n","/* eslint-disable max-lines */\n/* eslint-disable jest/valid-describe */\n/* eslint-disable jest/valid-title */\nimport React, { useState, useMemo } from 'react';\nimport {\n  aggregatedClasses,\n  convertPropToCssClassName,\n} from '@elliemae/ds-classnames';\nimport { cx } from '@elliemae/ds-utilities/utils';\nimport { describe } from 'react-desc';\nimport {\n  BUTTON_TYPE,\n  buttonTypes,\n  buttonVariants,\n  BUTTON_SIZE,\n  BUTTON_VARIANT,\n} from '../utils/prop-types';\nimport { btnPropTypes } from './propTypes';\n\nconst blockName = 'button';\n\nconst getContainer = (Element) =>\n  aggregatedClasses(Element)(\n    blockName,\n    null,\n    ({ iconOnly, variant }) => ({\n      'icon-only': iconOnly,\n      [variant]: variant,\n    }),\n    {\n      propsToRemoveFromFinalElement: ['cx'],\n    },\n  );\n\n// eslint-disable-next-line complexity\nconst DSButton = ({\n  innerRef,\n  disabled = false,\n  buttonType = BUTTON_TYPE.PRIMARY,\n  fluidWidth = false,\n  size = BUTTON_SIZE.M,\n  labelText = '',\n  icon = null,\n  onBlur = () => null,\n  onClick = () => null,\n  onKeyPress = () => null,\n  leftIcon = null,\n  tabIndex = 0,\n  variant = BUTTON_VARIANT.DEFAULT,\n  intent,\n  containerProps = {},\n  className,\n  as: Component = 'button',\n  type = 'button',\n  ...rest\n}) => {\n  const [pressed, setPressed] = useState(false);\n  const Button = useMemo(() => getContainer(Component), [Component]);\n  const intentBlockName = `${blockName}${intent ? `-${intent}` : ''}`;\n  const { cssClassName: intentClassName } = convertPropToCssClassName(\n    intentBlockName,\n  );\n  return (\n    <Button\n      data-testid={containerProps['data-testid'] || 'button-wrapper'}\n      {...rest}\n      {...containerProps}\n      aria-disabled={\n        rest['aria-disabled'] !== undefined ? rest['aria-disabled'] : disabled\n      }\n      aria-label={rest['aria-label'] || labelText || 'button'}\n      aria-pressed={pressed}\n      className={cx(intentClassName, className)}\n      classProps={{\n        disabled,\n        buttonType,\n        size,\n        fluidWidth,\n        iconOnly: !labelText && (icon || leftIcon),\n        variant: disabled ? BUTTON_VARIANT.DISABLED : variant,\n      }}\n      disabled={disabled} // https://jira.elliemae.io/browse/PUI-1215\n      innerRef={innerRef}\n      onBlur={(e) => {\n        if (disabled) return;\n        setPressed(false);\n        onBlur(e);\n      }}\n      onClick={(e) => {\n        if (disabled) return;\n        setPressed(true);\n        onClick(e);\n      }}\n      onKeyPress={(e) => {\n        if (disabled) return;\n        e.preventDefault();\n        if (e.key === 'Enter') {\n          setPressed(true);\n          onClick(e);\n        }\n        onKeyPress(e);\n      }}\n      tabIndex={tabIndex}\n      type={type}\n    >\n      {leftIcon}\n      {labelText && (\n        <span\n          className={`label-wrapper ${\n            icon || leftIcon ? 'with-icon' : 'no-icon'\n          }`}\n          data-testid=\"button-label\"\n          role=\"presentation\"\n        >\n          <span>{labelText}</span>\n        </span>\n      )}\n      {icon}\n    </Button>\n  );\n};\n\nDSButton.propTypes = btnPropTypes;\n\nconst DSButtonWithSchema = describe(DSButton).description('A button');\nDSButtonWithSchema.propTypes = btnPropTypes;\n\nexport {\n  BUTTON_TYPE,\n  BUTTON_SIZE,\n  BUTTON_VARIANT,\n  buttonVariants,\n  buttonTypes,\n  DSButtonWithSchema,\n};\n\nexport default DSButton;\n","/* eslint-disable no-multi-assign,no-loops/no-loops, no-plusplus */\nif (\n  global &&\n  global.Element &&\n  global.Element.prototype &&\n  global.Element.prototype.remove === undefined\n) {\n  window.Element.prototype.remove = function() {\n    this.parentElement.removeChild(this);\n  };\n  NodeList.prototype.remove = HTMLCollection.prototype.remove = function() {\n    for (let i = this.length - 1; i >= 0; i--) {\n      if (this[i] && this[i].parentElement) {\n        this[i].parentElement.removeChild(this[i]);\n      }\n    }\n  };\n}\n","/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport { isFunction } from '@elliemae/ds-utilities/utils';\nimport { DOCUMENT } from '@elliemae/ds-utilities/platform';\nimport './ie-remove-polyfill';\n\nconst blockName = 'portal';\n\nconst canRenderPortal = isFunction(ReactDOM.createPortal);\n\n// TODO: If this is rendered on server, is going to break\n\nexport default class DSPortal extends Component {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = { onRender: () => null };\n\n  // eslint-disable-next-line react/state-in-constructor\n  state = { isMounted: false };\n\n  componentDidMount() {\n    const { onRender } = this.props;\n    this.portalEl = this.createPortalContainer();\n    if (DOCUMENT && this.portalEl) {\n      DOCUMENT.body.appendChild(this.portalEl);\n      onRender();\n      this.setState({ isMounted: true });\n    }\n  }\n\n  componentDidUpdate() {\n    if (!canRenderPortal) {\n      this.renderNoPortal();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.portalEl) {\n      this.portalEl.parentNode.removeChild(this.portalEl);\n    }\n  }\n\n  createPortalContainer() {\n    if (!DOCUMENT) return null;\n\n    const { className } = this.props;\n    const { cssClassName } = convertPropToCssClassName(blockName, className);\n    const container = DOCUMENT.createElement('div');\n    container.classList.add(cssClassName);\n    container.setAttribute('data-testid', 'portal');\n\n    return container;\n  }\n\n  renderNoPortal() {\n    const { children } = this.props;\n    ReactDOM.unstable_renderSubtreeIntoContainer(\n      this,\n      <div>{children}</div>,\n      this.portalEl,\n    );\n  }\n\n  render() {\n    const { children } = this.props;\n    const { isMounted } = this.state;\n    return !canRenderPortal || !isMounted\n      ? null\n      : ReactDOM.createPortal(children, this.portalEl);\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n// TODO change hardcoded opacity for theme variable\nconst BackdropTag = styled.div`\n  ${({ type }) =>\n    type === 'cover' ? 'position: fixed' : 'position: absolute'};\n\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: black;\n  opacity: 0.6;\n  ${(props) => (props.zIndex ? `z-index: ${props.zIndex};` : '')}\n`;\n\nconst Backdrop = ({ type = 'cover', zIndex, onClick = () => null }) => (\n  <BackdropTag\n    zIndex={zIndex}\n    type={type}\n    onClick={onClick}\n    data-testid=\"ds-backdrop\"\n  />\n);\nBackdrop.propTypes = {\n  /**\n   * ['cover', 'fill']\n   */\n  type: PropTypes.oneOf(['fill', 'cover']),\n  /**\n   * z-index of dimmer background\n   */\n  zIndex: PropTypes.number,\n  /**\n   * Backdrop click event\n   */\n  onClick: PropTypes.func,\n};\n\nexport default Backdrop;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport DSPortal from '../Portal';\nimport DSBackdrop from '../Backdrop';\n\nconst blockName = 'overlay';\n\nconst events = ['mousedown', 'touchstart'];\n\nconst OverlayContainer = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ usePortal, isOpen }) => ({\n    inline: !usePortal,\n    opened: isOpen,\n  }),\n);\n\nclass DSOverlay extends Component {\n  static overlayStack = [];\n  static defaultProps = {\n    isOpen: false,\n    usePortal: true,\n    hasBackdrop: false,\n    backDropZIndex: 2, // https://jira.elliemae.io/browse/PUI-1712\n    onClickOutside: () => null,\n  };\n  constructor(props) {\n    super(props);\n    this.overlayRef = React.createRef();\n\n    this.handleDocumentClick = this.handleDocumentClick.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isOpen } = this.props;\n    if (isOpen !== prevProps.isOpen) {\n      if (isOpen) {\n        this.openOverlay();\n      } else {\n        this.closeOverlay();\n      }\n    }\n  }\n\n  addClickOutsideListeners() {\n    events.forEach(event => {\n      document.addEventListener(event, this.handleDocumentClick);\n    });\n  }\n\n  removeClickOutsideListeners() {\n    events.forEach(event => {\n      document.removeEventListener(event, this.handleDocumentClick);\n    });\n  }\n\n  handleDocumentClick(e) {\n    const { onClickOutside, isOpen } = this.props;\n    const { overlayStack } = DSOverlay;\n    const overlayIndex = overlayStack.indexOf(this);\n    const hasClickedOverlay = overlayStack\n      .slice(overlayIndex)\n      .some(({ overlayRef }) => {\n        const elem = overlayRef.current;\n        return elem && elem.contains(e.target) && !elem.isSameNode(e.target);\n      });\n\n    if (isOpen && !hasClickedOverlay) {\n      onClickOutside(e); // giving opportunity for callers to operate on the event.\n    }\n  }\n\n  openOverlay() {\n    this.addClickOutsideListeners();\n    DSOverlay.overlayStack.push(this);\n  }\n\n  closeOverlay() {\n    const { overlayStack } = DSOverlay;\n    const overlayIndex = overlayStack.indexOf(this);\n    this.removeClickOutsideListeners();\n    overlayStack.splice(overlayIndex, 1);\n  }\n\n  render() {\n    const {\n      usePortal,\n      isOpen,\n      hasBackdrop,\n      children,\n      backDropZIndex,\n    } = this.props;\n\n    if (!isOpen) return null;\n\n    const overlay = (\n      <OverlayContainer\n        classProps={{ usePortal, isOpen }}\n        innerRef={this.overlayRef}\n      >\n        {hasBackdrop && <DSBackdrop zIndex={backDropZIndex} />}\n        {children}\n      </OverlayContainer>\n    );\n\n    if (usePortal) {\n      return <DSPortal>{overlay}</DSPortal>;\n    }\n\n    return overlay;\n  }\n}\n\nDSOverlay.propTypes = {\n  backDropZIndex: PropTypes.number,\n  children: PropTypes.element,\n  hasBackdrop: PropTypes.bool,\n  isOpen: PropTypes.bool,\n  onClickOutside: PropTypes.func,\n  usePortal: PropTypes.bool,\n};\n\nexport default DSOverlay;\n","export const getArrowStylesBySize = (position, size = 30) => {\n  const basePosition = position && position.split('-')[0];\n  return {\n    borderWidth: size,\n    ...{\n      top: {\n        top: '100% !important',\n        transform: `rotateZ(${180}deg)`,\n      },\n      right: {\n        right: '100%',\n        transform: `rotateZ(${-90}deg)`,\n      },\n      bottom: {\n        bottom: '100%',\n        transform: `rotateZ(${0}deg)`,\n      },\n      left: {\n        left: '100%',\n        transform: `rotateZ(${90}deg)`,\n      },\n    }[basePosition],\n  };\n};\n\nexport default getArrowStylesBySize;\n","/* eslint-disable max-lines */\n/* eslint-disable react/prop-types */\nimport React, { PureComponent } from 'react';\nimport { Popper } from 'react-popper';\nimport { Keyframes, animated } from 'react-spring/renderprops.cjs';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport DSOverlay from '../Overlay';\nimport { getArrowStylesBySize } from './getArrowStylesBySize';\n\nconst Content = Keyframes.Spring({});\n\nexport default class PopperContent extends PureComponent {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = { onContentDestroyed: () => null };\n\n  constructor(props) {\n    super(props);\n    this.renderContent = this.renderContent.bind(this);\n    this.renderArrow = this.renderArrow.bind(this);\n    this.handleRestAnimation = this.handleRestAnimation.bind(this);\n  }\n\n  handleRestAnimation() {\n    const { isOpen, onContentDestroyed } = this.props;\n    if (!isOpen) {\n      onContentDestroyed();\n    }\n  }\n\n  renderArrow({ ref, style }, placement) {\n    const { blockName, showArrow } = this.props;\n    if (!showArrow) return null;\n    return (\n      <div\n        key=\"popper-arrow\"\n        ref={ref}\n        className={`${blockName || 'popper'}__arrow`}\n        data-placement={placement}\n        style={{\n          ...style,\n          ...getArrowStylesBySize(placement, 25),\n        }}\n      >\n        <svg viewBox=\"0 0 30 30\">\n          <path\n            className=\"stroke\"\n            d=\"M23.7,27.1L17,19.9C16.5,19.3,15.8,19,15,19s-1.6,0.3-2.1,0.9l-6.6,7.2C5.3,28.1,3.4,29,2,29h26\n        C26.7,29,24.6,28.1,23.7,27.1z\"\n          />\n          <path\n            className=\"fill\"\n            d=\"M23,27.8c1.1,1.2,3.4,2.2,5,2.2h2H0h2c1.7,0,3.9-1,5-2.2l6.6-7.2c0.7-0.8,2-0.8,2.7,0L23,27.8L23,27.8z\"\n          />\n        </svg>\n      </div>\n    );\n  }\n\n  renderContent({ ref, style, placement, arrowProps, scheduleUpdate }) {\n    const {\n      contentComponent,\n      contentStyle,\n      isOpen,\n      closeAnimationConfig,\n      openAnimationConfig,\n      onMouseEnter,\n      onMouseLeave,\n      containerProps,\n      zIndex,\n    } = this.props;\n\n    const computedStyle = {\n      ...style,\n      ...contentStyle,\n      zIndex,\n    };\n    return (\n      <div\n        {...containerProps}\n        data-placement={placement}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n        style={computedStyle}\n        data-testid=\"popper-container\"\n      >\n        <Content\n          native\n          onRest={this.handleRestAnimation}\n          state={isOpen ? 'open' : 'close'}\n          states={{\n            open: {\n              ...openAnimationConfig,\n              from: closeAnimationConfig.to,\n            },\n            close: closeAnimationConfig,\n          }}\n        >\n          {(animationStyle) => (\n            <animated.div ref={ref} style={animationStyle}>\n              {getComponentFromProps(contentComponent, { scheduleUpdate }, [\n                this.renderArrow(arrowProps, placement),\n              ])}\n            </animated.div>\n          )}\n        </Content>\n      </div>\n    );\n  }\n\n  render() {\n    const {\n      destroyed = false,\n      onClickOutside = () => null,\n      placement = 'bottom-start',\n      modifiers = {},\n      referenceNode,\n      usePortal = true,\n    } = this.props;\n    return (\n      <DSOverlay\n        isOpen={!destroyed}\n        onClickOutside={onClickOutside}\n        usePortal={usePortal}\n      >\n        <Popper\n          modifiers={modifiers}\n          placement={placement}\n          referenceElement={referenceNode}\n        >\n          {this.renderContent}\n        </Popper>\n      </DSOverlay>\n    );\n  }\n}\n","export const Interaction = {\n  CLICK: 'click',\n  HOVER: 'hover',\n};\n\nexport const interactions = [Interaction.CLICK, Interaction.HOVER];\n","/* eslint-disable max-lines */\nimport React, { Component } from 'react';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport { Manager, Reference } from 'react-popper';\nimport memoizeOne from 'memoize-one';\nimport { isDOMTypeElement } from '@elliemae/ds-utilities/reactTypesUtility';\nimport { isFunction, get, runAll } from '@elliemae/ds-utilities/utils';\nimport { mergeRefs } from '@elliemae/ds-utilities/system';\nimport PopperContent from './PopperContent';\nimport { Interaction } from './interaction';\n\nexport default class PopperImpl extends Component {\n  // we use safeIsMounted because isMounted is not allowed by React.\n  safeIsMounted = false;\n\n  handlePopperPlacementChange = memoizeOne(placement => {\n    const { onPlacementChange } = this.props;\n    onPlacementChange(placement);\n  });\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      isOpen: false,\n      destroyed: true,\n    };\n    // TODO: Fix the autobinding to remove this!!\n    this.handleMouseEnter = this.handleMouseEnter.bind(this);\n    this.handleMouseLeave = this.handleMouseLeave.bind(this);\n    this.handleTriggerClick = this.handleTriggerClick.bind(this);\n    this.renderTarget = this.renderTarget.bind(this);\n    this.updatePopoverState = this.updatePopoverState.bind(this);\n    this.handlePopperPlacementChange = this.handlePopperPlacementChange.bind(\n      this,\n    );\n    this.handleDestroyContent = this.handleDestroyContent.bind(this);\n    this.handleContentMouseEnter = this.handleContentMouseEnter.bind(this);\n    this.handleContentMouseLeave = this.handleContentMouseLeave.bind(this);\n  }\n\n  // this is needed to prevent setState on unmounted components\n  componentDidMount() {\n    this.safeIsMounted = true;\n  }\n\n  componentDidUpdate() {\n    const { isOpen, destroyed } = this.state;\n    if (isOpen === true && destroyed === true) {\n      // eslint-disable-next-line react/no-did-update-set-state\n      this.setState({ destroyed: false });\n    }\n  }\n\n  componentWillUnmount() {\n    this.safeIsMounted = false;\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { isOpen } = nextProps;\n    const { prevPropIsOpen } = prevState;\n    // todo: this causes multiple rerenders\n    if (isOpen !== prevPropIsOpen) {\n      return {\n        isOpen,\n        prevPropIsOpen: isOpen,\n      };\n    }\n    return null;\n  }\n\n  getInteractionObject(interaction, referenceProps = {}) {\n    const { isOpen } = this.props;\n    if (isOpen !== undefined) return {};\n    return (\n      {\n        [Interaction.CLICK]: {\n          handlers: {\n            onClick: this.handleTriggerClick,\n          },\n          canClose: () => true,\n        },\n        [Interaction.HOVER]: {\n          handlers: {\n            onMouseEnter: referenceProps.onMouseEnter || this.handleMouseEnter,\n            onMouseLeave: referenceProps.onMouseLeave || this.handleMouseLeave,\n            onClick: this.handleTriggerClick,\n          },\n          canClose: (isOnTrigger, isOnPopper) => !isOnTrigger && !isOnPopper,\n        },\n      }[interaction] || {\n        handlers: {},\n        canClose: () => true,\n      }\n    );\n  }\n\n  setOpen(opening) {\n    const { onOpen } = this.props;\n    const { prevPropIsOpen } = this.state;\n    if (!this.safeIsMounted) return;\n\n    if (prevPropIsOpen === undefined) {\n      this.setState({\n        isOpen: opening,\n        destroyed: false,\n      });\n    }\n    onOpen(opening);\n  }\n\n  open() {\n    clearTimeout(this.closeTimer);\n    const { delayOpen } = this.props;\n    this.openTimer = setTimeout(() => this.setOpen(true), delayOpen);\n  }\n\n  close() {\n    clearTimeout(this.openTimer);\n    const { delayClose, onClose = () => null } = this.props;\n    this.closeTimer = setTimeout(() => {\n      this.setOpen(false);\n      onClose();\n    }, delayClose);\n  }\n\n  handleTriggerClick(e) {\n    const { triggerComponent } = this.props;\n    const { onClick } = get(triggerComponent, 'props') || {};\n\n    this.open();\n\n    if (isFunction(onClick)) onClick(e);\n  }\n\n  handleContentMouseEnter() {\n    this.isMouseOverContent = true;\n  }\n\n  handleContentMouseLeave() {\n    this.isMouseOverContent = false;\n    const { onClose = () => null } = this.props;\n    setTimeout(() => {\n      if (!this.isMouseOverTarget) {\n        this.setOpen(false);\n        onClose();\n      }\n    }, 10);\n  }\n\n  handleMouseEnter() {\n    this.isMouseOverTarget = true;\n    this.open();\n  }\n\n  handleMouseLeave() {\n    this.isMouseOverTarget = false;\n    setTimeout(() => {\n      if (!this.isMouseOverContent) {\n        this.close();\n      }\n    }, 10);\n  }\n\n  updatePopoverState(popperData) {\n    this.handlePopperPlacementChange(popperData.placement);\n    return popperData;\n  }\n\n  handleDestroyContent() {\n    this.setState({ destroyed: true });\n  }\n\n  renderTarget({ ref }) {\n    const { isOpen } = this.state;\n    const { triggerComponent, interactionType, renderReference } = this.props;\n\n    const componentInnerRef = get(\n      triggerComponent,\n      ['props', 'innerRef'],\n      () => null,\n    );\n    const compRef = isDOMTypeElement(triggerComponent)\n      ? { ref }\n      : { innerRef: mergeRefs(ref, componentInnerRef) };\n\n    const triggerHandler = this.getInteractionObject(\n      interactionType,\n      triggerComponent.props,\n    ).handlers;\n\n    const targetProps = {\n      ...triggerHandler,\n      ...compRef,\n      'aria-haspopup': true,\n      'aria-expanded': isOpen,\n    };\n\n    if (renderReference) {\n      return renderReference({\n        ref,\n        ...targetProps,\n      });\n    }\n\n    return getComponentFromProps(triggerComponent, targetProps);\n  }\n\n  render() {\n    const { isOpen, destroyed } = this.state;\n\n    const {\n      placement,\n      interactionType,\n      showArrow,\n      arrowSize,\n      arrowGap,\n      preventOverflow,\n      children: customPopper,\n      usePortal,\n      blockName,\n      contentComponent,\n      openAnimationConfig,\n      closeAnimationConfig,\n      modifiers,\n      referenceNode,\n      containerProps,\n      zIndex,\n    } = this.props;\n\n    const allModifiers = {\n      offset: {\n        enabled: showArrow,\n        offset: `0, ${arrowSize + arrowGap}`,\n      },\n      preventOverflow: {\n        enabled: true,\n        padding: 0,\n        boundariesElement: preventOverflow,\n      },\n      updatePopoverState: {\n        enabled: true,\n        fn: this.updatePopoverState,\n        order: 900,\n      },\n      ...modifiers,\n    };\n    const triggerHandler = this.getInteractionObject(interactionType).handlers;\n\n    const popperContentProps = {\n      containerProps,\n      isOpen,\n      destroyed: isOpen ? false : destroyed,\n      arrowSize,\n      blockName,\n      showArrow,\n      modifiers: allModifiers,\n      contentComponent,\n      onContentDestroyed: this.handleDestroyContent,\n      onClickOutside: () => this.close(),\n      placement,\n      usePortal,\n      openAnimationConfig,\n      closeAnimationConfig,\n      onMouseEnter:\n        interactionType === Interaction.HOVER\n          ? this.handleContentMouseEnter\n          : undefined,\n      onMouseLeave:\n        interactionType === Interaction.HOVER\n          ? this.handleContentMouseLeave\n          : undefined,\n      referenceNode,\n      zIndex,\n    };\n\n    if (customPopper && typeof customPopper === 'function') {\n      return (\n        <Manager>\n          {customPopper({\n            Reference,\n            triggerHandler,\n            content: <PopperContent {...popperContentProps} />,\n          })}\n        </Manager>\n      );\n    }\n\n    return (\n      <Manager>\n        <Reference>{this.renderTarget}</Reference>\n        <PopperContent {...popperContentProps} />\n      </Manager>\n    );\n  }\n}\n\nexport { Reference, PopperContent };\n","export const Position = {\n  AUTO: 'auto',\n  AUTO_START: 'auto-start',\n  AUTO_END: 'auto-end',\n  BOTTOM: 'bottom',\n  BOTTOM_START: 'bottom-start',\n  BOTTOM_END: 'bottom-end',\n  LEFT: 'left',\n  LEFT_END: 'left-end',\n  LEFT_START: 'left-start',\n  RIGHT: 'right',\n  RIGHT_END: 'right-end',\n  RIGHT_START: 'right-start',\n  TOP: 'top',\n  TOP_START: 'top-start',\n  TOP_END: 'top-end',\n};\n\nexport const positions = [\n  Position.AUTO_START,\n  Position.AUTO_END,\n  Position.AUTO,\n  Position.TOP_START,\n  Position.TOP,\n  Position.TOP_END,\n  Position.RIGHT_START,\n  Position.RIGHT,\n  Position.RIGHT_END,\n  Position.BOTTOM_START,\n  Position.BOTTOM,\n  Position.BOTTOM_END,\n  Position.LEFT_START,\n  Position.LEFT,\n  Position.LEFT_END,\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PopperImpl from './PopperImpl';\nimport { Position } from './positions';\nimport { Interaction } from './interaction';\n\nconst DSPopper = ({\n  containerProps = {},\n  arrowGap = 8,\n  arrowSize = 6,\n  blockName = '',\n  contentOffset = null,\n  contentStyle = null,\n  contentComponent = () => null,\n  delayClose = 300,\n  delayOpen = 200,\n  interactionType = Interaction.CLICK,\n  isOpen = undefined, // if this is set DSPopper would be a controlled component if not, an uncontrolled one\n  onOpen = () => null,\n  onClose = () => null,\n  onPlacementChange = () => null,\n  placement = Position.BOTTOM,\n  preventOverflow = 'window',\n  showArrow = true,\n  closeAnimationConfig = {\n    to: { transform: 'scale(0.8)', opacity: '0' },\n    config: { delay: 80, duration: 80 },\n  },\n  openAnimationConfig = {\n    to: { transform: 'scale(1)', opacity: '1' },\n    config: { delay: 80, duration: 80 },\n  },\n  usePortal = true,\n  triggerComponent = () => null,\n  wrapExtraComponent = undefined,\n  getTargetFromChildren = () => null,\n  getContentFromChildren = () => null,\n  modifiers = {},\n  triggerRef = () => null,\n  children: customPopper,\n  renderReference = undefined,\n  referenceNode = undefined,\n  zIndex,\n}) => (\n  <PopperImpl\n    arrowGap={arrowGap}\n    arrowSize={arrowSize}\n    blockName={blockName}\n    closeAnimationConfig={closeAnimationConfig}\n    containerProps={containerProps}\n    contentComponent={contentComponent}\n    contentOffset={contentOffset}\n    contentStyle={contentStyle}\n    delayClose={delayClose}\n    delayOpen={delayOpen}\n    getContentFromChildren={getContentFromChildren}\n    getTargetFromChildren={getTargetFromChildren}\n    interactionType={interactionType}\n    isOpen={isOpen}\n    modifiers={modifiers}\n    onOpen={onOpen}\n    onClose={onClose}\n    onPlacementChange={onPlacementChange}\n    openAnimationConfig={openAnimationConfig}\n    placement={placement}\n    preventOverflow={preventOverflow}\n    referenceNode={referenceNode}\n    renderReference={renderReference}\n    showArrow={showArrow}\n    triggerComponent={triggerComponent}\n    triggerRef={triggerRef}\n    usePortal={usePortal}\n    wrapExtraComponent={wrapExtraComponent}\n    zIndex={zIndex}\n  >\n    {customPopper}\n  </PopperImpl>\n);\n\n// @deprecated: There's the NEW (not finished) popover that uses its own popper implementation.\nDSPopper.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /** Space between the arrow and the popup */\n  arrowGap: PropTypes.number,\n  /** Arrow size */\n  arrowSize: PropTypes.number,\n  /** Bem blockname for the popper */\n  blockName: PropTypes.oneOfType([PropTypes.string, PropTypes.shape({})]),\n};\n\nexport { Interaction as PopperInteractions, Position as PopperPositions };\n\nexport default DSPopper;\n","export const TooltipType = {\n  TOOLTIP: 'tooltip',\n  TOOLBAR: 'toolbar',\n};\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport { describe, PropTypes } from 'react-desc';\nimport {\n  aggregatedClasses,\n  convertPropToCssClassName,\n} from '@elliemae/ds-classnames';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport {\n  DEFAULT_DELAY_OPEN,\n  DEFAULT_DELAY_CLOSE,\n} from '@elliemae/ds-shared/constants';\nimport DSPopper, { PopperPositions, PopperInteractions } from '../Popper';\nimport { TooltipType } from './TooltipType';\nimport { interactions } from '../Popper/interaction';\nimport { positions } from '../Popper/positions';\n\nconst blockName = 'tooltip';\n\nconst TooltipContainer = aggregatedClasses('div')(blockName);\nconst TooltipText = aggregatedClasses('span')(blockName, 'text');\n\nconst DSTooltip = ({\n  containerProps = {},\n  innerRef,\n  placement = PopperPositions.TOP,\n  title = '',\n  delayClose = DEFAULT_DELAY_CLOSE,\n  delayOpen = DEFAULT_DELAY_OPEN,\n  interactionType = PopperInteractions.HOVER,\n  triggerComponent = null,\n  className = '',\n  isOpen = undefined,\n  onOpen = () => null,\n  springAnimationComponent = undefined,\n  tooltipType = TooltipType.TOOLTIP,\n  showArrow = true,\n  zIndex,\n  ...otherTooltipProps\n}) => {\n  const { cssClassName: tooltipBlockName } = convertPropToCssClassName(\n    blockName,\n  );\n\n  let Content = title;\n  if (typeof title === 'string') {\n    Content = <TooltipText>{title}</TooltipText>;\n  }\n\n  return (\n    <DSPopper\n      blockName={tooltipBlockName}\n      contentComponent={\n        <TooltipContainer\n          {...containerProps}\n          {...otherTooltipProps}\n          className={`tooltip-container--${tooltipType} ${className}`}\n          innerRef={innerRef}\n        >\n          {Content}\n        </TooltipContainer>\n      }\n      delayClose={delayClose}\n      delayOpen={delayOpen}\n      interactionType={interactionType}\n      isOpen={isOpen}\n      onOpen={onOpen}\n      placement={placement}\n      showArrow={tooltipType === TooltipType.TOOLTIP ? showArrow : false}\n      springAnimationComponent={springAnimationComponent}\n      triggerComponent={getComponentFromProps(triggerComponent)}\n      zIndex={zIndex}\n    />\n  );\n};\n\nconst tooltipProps = {\n  containerProps: PropTypes.object.description(\n    'Set of Properties attached to the main container',\n  ),\n  placement: PropTypes.oneOf(positions)\n    .description('Tooltip position')\n    .defaultValue(PopperPositions.TOP),\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]).description(\n    'Tooltip content',\n  ).isRequired,\n  delayClose: PropTypes.string\n    .description('Delay to close the tooltip')\n    .defaultValue(DEFAULT_DELAY_CLOSE),\n  delayOpen: PropTypes.string\n    .description('Delay to open the tooltip ')\n    .defaultValue(DEFAULT_DELAY_OPEN),\n  interactionType: PropTypes.oneOf(interactions)\n    .description('A type indicating how to open/close the tooltip')\n    .defaultValue(PopperInteractions.HOVER),\n  triggerComponent: PropTypes.element.description(\n    'The component that will open/close the tooltip',\n  ).isRequired,\n  isOpen: PropTypes.bool\n    .description('Whether the tooltip is visible or not')\n    .defaultValue(undefined),\n  onOpen: PropTypes.func.description('Handler when the tooltip opens'),\n  springAnimationComponent: PropTypes.element.description(\n    'Spring animation component',\n  ),\n  showArrow: PropTypes.bool\n    .description('Whether to show an arrow or not')\n    .defaultValue(true),\n  className: PropTypes.string.description('css class'),\n  tooltipType: PropTypes.oneOf(['tooltip', 'toolbar'])\n    .description('Type of tooltip')\n    .defaultValue(TooltipType.TOOLTIP),\n  zIndex: PropTypes.number\n    .description('z-index value assigned to the tooltip')\n    .defaultValue(undefined),\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).description(\n    'Ref to the tooltip container element',\n  ),\n};\n\nDSTooltip.propTypes = tooltipProps;\n\nconst TooltipWithSchema = describe(DSTooltip);\nTooltipWithSchema.propTypes = tooltipProps;\n\nexport { TooltipType, TooltipContainer, TooltipText, TooltipWithSchema };\nexport default DSTooltip;\n","/* eslint-disable react/display-name */\nimport React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-addon-wrapper';\n\nconst InputWrapper = aggregatedClasses('div')(blockName);\nconst InputAddon = aggregatedClasses('span')(\n  blockName,\n  'addon',\n  ({ left, right, variant, hasError }) => ({\n    left,\n    right,\n    error: hasError,\n    [variant]: variant,\n  }),\n);\n\nexport default class InputAddonWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.renderAddonComponent = this.renderAddonComponent.bind(this);\n  }\n  static defaultProps = {\n    rightComponents: [],\n    leftComponents: [],\n    containerProps: {},\n  };\n\n  getLeftAddon(components) {\n    return this.renderAddonComponent(true, components);\n  }\n\n  getRightAddon(components) {\n    return this.renderAddonComponent(false, components);\n  }\n\n  renderAddonComponent(left = true, components) {\n    if (!components) return null;\n    if (Array.isArray(components)) {\n      if (!components.filter(comp => comp).length) return null;\n    }\n    const { containerProps, hasError } = this.props;\n    const classProps = left ? { left: true } : { right: true };\n\n    return (\n      <InputAddon classProps={classProps} hasError={hasError} {...containerProps}>\n        {components.map(\n          (component, index) =>\n            component &&\n            React.cloneElement(component, { ...component.props, key: index }),\n        )}\n      </InputAddon>\n    );\n  }\n\n  render() {\n    const {\n      className,\n      innerRef,\n      rightComponents,\n      leftComponents,\n      children,\n      variant,\n      containerProps,\n    } = this.props;\n\n    const InputComponent = React.Children.only(children);\n\n    const { hasError, readOnly, disabled } = InputComponent.props;\n\n    const rightAddon = this.getRightAddon([...rightComponents]);\n    const leftAddon = this.getLeftAddon([...leftComponents]);\n    return (\n      <InputWrapper\n        className={className}\n        classProps={{\n          hasError,\n          readOnly,\n          disabled,\n          variant,\n        }}\n        innerRef={innerRef}\n        {...containerProps}\n      >\n        {leftAddon}\n        {InputComponent}\n        {rightAddon}\n      </InputWrapper>\n    );\n  }\n}\n","export function showEllipsis(width, value) {\n  return String(value).length * 8 > width;\n}\n","/* eslint-disable complexity */\n/* eslint-disable max-lines */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { omit } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport CloseCircle from '@elliemae/ds-icons/CloseCircle';\nimport DSButton from '../../Button';\nimport DSTooltip from '../../Tooltip';\nimport InputAddonWrapper from './InputAddonWrapper';\nimport { showEllipsis } from './showEllipsis';\n\nconst blockName = 'input';\nconst Input = aggregatedClasses('input')(\n  blockName,\n  null,\n  ({ clearable, value }) => ({\n    clearable,\n    value,\n  }),\n);\nconst WrapperForTooltipInput = aggregatedClasses('div')(\n  blockName,\n  'tooltip-ref',\n);\nconst InputCustomWrapper = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ clearable, value }) => ({\n    clearable,\n    value,\n  }),\n);\nconst ClearableButton = aggregatedClasses(DSButton)(blockName, 'clearable');\n\nconst getValidComponents = (component) => component;\n\nconst noop = () => null;\nclass InputImpl extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: -1,\n      active: false,\n      showTooltip: false,\n    };\n    this.ref = React.createRef();\n    this.refTooltip = React.createRef();\n  }\n\n  componentDidMount() {\n    this.setWidth();\n    window.addEventListener('resize', this.setWidth);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.setWidth);\n  }\n\n  handleOnChange = (e) => {\n    const { onChange, max } = this.props;\n    const { value } = e.target;\n    if (max && value > max) return;\n    onChange(e);\n  };\n\n  handleBlur = (e) => {\n    const { onBlur, onChange, min } = this.props;\n    const { value } = e.target;\n    if (min && value < min && value !== '') {\n      onChange({\n        target: {\n          value: min.toString(),\n        },\n      });\n    }\n    onBlur(e);\n    this.setState({\n      active: false,\n    });\n  };\n\n  handleFocus = (e) => {\n    const { onFocus } = this.props;\n    onFocus(e);\n    this.setState({\n      active: true,\n    });\n  };\n\n  handleMouseEnter = () => {\n    if (!this.state.showTooltip) {\n      this.setState({\n        showTooltip: true,\n      });\n    }\n  };\n\n  handleMouseLeave = () => {\n    if (this.state.showTooltip) {\n      this.setState({\n        showTooltip: false,\n      });\n    }\n  };\n\n  setWidth = () => {\n    const client = this.refTooltip.current.getBoundingClientRect();\n    this.setState({\n      width: client.width,\n    });\n  };\n\n  handleClear() {\n    const { onClear, onChange, clearable } = this.props;\n    if (clearable && onClear) {\n      onClear();\n    } else {\n      onChange({ target: { value: '' } });\n    }\n\n    if ((this.ref || {}).current) this.ref.current.focus();\n  }\n\n  renderClearableComponent() {\n    const { clearable, value, disabled } = this.props;\n    if (disabled) return null;\n    return clearable && value ? (\n      <ClearableButton\n        buttonType=\"text\"\n        data-testid=\"ds-input_clearable-btn\"\n        disabled={disabled}\n        icon={<CloseCircle />}\n        onClick={this.handleClear}\n      />\n    ) : null;\n  }\n\n  render() {\n    const {\n      role,\n      id,\n      isShowElipsisActive,\n      autoFocus,\n      className,\n      name,\n      innerRef,\n      maxLength,\n      minLength,\n      placeholder,\n      leftComponent,\n      rightComponent,\n      disableTooltip,\n      readOnly,\n      disabled,\n      value,\n      onClick,\n      onChange,\n      onKeyDown,\n      onKeyUp,\n      onFocus,\n      onBlur,\n      onPaste,\n      required,\n      type,\n      customInputType,\n      min,\n      max,\n      clearable,\n      onMouseLeave,\n      onMouseOut,\n      style,\n      containerProps,\n      tabIndex,\n      hasError,\n      ...rest\n    } = this.props;\n    const { width, active, showTooltip } = this.state;\n    const rightComponents = [\n      this.renderClearableComponent(),\n      rightComponent,\n    ].filter(getValidComponents);\n    const leftComponents = [leftComponent].filter(getValidComponents);\n\n    const inputProps = {\n      'aria-label': rest['aria-label'],\n      'aria-placeholder': placeholder,\n      'aria-required': required,\n      'aria-multiline': false,\n      'aria-autocomplete': 'none',\n      'data-testid': rest['data-testid'],\n      role,\n      id,\n      ref: this.ref,\n      className,\n      autoFocus,\n      disabled: disabled || readOnly,\n      innerRef,\n      maxLength,\n      minLength,\n      name,\n      onBlur,\n      onChange,\n      onClick,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n      onPaste,\n      onMouseLeave,\n      disableTooltip,\n      onMouseOut,\n      placeholder,\n      required,\n      type,\n      value,\n      min,\n      max,\n      style,\n      tabIndex,\n      ...containerProps,\n    };\n\n    let InputComponent = (\n      <WrapperForTooltipInput ref={this.refTooltip} style={{ width: '100%' }}>\n        {!customInputType ? (\n          <Input\n            {...omit(inputProps, ['disableTooltip'])}\n            autoComplete=\"off\"\n            clearable={`${clearable}`}\n            onChange={this.handleOnChange}\n            onBlur={this.handleBlur}\n            onFocus={this.handleFocus}\n            // using mouseOver instead of mouseEnter (doesn't trigger on disabled inputs)\n            // https://github.com/facebook/react/issues/4251\n            onMouseOver={this.handleMouseEnter}\n            // using mouseOut instead of mouseLeave (doesn't trigger on disabled inputs)\n            // https://github.com/facebook/react/issues/4251\n            onMouseOut={this.handleMouseLeave}\n            value={value}\n          />\n        ) : (\n          <InputCustomWrapper\n            className={className}\n            {...containerProps}\n            clearable={clearable}\n            value={value}\n          >\n            {customInputType({\n              ...inputProps,\n            })}\n          </InputCustomWrapper>\n        )}\n      </WrapperForTooltipInput>\n    );\n    if (isShowElipsisActive) {\n      InputComponent = (\n        <DSTooltip\n          isOpen={\n            disableTooltip &&\n            showEllipsis(width, value) &&\n            !active &&\n            showTooltip &&\n            width\n          }\n          title={String(value)}\n          zIndex={11}\n          triggerComponent={\n            <WrapperForTooltipInput style={{ width: '100%' }}>\n              {InputComponent}\n            </WrapperForTooltipInput>\n          }\n        />\n      );\n    }\n\n    const renderInput =\n      rightComponents.length || leftComponents.length || clearable ? (\n        <InputAddonWrapper\n          className={className}\n          leftComponents={leftComponents}\n          rightComponents={rightComponents}\n          hasError={hasError}\n          {...containerProps}\n        >\n          {InputComponent}\n        </InputAddonWrapper>\n      ) : (\n        InputComponent\n      );\n\n    return renderInput;\n  }\n}\n\nInputImpl.defaultProps = {\n  onBlur: noop,\n  onFocus: noop,\n};\n\nInputImpl.propTypes = {\n  className: PropTypes.string,\n  customInputType: PropTypes.func,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  isShowElipsisActive: PropTypes.bool,\n  max: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  min: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  name: PropTypes.string,\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  onMouseOut: PropTypes.func,\n  onPaste: PropTypes.func,\n  onClear: PropTypes.func,\n  placeholder: PropTypes.string,\n  required: PropTypes.bool,\n  role: PropTypes.string,\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  maxLength: PropTypes.number,\n  minLength: PropTypes.number,\n  leftComponent: PropTypes.element,\n  rightComponent: PropTypes.element,\n  disableTooltip: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  disabled: PropTypes.bool,\n  autoFocus: PropTypes.bool,\n  type: PropTypes.string,\n  clearable: PropTypes.bool,\n  containerProps: PropTypes.object,\n  // eslint-disable-next-line react/forbid-prop-types\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  // eslint-disable-next-line jsdoc/require-returns\n  /**\n   * Should be of type string if using ellipsis tooltip [isShowElipsisActive] prop\n   *\n   * @param props\n   * @param propName\n   * @param componentName\n   */\n  // eslint-disable-next-line consistent-return\n  value(props, propName, componentName) {\n    // eslint-disable-line consistent-return\n    if (!!props.isShowElipsisActive && typeof props[propName] !== 'string') {\n      return new Error(\n        `Invalid prop \\`${propName}\\` of type \\`${typeof props[\n          propName\n        ]}\\` supplied to` +\n          ` \\`${componentName}\\`. Prop \\`value\\` should be of type \\`string\\` if prop \\`isShowElipsisActive\\` is set to \\`true\\`.` +\n          ' Either set `isShowElipsisActive` to `false`, or properly format your `value` prop to `string`.',\n      );\n    }\n  },\n};\n\nexport default InputImpl;\n","import React from 'react';\nimport InputImpl from './InputImpl';\nimport InputAddonWrapper from './InputAddonWrapper';\n\nconst DSInput = ({\n  containerProps = {},\n  id,\n  autoFocus = false,\n  disabled = false,\n  className = '',\n  clearable = false,\n  name = '',\n  maxLength = 255,\n  minLength = 0,\n  fluidWidth = false,\n  disableTooltip = true,\n  placeholder,\n  value = '',\n  hasError = false,\n  readOnly = false,\n  innerRef = null,\n  type = 'text',\n  min = undefined,\n  max = undefined,\n  leftComponent = null,\n  rightComponent = null,\n  required = false,\n  customInputType = null,\n  variant,\n  isShowElipsisActive = true,\n  ...otherProps\n}) => (\n  <InputImpl\n    {...otherProps}\n    aria-label={otherProps['aria-label']}\n    autoFocus={autoFocus}\n    className={`${className} ${disabled ? 'input-disabled' : ''}`}\n    clearable={clearable}\n    containerProps={containerProps}\n    customInputType={customInputType}\n    data-testid={otherProps['data-testid'] || 'ds-input_main-component'}\n    disabled={disabled}\n    disableTooltip={disableTooltip}\n    fluidWidth={fluidWidth}\n    hasError={hasError}\n    id={id}\n    innerRef={innerRef}\n    isShowElipsisActive={isShowElipsisActive}\n    leftComponent={leftComponent}\n    max={max}\n    maxLength={maxLength}\n    min={min}\n    minLength={minLength}\n    name={name}\n    placeholder={placeholder}\n    readOnly={readOnly}\n    required={required}\n    rightComponent={rightComponent}\n    type={type}\n    value={value}\n    variant={variant}\n  />\n);\n\nexport { InputAddonWrapper };\n\nexport default DSInput;\n","import React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport DSInput from '../Input';\n\nconst DSTextBox = ({\n  containerProps = {},\n  autoFocus = false,\n  disabled = false,\n  maxLength = 255,\n  minLength = 0,\n  fluidWidth = false,\n  placeholder,\n  value = '',\n  hasError = false,\n  readOnly = false,\n  innerRef = null,\n  type = 'text',\n  min = undefined,\n  max = undefined,\n  clearable = false,\n  leftComponent = null,\n  rightComponent = null,\n  required = false,\n  variant,\n  ...otherProps\n}) => (\n  <DSInput\n    {...otherProps}\n    aria-label={otherProps['aria-label'] || 'Text Box'}\n    autoFocus={autoFocus}\n    clearable={clearable}\n    containerProps={containerProps}\n    disabled={disabled}\n    fluidWidth={fluidWidth}\n    hasError={hasError}\n    innerRef={innerRef}\n    leftComponent={leftComponent}\n    max={max}\n    maxLength={maxLength}\n    min={min}\n    minLength={minLength}\n    placeholder={placeholder}\n    readOnly={readOnly}\n    required={required}\n    rightComponent={rightComponent}\n    role=\"textbox\"\n    type={type}\n    value={value}\n    variant={variant}\n  />\n);\n\nconst props = {\n  /** inject props at textbox wrapper */\n  containerProps: PropTypes.shape({}).description(\n    'inject props at textbox wrapper',\n  ),\n  /**\n   * Whether the text box uses auto focus or not\n   */\n  autoFocus: PropTypes.bool.description(\n    'Whether the text box uses auto focus or not',\n  ),\n  /**\n   * Whether the text box is disabled or not\n   */\n  disabled: PropTypes.bool.description(\n    'Whether the text box is disabled or not',\n  ),\n  /**\n   * Max length for the text box\n   */\n  maxLength: PropTypes.number.description('Max length for the text box'),\n  /**\n   * Min length for the text box\n   */\n  minLength: PropTypes.number.description('Min length for the text box'),\n  /**\n   * Make the content of the text box fit the container or not\n   */\n  fluidWidth: PropTypes.bool.description(\n    'Make the content of the text box fit the container or not',\n  ),\n  /**\n   * Placeholder for the text box\n   */\n  placeholder: PropTypes.string.description('Placeholder for the text box'),\n  /**\n   * Default value once the component is initialized\n   */\n  value: PropTypes.string.description(\n    'Default value once the component is initialized',\n  ),\n  /**\n   * Whether the text box has error or not\n   */\n  hasError: PropTypes.bool.description('Whether the text box has error or not'),\n  /**\n   * Whether the text box is read only or not\n   */\n  readOnly: PropTypes.bool.description(\n    'Whether the text box is read only or not',\n  ),\n  /** html min prop for input */\n  min: PropTypes.number.description('html min prop for input'),\n  /** html max prop for input */\n  max: PropTypes.number.description('html max prop for input'),\n  /**\n   * Whether the text box is clearable or not\n   */\n  clearable: PropTypes.bool.description(\n    'Whether the text box is clearable or not',\n  ),\n  /**\n   * Component to be added at the left side of the text box\n   */\n  leftComponent: PropTypes.element.description(\n    'Component to be added at the left side of the text box',\n  ),\n  /**\n   * Component to be added at the right side of the text box\n   */\n  rightComponent: PropTypes.element.description(\n    'Component to be added at the right side of the text box',\n  ),\n  /**\n   * Whether the text box is required or not\n   */\n  required: PropTypes.bool.description(\n    'Whether the text box is required or not',\n  ),\n  /**\n   * [\n   *  'variant-default',\n   *  'variant-focus',\n   *  'variant-active',\n   *  'variant-disabled',\n   * ]\n   */\n  variant: PropTypes.string.description(\n    \"variant-default','variant-focus','variant-active','variant-disabled'\",\n  ),\n  /** html input type */\n  type: PropTypes.string.description('html input type'),\n  /** Internal ref */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).description(\n    'internal ref',\n  ),\n};\n\nDSTextBox.propTypes = props;\n\nconst DSTextBoxWithSchema = describe(DSTextBox);\n\nDSTextBoxWithSchema.propTypes = props;\n\nexport default DSTextBox;\nexport { DSTextBoxWithSchema };\n","/* eslint-disable complexity */\n/* eslint-disable max-lines */\n/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { conformToMask } from 'react-text-mask';\nimport DSTextBox from '../TextBox';\nimport { MASK_TYPES } from './MaskTypes';\n\nconst BACKSPACE_KEY = 8;\n\nconst getSafeValue = (e) => {\n  let value = e;\n  if (e && e.target) {\n    const {\n      target: { value: eValue },\n    } = e;\n    value = eValue;\n  }\n  return value;\n};\n\nfunction setCaretPosition(ctrl, pos) {\n  // Modern browsers\n  if (ctrl.setSelectionRange) {\n    ctrl.focus();\n    ctrl.setSelectionRange(pos, pos);\n\n    // IE8 and below\n  } else if (ctrl.createTextRange) {\n    const range = ctrl.createTextRange();\n    range.collapse(true);\n    range.moveEnd('character', pos);\n    range.moveStart('character', pos);\n    range.select();\n  }\n}\n\nconst applyMaskFormat = (value, props = {}) => {\n  const { mask, pipe } = props;\n  const safeValue = getSafeValue(value);\n  const maskedValue = conformToMask(safeValue, mask, {\n    guide: false,\n    ...(props.placeholderChar && { placeholderChar: props.placeholderChar }),\n  });\n  if (pipe !== null) return pipe()(maskedValue.conformedValue).value;\n  return maskedValue.conformedValue;\n};\n\nclass DSInputMaskImpl extends Component {\n  lastkey = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      originalValue: props.value,\n      value: props.value,\n      maskedValue: applyMaskFormat(props.value, props),\n    };\n    this.inputref = React.createRef();\n  }\n\n  // eslint-disable-next-line max-statements\n  handleOnChange = (e) => {\n    const { skypchange, length } = this.state;\n    if (skypchange) {\n      this.setState({ skypchange: false });\n      return;\n    }\n\n    const { onChange, mask } = this.props;\n    const value = getSafeValue(e);\n    const maskedValue = applyMaskFormat(value, this.props);\n    this.setState(\n      {\n        maskedValue: maskedValue.substr(0, length),\n        value,\n        focus: true,\n      },\n      () => {\n        const event = {\n          target: {\n            value: maskedValue,\n            originalValue: value,\n          },\n        };\n        onChange(event);\n      },\n    );\n\n    let end = (maskedValue || '').length || 0;\n    const { selectionEnd } = e.target;\n    if (this.lastkey === BACKSPACE_KEY) {\n      end = selectionEnd;\n      setTimeout(() => setCaretPosition(this.ref, end));\n    }\n    // hack for percent mask\n    if (\n      [1, 4, 6, 10].indexOf(selectionEnd) > -1 &&\n      mask === MASK_TYPES.PHONE &&\n      // This validation below fixes PUI-3390\n      !(maskedValue.slice(-2) === ') ' && this.lastkey === BACKSPACE_KEY)\n    ) {\n      setTimeout(() => setCaretPosition(this.ref, selectionEnd + 1));\n      // hack for percent mask\n    } else if (maskedValue && (maskedValue[end - 1] || '').indexOf('%') > -1) {\n      setTimeout(() => setCaretPosition(this.ref, end - 1));\n    } else if (selectionEnd + 1 < end && MASK_TYPES.PHONE !== mask) {\n      // fix for PUI-2892 replacing setCaretPosition(this.ref, selectionEnd)\n      // to setCaretPosition(this.ref, end)\n      setTimeout(() => setCaretPosition(this.ref, end));\n      // For PUI-3391. We should evaluate using this behavior on every mask\n    } else if (MASK_TYPES.PHONE === mask) {\n      setTimeout(() => setCaretPosition(this.ref, selectionEnd));\n    }\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const { value } = props;\n    if (value !== state.originalValue) {\n      const maskedValue = applyMaskFormat(value, props);\n      return {\n        value,\n        maskedValue,\n        originalValue: value,\n      };\n    }\n    return null;\n  }\n\n  handleKeyDown = (e) => {\n    e.stopPropagation();\n    const { onKeyDown } = this.props;\n    const { value } = this.state;\n    const masked = applyMaskFormat(value, this.props);\n    this.lastkey = e.keyCode;\n    if (e.key === 'Backspace') {\n      this.setState({\n        length: masked.length - 2,\n      });\n      // if (e.target.selectionEnd === masked.length) {\n      //   const end = e.target.selectionEnd\n      //   this.inputref.current.selectionEnd = end - (useSubfix.length)\n      // }\n    } else {\n      this.setState({\n        length: masked.length,\n      });\n    }\n    onKeyDown(e);\n  };\n\n  handleBlur = (e) => {\n    const { onBlur } = this.props;\n    this.setState({ focus: false });\n    onBlur(e);\n  };\n\n  render() {\n    const {\n      autoFocus,\n      style,\n      disabled,\n      className,\n      name,\n      maxLength,\n      minLength,\n      fluidWidth,\n      placeholder,\n      onKeyDown,\n      onClick,\n      onChange,\n      onFocus,\n      onBlur,\n      onPaste,\n      onKeyUp,\n      hasError,\n      readOnly,\n      type,\n      innerRef,\n      value: originalValue,\n      clearable = false,\n      leftComponent,\n      rightComponent,\n      mask,\n      ...rest\n    } = this.props;\n    const { maskedValue, focus } = this.state;\n    return (\n      <DSTextBox\n        {...rest}\n        aria-label={rest['aria-label']}\n        className={className}\n        clearable={clearable}\n        disabled={disabled}\n        fluidWidth={fluidWidth}\n        hasError={hasError}\n        innerRef={(ref) => {\n          this.ref = ref;\n          if (innerRef) innerRef(ref);\n        }}\n        isActive={focus}\n        keepCharPositions\n        leftComponent={leftComponent}\n        mask={mask}\n        maxLength={maxLength}\n        minLength={minLength}\n        name={name}\n        onBlur={this.handleBlur}\n        onChange={this.handleOnChange}\n        onClick={onClick}\n        onFocus={onFocus}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={onKeyUp}\n        onPaste={onPaste}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        rightComponent={rightComponent}\n        style={style}\n        type={type}\n        value={maskedValue}\n      />\n    );\n  }\n}\n\nDSInputMaskImpl.propTypes = {\n  autoFocus: PropTypes.bool,\n  style: PropTypes.object,\n  disabled: PropTypes.bool,\n  className: PropTypes.string,\n  name: PropTypes.string,\n  maxLength: PropTypes.number,\n  minLength: PropTypes.number,\n  fluidWidth: PropTypes.bool,\n  placeholder: PropTypes.string,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  onKeyDown: PropTypes.func,\n  leftComponent: PropTypes.element,\n  rightComponent: PropTypes.element,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  onPaste: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  hasError: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  onClick: PropTypes.func,\n  clearable: PropTypes.bool,\n  type: PropTypes.string,\n  /**\n   * Ref for the component\n   */\n  innerRef: PropTypes.any,\n  /**\n   * Mask type\n   */\n  mask: PropTypes.any,\n  placeholderChar: PropTypes.string,\n};\n\nexport default DSInputMaskImpl;\n","/* eslint-disable max-lines */\n/* eslint-disable jest/valid-describe */\nimport React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport { MASK_TYPES } from './MaskTypes';\nimport { MASK_PIPES } from './MaskPipes';\nimport DSInputMaskImpl from './DSInputMaskImpl';\n\nconst DSInputMask = ({\n  autoFocus = false,\n  style = {},\n  disabled = false,\n  className = '',\n  name = '',\n  maxLength = 255,\n  minLength = 0,\n  fluidWidth = false,\n  placeholder,\n  onKeyDown = () => null,\n  onClick = () => null,\n  onChange = () => null,\n  onFocus = () => null,\n  onBlur = () => null,\n  onPaste = () => null,\n  onKeyUp = () => null,\n  value = '',\n  hasError = false,\n  readOnly = false,\n  innerRef = null,\n  type = 'text',\n  clearable = false,\n  leftComponent = null,\n  rightComponent = null,\n  mask = MASK_TYPES.DATE,\n  placeholderChar = undefined,\n  pipe = null,\n  useSubfix = '',\n  ...rest\n}) => (\n  <DSInputMaskImpl\n    {...rest}\n    aria-label={rest['aria-label'] || 'Input Mask'}\n    autoFocus={autoFocus}\n    className={className}\n    clearable={clearable}\n    disabled={disabled}\n    fluidWidth={fluidWidth}\n    hasError={hasError}\n    innerRef={innerRef}\n    leftComponent={leftComponent}\n    mask={mask}\n    maxLength={maxLength}\n    minLength={minLength}\n    name={name}\n    onBlur={onBlur}\n    onChange={onChange}\n    onClick={onClick}\n    onFocus={onFocus}\n    onKeyDown={onKeyDown}\n    onKeyUp={onKeyUp}\n    onPaste={onPaste}\n    pipe={pipe}\n    placeholder={placeholder}\n    placeholderChar={placeholderChar}\n    readOnly={readOnly}\n    rightComponent={rightComponent}\n    style={style}\n    type={type}\n    useSubfix={useSubfix}\n    value={value}\n  />\n);\n\nconst inputProps = {\n  /** Should component focus automatically */\n  autoFocus: PropTypes.bool.description('Should component focus automatically'),\n  /**\n   * Set style for the input mask\n   */\n  style: PropTypes.object.description('Set style for the input mask'),\n  /**\n   * Whether the input mask is disabled or not\n   */\n  disabled: PropTypes.bool.description(\n    'Whether the input mask is disabled or not',\n  ),\n  /** css class */\n  className: PropTypes.string.description('css class'),\n  /** html name prop for form */\n  name: PropTypes.string.description('html name prop for form'),\n  /**\n   * Max length for the input mask\n   */\n  maxLength: PropTypes.number.description('Max length for the input mask'),\n  /**\n   * Min length for the input mask\n   */\n  minLength: PropTypes.number.description('Min length for the input mask'),\n  /**\n   * Whether to make the content of the input mask fit the container or not\n   */\n  fluidWidth: PropTypes.bool.description(\n    'Whether to make the content of the input mask fit the container or not',\n  ),\n  /**\n   * Component that works as placeholder\n   */\n  placeholder: PropTypes.node.description(\n    'Component that works as placeholder',\n  ),\n  /**\n   * Allows a function that is triggered once a key is being pressed\n   */\n  onKeyDown: PropTypes.func.description(\n    'Allows a function that is triggered once a key is being pressed',\n  ),\n  /**\n   * Allows a function that is triggered once the input mask is clicked\n   */\n  onClick: PropTypes.func.description(\n    'Allows a function that is triggered once the input mask is clicked',\n  ),\n  /**\n   * Allows a function that is triggered once the input mask changes\n   */\n  onChange: PropTypes.func.description(\n    'Allows a function that is triggered once the input mask changes',\n  ),\n  /**\n   * Allows a function that is triggered once the input mask is focused\n   */\n  onFocus: PropTypes.func.description(\n    'Allows a function that is triggered once the input mask is focused',\n  ),\n  /**\n   * Allows a function that is triggered once the input mask loses focus\n   */\n  onBlur: PropTypes.func.description(\n    'Allows a function that is triggered once the input mask loses focus',\n  ),\n  /**\n   * Allows a function that is triggered once the input mask is pasted\n   */\n  onPaste: PropTypes.func.description(\n    'Allows a function that is triggered once the input mask is pasted',\n  ),\n  /**\n   * Allows a function that is triggered once in the input mask a keyboard key is released\n   */\n  onKeyUp: PropTypes.func.description(\n    'Allows a function that is triggered once in the input mask a keyboard key is released',\n  ),\n  /**\n   * Default value once the component is initialized\n   */\n  value: PropTypes.string.description(\n    'Default value once the component is initialized',\n  ),\n  /**\n   * Whether the input mask has error or not\n   */\n  hasError: PropTypes.bool.description(\n    'Whether the input mask has error or not',\n  ),\n  /**\n   * Whether the input mask is read only or not\n   */\n  readOnly: PropTypes.bool.description(\n    'Whether the input mask is read only or not',\n  ),\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]).description('Whether the input mask is read only or not'),\n  /**\n   * Type of input. Ex: 'text'\n   */\n  type: PropTypes.string.description(\"Type of input. Ex: 'text'\"),\n  /**\n   * Whether the input mask is clearable or not\n   */\n  clearable: PropTypes.bool.description(\n    'Whether the input mask is clearable or not',\n  ),\n  /**\n   * Component to be added at the right side of the input\n   */\n  leftComponent: PropTypes.node.description(\n    'Component to be added at the right side of the input',\n  ),\n  /**\n   * Component to be added at the right side of the input\n   */\n  rightComponent: PropTypes.node.description(\n    'Component to be added at the right side of the input',\n  ),\n  /**\n   * Mask that has to match with the input information entered\n   * ['DATE', 'PHONE', 'PHONE_INTENATIONAL', 'SSN', 'US_ZIP_CODE', 'NUMBER', 'PERCENT']\n   */\n  mask: PropTypes.oneOfType([\n    PropTypes.array,\n    PropTypes.string,\n    PropTypes.func,\n  ]).description(\n    \"Mask that has to match with the input information entered. ['DATE', 'PHONE', 'PHONE_INTENATIONAL', 'SSN', 'US_ZIP_CODE', 'NUMBER', 'PERCENT']\",\n  ),\n  /**\n    Expects pipe functions. i.e. autoCorrectedDatePipe\n    link a docu de text-mask\n   */\n  pipe: PropTypes.func.description(\n    'Expects pipe functions. i.e. autoCorrectedDatePipe',\n  ),\n  /**\n   * Put a sufix after the input mask\n   */\n  useSubfix: PropTypes.string.description('Put a sufix after the input mask'),\n  /**\n   * PlaceholderChar: The placeholder character represents the fillable spot in the mask.\n   * The default placeholder character is underscore, _.\n   */\n  placeholderChar: PropTypes.string\n    .description(\n      `The placeholder character represents the fillable spot in the mask.\n  * The default placeholder character is underscore, _.`,\n    )\n    .defaultValue('_'),\n};\n\nDSInputMask.propTypes = inputProps;\n\nconst DSInputMaskWithSchema = describe(DSInputMask).description(\n  'Masking input for custom formats',\n);\nDSInputMaskWithSchema.propTypes = inputProps;\n\nexport { MASK_TYPES, MASK_PIPES, DSInputMaskWithSchema };\nexport default DSInputMask;\n","import { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-search';\n\nexport const InputSearchWrapper = aggregatedClasses('div')(blockName);\n","export function createDisabledOption(label) {\n  return {\n    id: 'no-option',\n    type: 'disabled',\n    label,\n    noAddon: true,\n    'aria-disabled': true,\n    className: 'no-options',\n    tabIndex: -1,\n  };\n}\n\nexport function noAddonOptions(options) {\n  return options.map(op => ({ ...op, noAddon: true }));\n}\n","/* eslint-disable no-useless-escape */\n/* eslint-disable max-lines */\n/* eslint-disable indent */\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { describe, PropTypes } from 'react-desc';\nimport DSDropdownMenu from '@elliemae/ds-dropdownmenu';\nimport DSInputMask from '../form/InputMask';\nimport { InputSearchWrapper } from './components/blocks';\nimport { createDisabledOption, noAddonOptions } from './components/helper';\n\nconst DSZipCodeSearch = ({\n  disabled = false,\n  value = undefined,\n  placeholder = '_____-____',\n  mask = [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/],\n  onBlur = () => null,\n  onChange = () => null,\n  onSearch = () => null,\n  containerProps = {},\n  // noOptions = 'No options',\n  selectRightOptions = 'Please select the appropriate city',\n  activeCount = 5,\n  options = [],\n}) => {\n  const ref = useRef(null);\n  const [searchValue, setValue] = useState();\n  const [isOpen, setOpen] = useState(false);\n  const [isActive, setActive] = useState(false);\n  const [isInputFocus, setInputFocus] = useState(false);\n  const [isSelected, setSelected] = useState(false);\n\n  useEffect(() => {\n    if (isInputFocus && activeCount <= searchValue.length && !isSelected) {\n      setOpen(true);\n      setActive(true);\n    } else if (!isActive || activeCount > searchValue.length) {\n      setOpen(false);\n    }\n  }, [isInputFocus, isActive, activeCount, searchValue]);\n  useEffect(() => {\n    setValue(value || '');\n  }, [value]);\n\n  const onTypeInInput = useCallback((e) => {\n    setValue(e.target.value);\n    onSearch(e.target.value);\n    setSelected(false);\n  }, []);\n\n  const onFocusInput = useCallback(() => {\n    setInputFocus(true);\n  }, []);\n\n  const onInnerBlur = useCallback(\n    (e) => {\n      setInputFocus(false);\n      onBlur(e);\n    },\n    [onBlur],\n  );\n  const onClose = useCallback(() => {\n    setActive(false);\n  }, []);\n  const onSelectItem = useCallback((item) => {\n    setValue(item.value);\n    onChange(item);\n    setSelected(true);\n    ref.current.focus();\n    setOpen(false);\n    onClose();\n  }, []);\n  return (\n    <InputSearchWrapper {...containerProps}>\n      <DSDropdownMenu\n        isOpen={isOpen && options.length > 0}\n        menuProps={{ className: 'input-search-menu' }}\n        // onBlur={() => console.log('inblur;')}\n        onClose={onClose}\n        onSelectMenuItem={onSelectItem}\n        options={\n          options.length > 0\n            ? [\n                createDisabledOption(selectRightOptions),\n                ...noAddonOptions(options),\n              ]\n            : [\n                // createDisabledOption(noOptions),\n              ]\n        }\n        triggerComponent={\n          <DSInputMask\n            disabled={disabled}\n            innerRef={ref}\n            mask={mask || []}\n            onBlur={onInnerBlur}\n            onChange={onTypeInInput}\n            onFocus={onFocusInput}\n            placeholder={placeholder}\n            value={searchValue}\n          />\n        }\n      />\n    </InputSearchWrapper>\n  );\n};\n\nconst zipcodeSearchProps = {\n  className: PropTypes.string.description('html class attribute'),\n  containerProps: PropTypes.object.description(\n    'Set of Properties attached to the main container',\n  ),\n  disabled: PropTypes.bool.description('disable component').defaultValue(false),\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n  ]).description('input value').isRequired,\n  onBlur: PropTypes.func.description('function called on blur'),\n  onChange: PropTypes.func.description('function called on change'),\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }),\n  ).description('options to display'),\n  placeholder: PropTypes.string\n    .description('placeholder value')\n    .defaultValue('_____-____'),\n  mask: PropTypes.arrayOf(PropTypes.any)\n    .description('format mask to apply')\n    .defaultValue(\n      `[/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]`,\n    ),\n  onSearch: PropTypes.func.description('function called onsearch'),\n  noOptions: PropTypes.string\n    .description('no options message')\n    .defaultValue('No Options'),\n  selectRightOptions: PropTypes.string\n    .description('Correction messange')\n    .defaultValue('Please select the appropriate city'),\n  activeCount: PropTypes.number.description('current amount').defaultValue(5),\n};\n\nDSZipCodeSearch.propTypes = zipcodeSearchProps;\n\nconst ZipCodeSearchWithSchema = describe(DSZipCodeSearch);\nZipCodeSearchWithSchema.propTypes = zipcodeSearchProps;\n\nexport { ZipCodeSearchWithSchema };\nexport default DSZipCodeSearch;\n"],"sourceRoot":""}