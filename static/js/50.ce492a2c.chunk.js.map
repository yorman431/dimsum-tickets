{"version":3,"sources":["../../../src/system.js","DataGrid/toolbar.js","../../../../src/FocusGroup/useFocusGroupItem.js","../../../src/EditPencil.js","../../../../src/Toolbar/ToolbarItem.js","../../../../src/Toolbar/decorateToolbarChildren.js","../../../../src/Toolbar/DSToolbar.js","../../../src/Delete.js"],"names":["setRef","ref","value","isFunction","mergeRefs","refs","node","Toolbar","memo","data","rowData","workflowRule","icon","renderToolbar","useFocusGroupWithState","props","useContext","register","unregister","otherActions","useEffect","createIcon","paths","height","width","ToolbarItem","labelText","menu","undefined","otherProps","useState","btn","buttonType","innerRef","placement","Position","triggerComponent","PropTypes","string","children","extraProps","component","cloneElement","className","ToolbarContainer","withDepth","alignment","size","DSToolbar","containerProps","autoFocusOnMount","containerRef","useRef","getContainer","keyBindings","Tab","orientation","classProps","decorateToolbarChildren"],"mappings":"0LAEaA,EAAS,SAACC,EAAKC,GACtBC,qBAAJ,GACEF,KACSA,IACTA,cAIG,SAASG,IAAmB,2BAANC,EAAM,yBAANA,EAAM,gBACjC,OAAO,SAAAC,GACL,GACAD,WAAa,SAAAJ,GACPE,qBAAJ,GACEF,KACSA,IACTA,mB,iCCjBR,6GAKA,MAAMM,EAAUC,eAAK,EAAGC,MAAQC,QAASC,MAErC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaC,KAAM,kBAAC,IAAD,QACnB,kBAAC,IAAD,CAAaA,KAAM,kBAAC,IAAD,UAIZC,EAAiBJ,GAAS,kBAACF,EAAD,CAASE,KAAMA,K,mGCMzCK,EAAyB,WAAqB,IAApBb,EAAoB,uDAAd,GAAIc,EAAU,yCAEvDC,2BAFuD,GACjDC,EADiD,WACvCC,EADuC,aACxBC,EADwB,yCAYzD,OARAC,qBAAU,WAER,OADInB,GAAJ,GAAqBgB,EAAShB,EAATgB,GACd,WACDhB,GAAJ,GAAuBiB,QAExB,CATsD,IAYzD,EACA,EADsB,I,IA5BT,WAA4C,IAAjBjB,EAAiB,uDAAX,GAAIc,EAAO,yCAEvDC,2BAFuD,GACjDC,EADiD,WACvCC,EADuC,aACxBC,EADwB,yCAYzD,OARAC,qBAAU,WAER,OADInB,WAAJ,GAA6BgB,EAAShB,EAAD,QAARgB,GACtB,WACDhB,WAAJ,GAA+BiB,EAAWjB,EAAXiB,aAKnC,EACA,EADsB,K,6DCZxB,EAAeG,YAAW,CACxBC,MAAO,CADiB,gXAIxBC,OAJwB,GAKxBC,MAAO,K,wtBCFHC,EAAc,SAAC,GAAyD,IAAvDb,EAAuD,EAAvDA,KAAMc,EAAiD,EAAjDA,UAAiD,IAAtCC,YAAsC,WAA/BC,EAA+B,EAAjBC,EAAiB,6CACtDC,mBADsD,yBACrE7B,EADqE,KAChED,EADgE,KAG5Ec,eACA,IAAMiB,EACJ,wCAEEC,WAFF,OAGEpB,KAHF,EAIEqB,SAAU,mBAAOjC,EAAP,IACV0B,UAAWA,KAGf,SACS,0BACFC,EADE,WAELO,UAAWC,IAFN,WAGLC,iBAAkBL,KAGtB,GAGFN,4BAEAA,YAAwB,CACtBb,KAAMyB,IADgB,QAEtBX,UAAWW,IAAUC,Q,gpBC/BR,SAACC,GAAD,IAAWC,EAAX,iEACb,oBAEE,SAAAC,GAAS,OACPA,EACIC,uBAAaD,EAAW,EAAZ,UAEPA,EAFO,WAGVE,UAAW,GAAF,OAAKF,QAAL,8BALR,IAHE,Q,6ICUTG,EAAmB,mBAFzB,UAEyB,MAGvB,kBAAGC,EAAH,YAAcC,EAAd,YAAyBC,EAAzB,iBACE,iBAAkBF,GADpB,6CAOIG,EAAY,SAAC,GASb,QARJC,sBAQI,MARa,GAQb,EAPJhB,EAOI,EAPJA,SAOI,IANJY,iBAMI,aALJC,iBAKI,MALQ,QAKR,MAJJI,wBAII,aAHJX,gBAGI,MAHO,GAGP,MAFJQ,YAEI,MAFG,SAEH,EADDlB,EACC,0GACEsB,EAAeC,iBAArB,MACA,OACE,uBACEF,iBADF,EAEEG,aAAc,kBAAMF,EAAN,SACdG,YAAa,CACXC,IAAK,QAEPC,YAAY,cAEZ,wCAGEC,WAAY,CAAEZ,UAAF,EAAaC,UAAb,EAAwBC,QACpCd,SAAU7B,YAAU6B,EAAUkB,KAE7BO,YAfP,MAqBFV,YAAsB,CACpBC,eAAgBZ,UADI,IAGpBQ,UAAWR,IAHS,KAKpBS,UAAWT,UAAgB,CAAC,QALR,SAOpBU,KAAMV,UAAgB,CAAC,SAAjBA,a,oEC1DR,EAAehB,YAAW,CACxBC,MAAO,CAAC,0ZADgB,+OAKxBC,OALwB,GAMxBC,MAAO,K","file":"static/js/50.ce492a2c.chunk.js","sourcesContent":["import { isFunction } from './utils';\n\nexport const setRef = (ref, value) => {\n  if (isFunction(ref)) {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n};\n\nexport function mergeRefs(...refs) {\n  return node => {\n    if (!node) return;\n    refs.forEach(ref => {\n      if (isFunction(ref)) {\n        ref(node);\n      } else if (ref) {\n        ref.current = node;\n      }\n    });\n  };\n}\n\nexport function logger(log, message = '') {\n  // eslint-disable-next-line no-console\n  console.log(message, log);\n}\n","import React, { memo } from 'react';\nimport DSToolbar, { ToolbarItem } from '@elliemae/ds-basic/Toolbar';\nimport DeleteIcon from '@elliemae/ds-icons/Delete';\nimport EditIcon from '@elliemae/ds-icons/EditPencil';\n\nconst Toolbar = memo(({ data: { rowData: workflowRule } }) => {\n  return (\n    <DSToolbar>\n      <ToolbarItem icon={<DeleteIcon />} />\n      <ToolbarItem icon={<EditIcon />} />\n    </DSToolbar>\n  );\n});\nexport const renderToolbar = (data) => <Toolbar data={data} />;\n","import { useContext, useEffect } from 'react';\nimport FocusGroupContext from './FocusGroupContext';\n\nexport default function useFocusGroupItem(ref = {}, props) {\n  const { register, unregister, ...otherActions } =\n    useContext(FocusGroupContext) || {};\n\n  useEffect(() => {\n    if (ref.current && register) register(ref.current, props);\n    return () => {\n      if (ref.current && unregister) unregister(ref.current);\n    };\n  });\n\n  // if the focus item is not wrapped with the focus provider then return null\n  if (!register) return {};\n  return otherActions;\n}\n\nexport const useFocusGroupWithState = (ref = {}, props) => {\n  const { register, unregister, ...otherActions } =\n    useContext(FocusGroupContext) || {};\n\n  useEffect(() => {\n    if (ref && register) register(ref, props);\n    return () => {\n      if (ref && unregister) unregister(ref);\n    };\n  }, [ref]);\n\n  // if the focus item is not wrapped with the focus provider then return null\n  if (!register) return {};\n  return otherActions;\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M17.379 2.621c-.414-.414-.957-.621-1.5-.621s-1.086.207-1.5.621L4 13l-2 5 5-2L17.377 5.624c.001-.001.002-.001.003-.002.828-.828.828-2.172 0-3zM6.438 15.148l-2.643 1.057 1.057-2.643 9.173-9.173 1.586 1.586-9.173 9.173zm8.294-11.466l.354-.354c.212-.212.493-.328.793-.328s.581.117.793.328c.212.212.328.493.328.793 0 .29-.11.564-.309.773l-.022.022-.351.351-1.586-1.586z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFocusGroupWithState } from '@elliemae/ds-shared/FocusGroup';\nimport DSButton from '../Button';\nimport { Position } from '../Popper/positions';\n\nconst ToolbarItem = ({ icon, labelText, menu = undefined, ...otherProps }) => {\n  const [ref, setRef] = useState(null);\n\n  useFocusGroupWithState(ref);\n  const btn = (\n    <DSButton\n      {...otherProps}\n      buttonType=\"text\"\n      icon={icon}\n      innerRef={(r) => setRef(r)}\n      labelText={labelText}\n    />\n  );\n  if (menu) {\n    return React.cloneElement(menu, {\n      ...menu.props,\n      placement: Position.BOTTOM_END,\n      triggerComponent: btn,\n    });\n  }\n  return btn;\n};\n\nToolbarItem.displayName = 'ToolbarItem';\n\nToolbarItem.propTypes = {\n  icon: PropTypes.element,\n  labelText: PropTypes.string,\n};\n\nexport default ToolbarItem;\n","import React, { cloneElement } from 'react';\n\nexport default (children, extraProps = {}) =>\n  React.Children.map(\n    children,\n    component =>\n      component\n        ? cloneElement(component, {\n            ...extraProps,\n            ...component.props,\n            className: `${component.props.className} toolbar-item`,\n          })\n        : component,\n    null,\n  );\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport FocusGroupProvider from '@elliemae/ds-shared/FocusGroup/FocusGroupManager';\nimport { mergeRefs } from '@elliemae/ds-utilities/system';\nimport decorateToolbarChildren from './decorateToolbarChildren';\nimport Item from './ToolbarItem';\nimport ToolbarGroup from './ToolbarGroup';\nimport Divider from './ToolbarDivider';\n\nconst blockName = 'toolbar';\n\nconst ToolbarContainer = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ withDepth, alignment, size }) => ({\n    'without-depth': !withDepth,\n    [alignment]: !!alignment,\n    [size]: size,\n  }),\n);\n\nconst DSToolbar = ({\n  containerProps = {},\n  innerRef,\n  withDepth = true,\n  alignment = 'right', // left || right\n  autoFocusOnMount = true,\n  children = [],\n  size = 'normal',\n  ...otherProps\n}) => {\n  const containerRef = useRef(null);\n  return (\n    <FocusGroupProvider\n      autoFocusOnMount={autoFocusOnMount}\n      getContainer={() => containerRef.current}\n      keyBindings={{\n        Tab: 'next',\n      }}\n      orientation=\"horizontal\"\n    >\n      <ToolbarContainer\n        {...containerProps}\n        {...otherProps}\n        classProps={{ withDepth, alignment, size }}\n        innerRef={mergeRefs(innerRef, containerRef)}\n      >\n        {decorateToolbarChildren(children)}\n      </ToolbarContainer>\n    </FocusGroupProvider>\n  );\n};\n\nDSToolbar.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /** Shows a shadow rear the toolbar */\n  withDepth: PropTypes.bool,\n  /** Aligns the toolbar to the left or right */\n  alignment: PropTypes.oneOf(['right', 'left']),\n  /** Toolbar size */\n  size: PropTypes.oneOf(['normal', 'compact']),\n};\n\nexport { Item as ToolbarItem, ToolbarGroup, Divider as ToolbarDivider };\n\nexport default DSToolbar;\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15.5 2H12v-.5c0-.83-.67-1.5-1.5-1.5h-2C7.67 0 7 .67 7 1.5V2H3.5C2.67 2 2 2.67 2 3.5v1c0 .63.4 1.2 1 1.41V18.5c0 .83.67 1.5 1.5 1.5h10c.83 0 1.5-.67 1.5-1.5V5.91c.6-.21 1-.78 1-1.41v-1c0-.83-.67-1.5-1.5-1.5zM8 1.5c0-.28.22-.5.5-.5h2c.28 0 .5.22.5.5V2H8v-.5zM14.5 19h-10c-.28 0-.5-.22-.5-.5V6h11v12.5c0 .28-.22.5-.5.5zM16 4.5c0 .28-.22.5-.5.5h-12c-.28 0-.5-.22-.5-.5v-1c0-.28.22-.5.5-.5h12c.28 0 .5.22.5.5v1z',\n    'M12.5 7c-.28 0-.5.22-.5.5v10c0 .28.22.5.5.5s.5-.22.5-.5v-10c0-.28-.22-.5-.5-.5zM9.5 7c-.28 0-.5.22-.5.5v10c0 .28.22.5.5.5s.5-.22.5-.5v-10c0-.28-.22-.5-.5-.5zM6.5 7c-.28 0-.5.22-.5.5v10c0 .28.22.5.5.5s.5-.22.5-.5v-10c0-.28-.22-.5-.5-.5z',\n  ],\n  height: 20,\n  width: 20,\n});\n"],"sourceRoot":""}