{"version":3,"sources":["PageHeader/PUI-2976.js","../../../../../../src/PageHeader/v2/components/blocks.js","../../../../../src/form/RequiredMark/RequiredMark.js","../../../../../../src/PageHeader/v2/components/PageHeaderTitle/PageHeaderTitle.js","../../../../../../src/PageHeader/v2/components/PageHeaderSummary/PageHeaderSummary.js","../../../../../../src/PageHeader/v2/components/PageHeaderMenu/PageHeaderMenu.js","../../../../../../src/PageHeader/v2/components/PageHeaderToolbar/PageHeaderToolbar.js","../../../../../../src/PageHeader/v2/components/PageHeaderBack/PageHeaderBack.js","../../../../../src/PageHeader/v2/PageHeader.js"],"names":["memo","pageTitle","summary","label","value","data-testid","blockName","PageHeaderTitleWrapper","aggregatedClasses","PageHeaderBackWrapper","PageHeaderSummaryWrapper","PageHeaderMenuWrapper","PageHeaderToolbarWrapper","cssClassName","convertPropToCssClassName","required","optional","className","PageHeaderTitle","children","showMarker","rest","PageHeaderSummary","PropTypes","string","PageHeaderMenu","PageHeaderToolbar","PageHeaderBack","Container","theme","styled","ContainerWBorder","DSPageHeaderV2","containerProps","breadcrumbs","backarrow","toolbar","menu","mainRow","compact","pageTitleRow","useState","activeEditing","setActiveEditing","activeEditingStyle","opacity","pointerEvents","cols","style","rows","onBlur","e","onFocus"],"mappings":"iGAAA,sDAoBeA,yBAba,IAC1B,kBAAC,IAAD,CACEC,UAAW,kBAAC,IAAD,yBACXC,QACE,kBAAC,IAAD,CACEC,MAAM,QACNC,MAAO,EACPC,cAAY,sC,gOCVdC,EAAN,iBAEaC,EAAyBC,kDAQzBC,GAJyBD,yDAIDA,0CAGxBE,EAA2BF,4CAG3BG,EAAwBH,yCAGxBI,EAA2BJ,6C,6DCpBhCK,EAAiBC,YAA0B,sBAA3CD,a,IACa,SAAC,GAA2C,QAAzCE,gBAAyC,aAAvBC,SACxC,OAAKD,QAD0D,SAE/D,EACS,0BAAME,UAAS,cAAtB,UAEK,0BAAMA,UAAS,+BAAtB,UAJmC,O,yHCAxBC,EAAkB,SAAC,GAAD,IAAGC,EAAH,0BAAaC,OAAb,SAAoCC,EAApC,gDAC7B,wBACE,uBAAwBjB,MAAOe,IAC9BC,GAAc,uBAAcL,UAAQ,O,uHCJnCO,EAAoB,SAAC,GAAD,cAAGlB,OAAH,uBAAiBD,OAAjB,WAAgCkB,EAAhC,wCACxB,yBACIjB,OAAD,IAA0B,yBAAKa,UAAU,oBAD5C,GAEGd,GAAS,yBAAKc,UAAU,oBAF3B,IAGIb,UAAD,IAAmC,yBAAKa,UAAU,uBAIvDK,YAA8B,CAC5BlB,MAAOmB,IADqB,OAE5BpB,MAAOoB,IAAUC,S,2KCXNC,EAAiB,SAAC,GAAD,IAAGN,EAAH,WAAgBE,EAAhB,mCAC5B,wBAD4B,ICAjBK,EAAoB,SAAC,GAAD,IAAGP,EAAH,WAAgBE,EAAhB,mCAC/B,wBAD+B,ICApBM,EAAiB,SAAC,GAAD,IAAGR,EAAH,WAAgBE,EAAhB,mCAC5B,wBAD4B,ICkBxBO,GALKC,iBAFmB,KAOZC,UAAH,wCAAGA,CAAH,CAAf,mCAIMC,EAAmBD,UAAH,wCAAGA,CAAH,+DAGOD,mBAH7B,MAaaG,EAAiB,SAAC,GAQzB,QAPJC,sBAOI,MAPa,GAOb,MANJC,mBAMI,MANU,KAMV,MALJjC,iBAKI,MALQ,KAKR,MAJJkC,iBAII,MAJQ,KAIR,MAHJjC,eAGI,MAHM,KAGN,MAFJkC,eAEI,MAFM,KAEN,MADJC,YACI,MADG,KACH,EAEEC,EAAUC,kBAAQ,CAAC,EAAzB,UACMC,EAAeD,kBAAQ,CAAC,OAAQF,GAAT,OAAyBnC,GAAzB,OAA7B,IAHI,EAIsCuC,oBAJtC,sBAIGC,EAJH,KAIkBC,EAJlB,KAKEC,EAAN,EAnBI,CACEC,QADF,GAEEC,cAAe,QAJS,GAsB9B,OACE,sBACE,yBACE,uBAAMC,KARO,CAAC,OAApB,IASQ,2BACE,qBAAgBC,MAAOJ,GAF3B,IAME,uBAAMK,KAAM,CAAC,OAAQ,SACnB,uBACEhC,UAAS,cADX,8BAEE+B,MAAOJ,GAHX,GAOE,uBAAMG,KAAMT,GACV,uBAAMS,KAAMP,GACT,mBAA8B,CAC7BU,OAAQ,SAAAC,GACNR,MACI1C,QAAJ,QAA4BA,mBAE9BmD,QAAS,SAAAD,GACPR,MACI1C,QAAJ,SAA6BA,sBAGhCoC,GAAQ,yBAXX,KAaE,wBAdJ,OAgBE,2BACE,yBAjCd,UA2CFL,YAA2B,CACzBC,eAAgBV","file":"static/js/47.9609161f.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport {\n  DSPageHeaderV2,\n  PageHeaderTitle,\n  PageHeaderSummary,\n} from '@elliemae/ds-basic/PageHeader';\n\nconst WorkflowRulesHeader = () => (\n  <DSPageHeaderV2\n    pageTitle={<PageHeaderTitle>Automation Rules</PageHeaderTitle>}\n    summary={\n      <PageHeaderSummary\n        label=\"Rules\"\n        value={0}\n        data-testid=\"workflow-rules-header-summary\"\n      />\n    }\n  />\n);\n\nexport default memo(WorkflowRulesHeader);\n","import { cssPrefix } from '@elliemae/ds-classnames/aggregatedClasses';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport DSInput from '@elliemae/ds-basic/form/Input';\n\nconst blockName = 'page-header-v2';\n\nexport const PageHeaderTitleWrapper = aggregatedClasses('div')(\n  `${blockName}-title`,\n  'title',\n);\nexport const EditableTitleComponent = aggregatedClasses(DSInput)(\n  `${blockName}-title`,\n  'editable-title',\n);\nexport const PageHeaderBackWrapper = aggregatedClasses('div')(\n  `${blockName}-back`,\n);\nexport const PageHeaderSummaryWrapper = aggregatedClasses('div')(\n  `${blockName}-summary`,\n);\nexport const PageHeaderMenuWrapper = aggregatedClasses('div')(\n  `${blockName}-menu`,\n);\nexport const PageHeaderToolbarWrapper = aggregatedClasses('div')(\n  `${blockName}-toolbar`,\n);\nexport { cssPrefix };\n","import React from 'react';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\n\nconst { cssClassName } = convertPropToCssClassName('form-required-mark');\nconst RequiredMark = ({ required = false, optional = false }) => {\n  if (!required && !optional) return null;\n  if (required) {\n    return <span className={`${cssClassName}`}>&#9679;</span>;\n  }\n  return <span className={`${cssClassName} optional-mark`}>&#9900;</span>;\n};\n\nexport default RequiredMark;\n","import React from 'react';\nimport DSTruncatedTooltipText from '@elliemae/ds-basic/TruncatedTooltipText';\nimport RequiredMark from '@elliemae/ds-basic/form/RequiredMark';\nimport { PageHeaderTitleWrapper } from '../blocks';\n\nexport const PageHeaderTitle = ({ children, showMarker = false, ...rest }) => (\n  <PageHeaderTitleWrapper {...rest}>\n    <DSTruncatedTooltipText value={children} />\n    {showMarker && <RequiredMark required />}\n  </PageHeaderTitleWrapper>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeaderSummaryWrapper } from '../blocks';\n\nconst PageHeaderSummary = ({ value = null, label = '', ...rest }) => (\n  <PageHeaderSummaryWrapper {...rest}>\n    {(value === 0 || value) && <div className=\"ph-summary-value\">{value}</div>}\n    {label && <div className=\"ph-summary-label\">{label}</div>}\n    {(value === 0 || value || label) && <div className=\"ph-summary-space\" />}\n  </PageHeaderSummaryWrapper>\n);\n\nPageHeaderSummary.propTypes = {\n  value: PropTypes.number,\n  label: PropTypes.string,\n};\n\nexport { PageHeaderSummary };\n","import React from 'react';\nimport { PageHeaderMenuWrapper } from '../blocks';\n\nexport const PageHeaderMenu = ({ children, ...rest }) => (\n  <PageHeaderMenuWrapper {...rest}>{children}</PageHeaderMenuWrapper>\n);\n","import React from 'react';\nimport { PageHeaderToolbarWrapper } from '../blocks';\n\nexport const PageHeaderToolbar = ({ children, ...rest }) => (\n  <PageHeaderToolbarWrapper {...rest}>{children}</PageHeaderToolbarWrapper>\n);\n","import React from 'react';\nimport { PageHeaderBackWrapper } from '../blocks';\n\nexport const PageHeaderBack = ({ children, ...rest }) => (\n  <PageHeaderBackWrapper {...rest}>{children}</PageHeaderBackWrapper>\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { compact } from 'lodash';\nimport { Grid } from '@elliemae/ds-basic/Grid';\nimport styled from 'styled-components';\nimport theme from '@elliemae/ds-system/theme';\nimport { PageHeaderTitle } from './components/PageHeaderTitle/PageHeaderTitle';\nimport { PageHeaderEditableTitle } from './components/PageHeaderEditableTitle/PageHeaderEditableTitle';\nimport { PageHeaderSummary } from './components/PageHeaderSummary/PageHeaderSummary';\nimport { PageHeaderMenu } from './components/PageHeaderMenu/PageHeaderMenu';\nimport { PageHeaderToolbar } from './components/PageHeaderToolbar/PageHeaderToolbar';\nimport { PageHeaderBack } from './components/PageHeaderBack/PageHeaderBack';\nimport { cssPrefix } from './components/blocks';\n\nconst PageHeaderCustomRenderer = styled.div`\n  width: auto;\n  color: ${theme.colors.brand[800]};\n  font-style: italic;\n  font-size: 0.8rem;\n`;\n\nconst Container = styled.div`\n  width: 100%;\n  margin-bottom: 4px;\n`;\nconst ContainerWBorder = styled.div`\n  width: 100%;\n  padding-bottom: 4px;\n  border-bottom: solid 1px ${theme.colors.neutral[400]};\n`;\nconst getActiveEditing = editing =>\n  editing\n    ? {\n        opacity: 0.5,\n        pointerEvents: 'none',\n      }\n    : {};\n\nexport const DSPageHeaderV2 = ({\n  containerProps = {},\n  breadcrumbs = null,\n  pageTitle = null,\n  backarrow = null,\n  summary = null,\n  toolbar = null,\n  menu = null,\n}) => {\n  const wrapperRow = ['auto', 1];\n  const mainRow = compact([1, '268px']);\n  const pageTitleRow = compact(['auto', menu && '30px', summary && 'auto', 1]);\n  const [activeEditing, setActiveEditing] = useState(false);\n  const activeEditingStyle = getActiveEditing(activeEditing);\n  return (\n    <Container {...containerProps}>\n      <ContainerWBorder>\n        <Grid cols={wrapperRow}>\n          <Grid>\n            <PageHeaderBack style={activeEditingStyle}>\n              {backarrow}\n            </PageHeaderBack>\n          </Grid>\n          <Grid rows={['auto', 'auto']}>\n            <Grid\n              className={`${cssPrefix}-page-header-v2-breadcrumb`}\n              style={activeEditingStyle}\n            >\n              {breadcrumbs}\n            </Grid>\n            <Grid cols={mainRow}>\n              <Grid cols={pageTitleRow}>\n                {React.cloneElement(pageTitle, {\n                  onBlur: e => {\n                    setActiveEditing(false);\n                    if (pageTitle.props.onBlur) pageTitle.props.onBlur(e);\n                  },\n                  onFocus: e => {\n                    setActiveEditing(true);\n                    if (pageTitle.props.onFocus) pageTitle.props.onFocus(e);\n                  },\n                })}\n                {menu && <PageHeaderMenu>{menu}</PageHeaderMenu>}\n                {summary}\n                <div />\n              </Grid>\n              <Grid>\n                <PageHeaderToolbar>{toolbar}</PageHeaderToolbar>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </ContainerWBorder>\n    </Container>\n  );\n};\n\nDSPageHeaderV2.propTypes = {\n  containerProps: PropTypes.shape({}),\n};\n\nexport {\n  PageHeaderTitle,\n  PageHeaderEditableTitle,\n  PageHeaderSummary,\n  PageHeaderMenu,\n  PageHeaderCustomRenderer,\n};\n"],"sourceRoot":""}