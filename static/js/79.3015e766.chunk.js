(this.webpackJsonpreact=this.webpackJsonpreact||[]).push([[79],{251:function(e,t,o){"use strict";o.r(t);var r=o(115),n=o(0),i=o.n(n),a=o(3),s=o(2),c=o(21),l=o(31),p=Object(c.b)("div")("counter","textarea",(function(e){return{"limit-error":e.limitError}})),d=function(e){var t=e.containerProps,o=void 0===t?{}:t,r=e.autoFocus,s=void 0!==r&&r,c=e.className,d=void 0===c?"":c,u=e.disabled,h=void 0!==u&&u,m=e.name,y=void 0===m?"":m,g=e.id,f=void 0===g?null:g,v=e.maxLength,b=void 0===v?null:v,P=e.minLength,x=void 0===P?0:P,T=e.placeholder,w=void 0===T?"":T,E=e.onClick,L=void 0===E?function(){return null}:E,C=e.onChange,k=void 0===C?function(){return null}:C,A=e.onFocus,O=void 0===A?function(){return null}:A,j=e.onBlur,N=void 0===j?function(){return null}:j,F=e.onKeyUp,S=void 0===F?function(){return null}:F,K=e.onKeyDown,M=void 0===K?function(){return null}:K,W=e.onPaste,q=void 0===W?function(){return null}:W,z=e.value,B=void 0===z?"":z,D=e.hasError,I=void 0!==D&&D,H=e.required,U=void 0!==H&&H,J=e.readOnly,R=void 0!==J&&J,_=e.resize,G=void 0===_?"vertical":_,Q=e.innerRef,V=void 0===Q?null:Q,X=e.ariaLabel,Y=void 0===X?"Enter text":X,Z=e.ariaAutocomplete,$=void 0===Z?"none":Z,ee=e.role,te=void 0===ee?"textbox":ee,oe=e.characterLimitCounter,re=void 0===oe?0:oe,ne=e.rows,ie=void 0===ne?3:ne,ae=e.errorLimit,se=void 0===ae?"Please limit your entry to":ae,ce=e.tabIndex,le=void 0===ce?"":ce,pe=Object(n.useMemo)((function(){return re<String(B).length&&re>0}),[re,B]),de=Object(l.b)("form-element-textarea","text",{hasError:pe||I,readOnly:R,disabled:h}),ue=de.cssClassName,he=de.classNameElement,me=de.classNameBlock;return i.a.createElement(i.a.Fragment,null,i.a.createElement("div",Object(a.a)({},o,{className:"".concat(ue," ").concat(d)}),i.a.createElement("div",{className:me("wrapper")},i.a.createElement("textarea",{ref:V,"aria-autocomplete":$,"aria-label":Y,"aria-multiline":!0,"aria-placeholder":w,"aria-required":U,autoFocus:s,className:he("textarea"),"data-testid":"ds-large-input_main-component",disabled:h,id:f,maxLength:b,minLength:x,name:y,onBlur:N,onChange:k,onClick:L,onFocus:O,onKeyDown:M,onKeyUp:function(e){S(e)},onPaste:q,placeholder:w,role:te,rows:String(ie),style:{resize:G},value:B,tabIndex:le}))),re>0&&i.a.createElement(p,{classProps:{limitError:pe},"data-testid":"counter-area"},"".concat(pe?"".concat(se," ").concat(re," characters.   "):"").concat(String(B).length," / ").concat(re)))},u={containerProps:s.PropTypes.object.description("Injected props to wrapper element of component"),autoFocus:s.PropTypes.bool.description("Whether uses auto focus or not"),className:s.PropTypes.string.description("CSS class"),disabled:s.PropTypes.bool.description("Whether is disabled or not"),name:s.PropTypes.string.description("HTML form name property"),id:s.PropTypes.number.description("HTML id"),maxLength:s.PropTypes.number.description("Max length for text to be entered"),minLength:s.PropTypes.number.description("Min length for text to be entered"),placeholder:s.PropTypes.string.description("Placeholder for the text"),onClick:s.PropTypes.func.description("Allows a function that is triggered once the input text is clicked"),onChange:s.PropTypes.func.description("Allows a function that is triggered once the input text changes"),onFocus:s.PropTypes.func.description("Allows a function that is triggered once the input text is focused"),onBlur:s.PropTypes.func.description("Allows a function that is triggered once the input text loses focus"),onKeyUp:s.PropTypes.func.description("Allows a function that is triggered once in the input a keyboard key is released"),onKeyDown:s.PropTypes.func.description("Allows a function that is triggered once a key is being pressed"),onPaste:s.PropTypes.func.description("Allows a function that is triggered once the input text is pasted"),value:s.PropTypes.string.description("Default value once the component is initialized"),hasError:s.PropTypes.bool.description("Whether the input text has error or not"),required:s.PropTypes.bool.description("Whether the input text is required or not"),readOnly:s.PropTypes.bool.description("Whether the input text is read only or not"),resize:s.PropTypes.string.description("Whether the input text style is vertical or not"),innerRef:s.PropTypes.func.description("ref forwarded to component"),ariaLabel:s.PropTypes.string.description("a11y aria label"),ariaAutocomplete:s.PropTypes.string.description(""),role:s.PropTypes.string.description("Type of input. Ex: textbox"),characterLimitCounter:s.PropTypes.number.description("it will show a counter/limit if the value is greater than 0"),tabIndex:s.PropTypes.string.description("Tab index html property.")};d.propTypes=u;Object(s.describe)(d).description("A large input");d.propTypes=u;var h=d,m=o(842);t.default=()=>{const e=Object(n.useState)(),t=Object(r.a)(e,2),o=t[0],a=t[1],s=({target:{value:e}})=>a(e);return i.a.createElement("div",null,i.a.createElement(h,{characterLimitCounter:20,containerProps:{id:"my-custom-id"},maxLength:500,onChange:s,rows:6,value:o}),i.a.createElement("div",{style:{height:"2rem"}}),i.a.createElement(m.a,{containerProps:{id:"my-custom-id"},feedbackMessage:"Some feedback from de user...",inputComponent:h,labelText:"Label text",onChange:s,placeholder:"Hint Text",value:o}))}}}]);
//# sourceMappingURL=79.3015e766.chunk.js.map