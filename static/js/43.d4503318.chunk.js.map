{"version":3,"sources":["DateTimePicker/PUI-4266.js","../../../src/timeUtils.tsx","../../../../../src/DateInputV2/components/utils.tsx","../../../src/ChevronSmallDown.tsx","../../../../../src/DateInputV2/components/helpers.tsx","../../../../../src/DateInputV2/components/styled.tsx","../../../../../src/DateInputV2/components/propsTypes.tsx","../../../src/DatePicker.tsx","../../../../../src/components/DatePickerPicker/DatePickerPicker.tsx","../../../../../src/DateInputV2/components/DateInputs.tsx","../../../../../src/components/DatePickerController/DatePickerController.tsx","../../../../src/components/DatePickerDropdown.tsx","../../../../../shared-configs/constants.js","../../../src/TimeInput/utils.tsx","../../../../src/TimeInput/TimeInputs.tsx","../../../../src/TimeInput/TimeInputImpl.tsx","../../../src/utils.tsx","../../../src/ChevronSmallUp.tsx","../../../src/moveElementOnScroll.tsx","../../../src/PickerPanel.tsx","../../../src/TimePickerMenu.tsx","../../../../src/components/DateTimePickerImpl.tsx","../../../../src/lang/english.tsx","../../../src/DSDateTimePicker.tsx"],"names":["memo","useState","label","show","toggle","setToggle","value","loan","setLoan","changeListener","selectedDate","event","key","newValue","moment","format","console","log","changeEvent","style","width","onClick","e","preventDefault","date","datePickerProps","hideKeyboardShortcutsPanel","onDateChange","placeholder","timePickerProps","containerProps","id","disabled","onChange","getVisibleTimeByFormat","showHours","showMinutes","showSeconds","use12Hours","addLeadingZeros","count","number","padStart","String","formatTimeNumber","Date","shouldAddLeadingZeros","leadingZeros","getFormattedDay","v","parseInt","parseTimeNumberFromText","getShouldShortcircuitDay","parsedValue","getFormattedYear","getFormattedMonth","getShouldShortcircuitMonth","stringValue","parsedInt","isNaN","triggerOnBlur","blurEvent","onBlur","currentEl","relatedTarget","nextElement","nextElementSibling","focusNextInput","elem","selector","sibling","getNextSibling","focusPreviousInput","getPreviousSibling","onInputFocus","commonInputProps","digits","onKeyDown","props","pattern","type","onFocus","createIcon","paths","height","callChange","handlers","isArrowChange","setTarget","n","cloneDeep","onKeyDownHelper","DateInputFluidContainer","styled","DateInputWrapper","theme","DateInputInput","DateInputDivider","DateInputsPropTypes","innerRef","PropTypes","current","any","onCustomKeyDown","onError","showMonth","showDay","showYear","step","yearMaxRange","yearMinRange","time","tabIndex","Picker","className","icon","size","DSIconSizes","buttonActionType","readOnly","rest","aria-label","buttonType","color","DSIconColors","data-testid","PickerPropsTypes","DateInputs","month","setMonth","day","setDay","year","setYear","onChangeDateTrigger","setOnChangeDateTrigger","dayRef","React","haveInputsOnChangeTriggered","setHaveInputsOnChangeTriggered","handleFluidClick","triggerOnDateChange","momentValue","onMonthChange","shouldAdvance","onDayChange","onYearChange","useEffect","values","renderMonthInput","autoComplete","name","ref","renderDayInput","renderYearInput","cols","input","acc","index","convertPropToCssClassName","classNameElement","classNameBlock","DSDatePickerController","document","focusedElement","firstDay","restOfDays","lastDay","onClickEscape","defaultValue","Boolean","momentvalue","dataInput","prev","next","onPrevMonthClick","onNextMonthClick","nav","this","setTimeout","calendarDaySelected","numberOfMonths","enableOutsideDays","transitionDuration","initialVisibleMonth","firstDayOfWeek","keepOpenOnDateSelect","onClose","phrases","displayFormatDay","isDayBlocked","isOutsideRange","isDayHighlighted","onOutsideClick","calendarProps","safedate","safeinitialMonth","insideBlur","focused","navNext","navPrev","firstFocusableItem","renderMonthElement","onFocusChange","renderDayContents","onTab","Component","calendarLabel","closeDatePicker","clearDates","focusStartDate","jumpToPrevMonth","jumpToNextMonth","keyboardShortcuts","showKeyboardShortcutsPanel","openThisPanel","enterKey","leftArrowRightArrow","upArrowDownArrow","pageUpPageDown","homeEnd","escape","questionMark","selectFocusedDate","moveFocusByOneDay","moveFocusByOneWeek","moveFocusByOneMonth","moveFocustoStartAndEndOfWeek","returnFocusToInput","keyboardNavigationInstructions","chooseAvailableStartDate","chooseAvailableEndDate","dateIsUnavailable","dateIsSelected","func","noop","DatePickerDropdown","isOpen","menu","zIndex","pickerProps","pickerRef","contentComponent","modifiers","preventOverflow","enabled","padding","boundariesElement","showArrow","triggerComponent","AM","HOUR_RANGE_12","min","max","HOUR_RANGE_24","GENERAL_TIME_RANGE","PLACEHOLDER_TIME","setNativeValue","element","Object","valueSetter","prototype","prototypeValueSetter","Event","bubbles","placeholderFormat","position","_placeholderHour","formatMinutes","formatSeconds","formatHour","formatMeridiem","getValidTimeNumber","InputTimesGroup","aggregatedClasses","TimeInput","Divider","TimeDivider","content","clearable","ariaLabel","ariaLabel2","meridiem","setMeridiem","hours","setHours","minutes","setMinutes","hasInputValue","setHasInputValue","seconds","setSeconds","currentKey","setCurrentKey","hasInputBeenTriggered","setHasInputBeenTriggered","lastTypedNumber","setLastTypedNumber","timeValues","isAM","getTimeValuesFromTime","selectedTime","isTimeCompletelySet","nextHours","focusNextInputIfNeeded","safeString","cleanString","shouldFocusNextInput","getNextTimeValue","incrementing","incrementedValue","decrementedValue","previousElement","neededValues","handleSecondsChange","secondsHandled","nextSeconds","handleMinutesChange","minutesHandled","nextMinutes","handleHoursChange","hour","hoursRange","nextHour","handleMeridiemKeyDown","handleMeridiemBlur","renderHoursInput","hourFormatRange","InputTimeContainer","TimeInputImpl","getVisibleTimeInputs","memoizeOne","inputsContainer","useRef","visibleInputs","useMemo","bool","validateIndex","options","convertTimeString","string","arr","sec","MoveElementOnScroll","container","offsetHeight","speed","smooth","onUpdate","onEndScroll","moving","pos","lastPos","requestFrame","window","delta","Math","update","unsubscribe","updatePosition","newPos","Container","scrolling","Wrapper","PickerItemListContainer","PickerItemList","PickerHeader","PickerItemContainer","selected","PickerSelectedOptionSelected","SelectedCircle","ArrowButtonContainer","getOptionIndex","selectedOption","valueProperty","option","arrowProps","fluidHeight","fluidWidth","PickerPanel","selectedOptionIndex","listYPosition","header","activeIndex","prevProps","pickerListContainerEl","pickerListContainerRef","pickerListEl","pickerListRef","numberItemsOnScreen","optionHeight","pickerItemRef","listHeight","optionValue","firstColumn","restColumns","lastColumn","findIndex","validIndex","getOptionValue","supposedPos","nextPos","nextValidOption","op","hasHeader","disabledTimes","computeContainerTranslation","classProps","selectedOptionRef","transform","valueFormatted","from","to","nextProps","labelProperty","arrowStep","TimePickerContainer","TimePickerHeader","TimePickerPanelContainer","generateOption","TimePickerMenu","onTimeChange","selectedHour","toFormatted","withLeadingZeros","hoursOptions","range","rangeHours","minutesInterval","rangeMinutes","selectedMinute","handleMinuteChange","rangeSeconds","meridiemSelected","hasHeaderDisplay","undefined","object","updateDateAndTime","splittedDate","DateTimePickerWrapper","TimePicker","TimePickerWrapper","onErrorDate","SingleDatePickerPhrases","onChangeTimePicker","onErrorTime","dateInputProps","onDateInputDateChange","setSelectedDate","incompleteInput","setIncompleteInput","setIsOpen","disabledTimeRange","dateTimePickerWrapperRef","fullFormat","visiblePanels","currentYear","error","message","hasSelectedDate","inputMoment","rightAddon","dateSelected","handleOutsideClick","pickerTime","customInputType","handleChange","restInputProps","display","isShowElipsisActive","inputValue","timeBlocked","dateBlocked","placeholderDefault","english","classNameDefault","idDefault","DSDateTimePicker","cssClassName","dateTimePickerProps","describe","DateTimePickerWithSchema"],"mappings":"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","file":"static/js/43.d4503318.chunk.js","sourcesContent":["import React, {useState, memo} from 'react';\nimport moment from 'moment';\nimport DSDateTimePicker from '@elliemae/ds-date-time-picker';\n\n\nconst Component = () => {\n  const [toggle, setToggle] = useState({\n    label: 'HIDE',\n    show: true\n  });\n  const [loan, setLoan] = useState({\n    value: null\n  });\n\n  const changeEvent = (event, key) => {\n    const newValue = event ? moment((event).format()) : event;\n    console.log(newValue);\n      setLoan({\n        value: newValue,\n      });\n  };\n\n  const changeListener = (selectedDate) => {\n    changeEvent(selectedDate);\n  }\n\n  function toggleValue(e) {\n    e.preventDefault();\n    const show = !toggle.show;\n    const label = toggle.show ? 'SHOW' : 'HIDE';\n    setToggle({\n      label: label,\n      show: show\n    });\n  }\n  return (\n    <div style={{width: '200px'}}>\n      <button onClick={toggleValue}>{toggle.label}</button>\n      { toggle.show ?\n        <DSDateTimePicker\n          width={200}\n          date={loan.value}\n          datePickerProps={{\n            hideKeyboardShortcutsPanel: true,\n            onDateChange: changeListener,\n          }}\n          placeholder=\"Select date and time\"\n          timePickerProps={{\n            containerProps: { id: 'my-custom-id' },\n            disabled: false,\n            onChange: changeListener,\n          }}\n        />\n        : null\n      }\n    </div>\n\n  )\n}\nexport default memo(Component);\n","import { padStart } from './utils';\n\nexport const getVisibleTimeByFormat = format => ({\n  showHours:\n    format.indexOf('H') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('k') > -1,\n  showMinutes: format.indexOf('m') > -1,\n  showSeconds: format.indexOf('s') > -1,\n  use12Hours:\n    format.indexOf('A') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('a') > -1,\n});\n\nexport const addLeadingZeros = count => number =>\n  padStart(String(number), count, '0');\n","/* eslint-disable max-params */\n/* eslint-disable complexity */\n/* eslint-disable max-lines */\nimport { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport moment from 'moment';\n\nconst currentYear = new Date().getFullYear();\n\nconst getNextSibling = (elem, selector) => {\n  // Get the next sibling element\n  let sibling = elem.nextElementSibling;\n  // If there's no selector, return the first sibling\n  if (!selector) return sibling;\n\n  // If the sibling matches our selector, use it\n  // If not, jump to the next sibling and continue the loop\n  while (sibling) {\n    if (sibling.matches(selector)) return sibling;\n    sibling = sibling.nextElementSibling;\n  }\n  return sibling;\n};\n\nconst getPreviousSibling = (elem, selector) => {\n  let sibling = elem.previousElementSibling;\n  if (!selector) return sibling;\n  while (sibling) {\n    if (sibling.matches(selector)) return sibling;\n    sibling = sibling.previousElementSibling;\n  }\n  return sibling;\n};\n\nexport const isArrowIncrementDecrement = (key) =>\n  key === 'ArrowDown' || key === 'ArrowUp';\n\n// TODO remove and keep `true` behavior ( PUI-4141 )\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros, leadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros\n    ? addLeadingZeros(leadingZeros)(value)\n    : String(value);\n};\n\nexport const getFormattedDay = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n\n  if (parsedValue > 31) return '31';\n  return formatTimeNumber(parseTimeNumberFromText(v), true, 2);\n};\n\nexport const getShouldShortcircuitDay = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n  if (parsedValue > 31) return true;\n  // if the first input is in range 4-9 then there is no other option\n  // so we auto advance\n  if (parsedValue > 3 && parsedValue < 10) return true;\n  return false;\n};\n\nexport const getFormattedYear = (value) => {\n  const v = value.length > 4 ? value.slice(-4) : value;\n  if (parseInt(v) > 9999) return '9999';\n  return formatTimeNumber(parseTimeNumberFromText(v), true, 4);\n};\n\nexport const getFormattedMonth = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n  if (parsedValue > 12) return '12';\n  return formatTimeNumber(parseTimeNumberFromText(v), true, 2);\n};\n\nexport const getShouldShortcircuitMonth = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n  if (parsedValue > 12) return true;\n  // if the first input is in range 2-9 then there is no other option\n  // so we auto advance\n  if (parsedValue > 1 && parsedValue < 10) return true;\n  return false;\n};\n\nexport const parseTimeNumberFromText = (stringValue) => {\n  const parsedInt = parseInt(stringValue);\n\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\n// trigger onBlur for entire DateInput control if focus is not in day, month, year\nexport const triggerOnBlur = (blurEvent, onBlur = () => {}) => {\n  const { target: currentEl = {}, relatedTarget } = blurEvent || {};\n  const nextElement = currentEl.nextElementSibling;\n  const { nextElementSibling } = nextElement || {};\n  // relatedTarget points to the element that is currently having focus\n  if (!nextElementSibling || nextElementSibling !== relatedTarget) {\n    onBlur(blurEvent);\n  }\n};\n\nexport const focusNextInput = (currentEl) => {\n  getNextSibling(currentEl, 'input').focus();\n};\n\nexport const focusPreviousInput = (currentEl) => {\n  getPreviousSibling(currentEl, 'input').focus();\n};\n\nexport const getValidTimeNumber = (\n  { min, max },\n  number,\n  valueString = '',\n  onError = () => null,\n) => {\n  if (valueString === '0' || number === 0) return null;\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    onError();\n    return max;\n  }\n  if (number < min) {\n    onError();\n    return min;\n  }\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  if (stringValue.length > 1) return true;\n  return number * 10 > max;\n};\n\nexport const getDateValuesFromTime = (time, format) => {\n  if (!time || !time.format) return {};\n  const month = time.format('MM');\n  const day = time.format('DD');\n  const year = time.format('YYYY');\n  return {\n    month: getFormattedMonth(format, month),\n    day: getFormattedDay(format, day),\n    year: getFormattedYear(format, year),\n  };\n};\n\nexport const resetTimeValues = () => ({\n  month: '',\n  day: '',\n  year: '',\n});\n\nexport const onInputFocus = (e) => {\n  e.preventDefault();\n  e.stopPropagation();\n  // we select the whole value to be able to override the value on first key\n  // we don't use selection color to be consistent with the highlight of the input\n  e.target.select();\n};\n\nexport const getNextTimeValue = (\n  value,\n  target,\n  yearMinRange,\n  yearMaxRange,\n  step = 1,\n  incrementing = true,\n) => {\n  const parsedValue = parseTimeNumberFromText(value);\n  let result = incrementing ? parsedValue + step : parsedValue - step;\n  if (target === 'year') {\n    if (result < yearMinRange) result = currentYear;\n    if (result > yearMaxRange) result = currentYear;\n  }\n  return result;\n};\n\nexport const focusNextInputIfNeeded = (\n  currentEl,\n  max,\n  number,\n  stringValue,\n  currentKey,\n) => {\n  if (\n    shouldFocusNextInput(max, number, stringValue) &&\n    !isArrowIncrementDecrement(currentKey)\n  ) {\n    focusNextInput(currentEl);\n  }\n};\n\nexport const commonInputProps = (digits = 2, onKeyDown, placeholder) => {\n  const props = {\n    pattern: '[0-9]*',\n    placeholder,\n    type: 'text',\n    onKeyDown,\n    onFocus: onInputFocus,\n  };\n  if (digits === 4) props.placeholder = 'YYYY';\n  return props;\n};\n\nexport const handleCompletedDate = (\n  time,\n  date,\n  show,\n  INTERNAL_V2_NO_MUTATION,\n) => {\n  // clone time to avoid mutation when INTERNAL_V2_NO_MUTATION is true\n  const newDate = INTERNAL_V2_NO_MUTATION\n    ? (time && moment(time)) || moment()\n    : time || moment();\n\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n\n  if (time && !year && !month && !day) return '';\n\n  newDate.value = `${year}-${month}-${day}`;\n\n  if (showMonth && month) newDate.month(parseInt(month - 1, 10));\n  if (showDay && day) newDate.date(parseInt(day, 10));\n  if (showYear && year) newDate.year(parseInt(year, 10));\n\n  return newDate;\n};\n\nexport const isTimeCompletelySet = (date, show, range) => {\n  let neededValues = [];\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n  const { yearMinRange, yearMaxRange } = range;\n\n  if (showMonth) neededValues = [...neededValues, month || null];\n  if (showDay) neededValues = [...neededValues, day || null];\n  if (showYear) neededValues = [...neededValues, year || null];\n\n  const isValidYear = year < yearMaxRange && year > yearMinRange;\n\n  return !neededValues.some((value) => !value) && isValidYear;\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.5 13a.503.503 0 0 1-.313-.109l-5-4a.5013.5013 0 0 1-.078-.703c.173-.214.488-.25.703-.078L9.5 11.86l4.688-3.75c.218-.172.531-.136.703.078.172.216.138.53-.078.703l-5 4A.501.501 0 0 1 9.5 13z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import { cloneDeep } from 'lodash';\nimport { focusNextInput, focusPreviousInput } from './utils';\n\nconst callChange = (event, handlers, isArrowChange) => {\n  if (event.target.name === 'day') handlers.onDayChange(event, isArrowChange);\n  if (event.target.name === 'month')\n    handlers.onMonthChange(event, isArrowChange);\n  if (event.target.name === 'year') handlers.onYearChange(event, isArrowChange);\n};\n\nconst setTarget = (event, v) => {\n  const n = cloneDeep(event);\n  let newValue = parseInt(n.target.value || 0, 10) + v;\n  if (newValue < 1) newValue = '01';\n  if (event.target.name === 'day' && newValue > 31) newValue = 31;\n  if (event.target.name === 'month' && newValue > 12) newValue = 12;\n  n.target.value = newValue;\n  return n;\n};\n\n// eslint-disable-next-line max-statements, complexity\nexport const onKeyDownHelper = (event, handlers) => {\n  switch (event.key) {\n    case 'ArrowLeft': {\n      event.preventDefault();\n      focusPreviousInput(event.target);\n      break;\n    }\n    case 'ArrowUp': {\n      event.preventDefault();\n      const n = setTarget(event, 1);\n      callChange(n, handlers, true);\n      break;\n    }\n    case 'ArrowDown': {\n      event.preventDefault();\n      const n = setTarget(event, -1);\n      callChange(n, handlers, true);\n      break;\n    }\n    case 'ArrowRight': {\n      event.preventDefault();\n      focusNextInput(event.target);\n      break;\n    }\n    case 'Tab': {\n      if (event.shiftKey) break;\n      if (event.target.value.length > 0 && event.target.name !== 'year')\n        event.preventDefault();\n      callChange(event, handlers);\n      break;\n    }\n    case 'Backspace': {\n      // HTML Date input behavior, clear everything when deleting\n      event.preventDefault();\n      const n = cloneDeep(event);\n      n.target.value = '';\n      callChange(n, handlers, true);\n      break;\n    }\n    case 'Enter': {\n      break;\n    }\n    default:\n      break;\n  }\n};\n","import styled from 'styled-components';\nimport { Grid } from '@elliemae/ds-grid';\n\n\nexport const DateInputFluidContainer = styled(Grid)`\n  width: 100%;\n  height: 100%;\n  align-items: center;\n`;\n\nexport const DateInputWrapper = styled(Grid)`\n  align-items: center;\n  align-content: center;\n  ${({ disabled, theme }) =>\n    disabled\n      ? `\n    background: ${theme.colors.neutral[100]};\n    color: ${theme.colors.neutral[500]};\n    `\n      : ''}\n  width: 102px;\n\n  &:focus {\n    outline-style: none;\n    box-shadow: none;\n    border-color: transparent;\n  }\n`;\n\nexport const DateInputInput = styled.input`\n  outline: none;\n  border: none;\n  border-radius: 0;\n  width: ${(props) => (props.size === 'l' ? '38px' : '25px')};\n  height: ${(props) => props.theme.space.xs};\n  ${({ disabled, theme }) =>\n    disabled\n      ? `\n  background: ${theme.colors.neutral[100]};\n  color: ${theme.colors.neutral[500]};\n  `\n      : ''}\n  padding-left: 4px;\n  padding-right: 0px;\n  &::placeholder {\n    font-size: 95%;\n    font-style: italic;\n  }\n  :-moz-placeholder {\n    font-size: 95%;\n    font-style: italic;\n  }\n\n  ::-moz-placeholder {\n    font-size: 95%;\n    font-style: italic;\n  }\n  &:focus {\n    background: ${({ theme }) => theme.colors.brand['300']};\n    background-clip: content-box;\n  }\n  ::-moz-selection {\n    background: transparent;\n  }\n  ::selection {\n    background: transparent;\n  }\n`;\n\nexport const DateInputDivider = styled.div`\n  padding: 1px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nexport const DateInputsPropTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onDateChange: PropTypes.func,\n  onCustomKeyDown: PropTypes.func,\n  onError: PropTypes.func,\n  format: PropTypes.string,\n  showMonth: PropTypes.bool,\n  showDay: PropTypes.bool,\n  showYear: PropTypes.bool,\n  step: PropTypes.number,\n  yearMaxRange: PropTypes.number,\n  disabled: PropTypes.bool,\n  yearMinRange: PropTypes.number,\n  time: PropTypes.string,\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15.99 2H14v-.52c0-.27-.21-.48-.48-.48h-.05c-.26 0-.47.21-.47.48V2H7v-.52C7 1.21 6.79 1 6.52 1h-.04c-.27 0-.48.21-.48.48V2H4.01C2.9 2 2 2.9 2 4.01V17c0 1.1.9 2 2.01 2H16c1.1 0 2.01-.9 2.01-2.01V4.01C18 2.9 17.1 2 15.99 2zM17 16.99c0 .56-.45 1.01-1.01 1.01H4.01C3.45 18 3 17.55 3 16.99V6h14v10.99zM3 5v-.99C3 3.45 3.45 3 4.01 3H6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h1.99c.56 0 1.01.45 1.01 1.01V5H3z',\n    'M5 8h2v2H5V8zM13 8h2v2h-2V8zM9 8h2v2H9V8zM5 11h2v2H5v-2zM13 11h2v2h-2v-2zM9 11h2v2H9v-2zM5 14h2v2H5v-2zM9 14h2v2H9v-2z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DSIconColors, DSIconSizes } from '@elliemae/ds-basic/Icon';\nimport DatePicker from '@elliemae/ds-icons/DatePicker';\nimport DSButton, { buttonTypes } from '@elliemae/ds-basic/Button';\nimport { iconSizes } from '../../../../../shared-configs/prop-types';\n\nexport const Picker = ({\n  className = 'date-picker-icon',\n  disabled = false,\n  icon = <DatePicker />,\n  size = DSIconSizes.M,\n  buttonActionType = 'secondary',\n  onClick = () => null,\n  onBlur = () => null,\n  readOnly = false,\n  tabIndex = 0,\n  innerRef,\n  ...rest\n}) => (\n  <DSButton\n    innerRef={innerRef}\n    aria-label={rest['aria-label'] || 'Date Picker Button'}\n    buttonType={buttonActionType}\n    className={className}\n    color={!disabled ? DSIconColors.PRIMARY : DSIconColors.NEUTRAL}\n    disabled={disabled}\n    icon={icon}\n    onBlur={onBlur}\n    onClick={onClick}\n    readOnly={readOnly}\n    size={size}\n    tabIndex={tabIndex}\n    data-testid=\"btn-date-picker\"\n  />\n);\n\nexport const PickerPropsTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n  size: PropTypes.oneOf(iconSizes),\n  buttonActionType: PropTypes.oneOf(buttonTypes),\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  readOnly: PropTypes.bool,\n  tabIndex: PropTypes.number,\n};\n\nPicker.propTypes = PickerPropsTypes;\nexport default Picker;\n","/* eslint-disable indent */\n/* eslint-disable max-lines */\n/* eslint-disable complexity */\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport {\n  commonInputProps,\n  triggerOnBlur,\n  focusNextInput,\n  getFormattedDay,\n  getShouldShortcircuitDay,\n  getFormattedMonth,\n  getShouldShortcircuitMonth,\n  getFormattedYear,\n} from './utils';\nimport { onKeyDownHelper } from './helpers';\nimport {\n  DateInputDivider,\n  DateInputWrapper,\n  DateInputInput,\n  DateInputFluidContainer,\n} from './styled';\nimport { DateInputsPropTypes } from './propsTypes';\n\nconst FORMAT = 'MMDDYYYY';\n\nexport const DateInputs = ({\n  onBlur,\n  onChange,\n  onDateChange,\n  disabled,\n  onCustomKeyDown,\n  time,\n  tabIndex,\n  innerRef,\n}) => {\n  const [month, setMonth] = useState('');\n  const [day, setDay] = useState('');\n  const [year, setYear] = useState('');\n  const [onChangeDateTrigger, setOnChangeDateTrigger] = useState({});\n  const dayRef = React.useRef<HTMLInputElement>();\n  const [\n    haveInputsOnChangeTriggered,\n    setHaveInputsOnChangeTriggered,\n  ] = useState(false);\n\n  let digits = 2;\n  let placeholder = '';\n\n  const handleFluidClick = React.useCallback((e: React.MouseEvent<Element, MouseEvent>) => {\n    if(!(e.target as HTMLInputElement).type && dayRef.current) {\n      dayRef.current.focus();\n    }\n  }, [dayRef.current])\n  \n  const triggerOnDateChange = React.useCallback(() => {\n    if (month && day && year && haveInputsOnChangeTriggered) {\n      const momentValue = moment(`${month}${day}${year}`, 'MMDDYYYY', true);\n      if (momentValue.isValid()) {\n        onDateChange(momentValue);\n      }\n      setHaveInputsOnChangeTriggered(false);\n    }\n  }, [day, month, year, haveInputsOnChangeTriggered]);\n\n  // isArrowChange is coming from the onKeyDown handler in helpers\n  const onMonthChange = React.useCallback((e, isArrowChange) => {\n    const value = getFormattedMonth(e.target.value);\n    const shouldAdvance = getShouldShortcircuitMonth(e.target.value);\n    setMonth(value);\n    setHaveInputsOnChangeTriggered(true);\n    if (e.target.value.length > 1 || shouldAdvance) {\n      if (!isArrowChange) focusNextInput(e.target);\n      setOnChangeDateTrigger({});\n    }\n  },[]);\n\n  // isArrowChange is coming from the onKeyDown handler in helpers\n  const onDayChange = React.useCallback((e, isArrowChange) => {\n    const value = getFormattedDay(e.target.value);\n    const shouldAdvance = getShouldShortcircuitDay(e.target.value);\n    setDay(value);\n    setHaveInputsOnChangeTriggered(true);\n    if (e.target.value.length > 1 || shouldAdvance) {\n      if (!isArrowChange) focusNextInput(e.target);\n      setOnChangeDateTrigger({});\n    }\n  },[]);\n\n  const onYearChange = React.useCallback((e) => {\n    const value = getFormattedYear(e.target.value);\n    setYear(value);\n    setHaveInputsOnChangeTriggered(true);\n    setOnChangeDateTrigger({});\n  },[]);\n\n  useEffect(() => {\n    // When component mounts haveInputsOnChangeTriggered is set to false\n    // so this is not triggered on mount but is triggered with all other changes\n    if (haveInputsOnChangeTriggered) {\n      const momentValue = moment(`${month}${day}${year}`, FORMAT, true);\n      if (month || day || year)\n        onChange(\n          `${month}${day}${year}`,\n          momentValue.isValid() ? momentValue : null,\n        );\n    }\n  }, [day, month, year]);\n\n  useEffect(() => {\n    triggerOnDateChange();\n  }, [onChangeDateTrigger]);\n\n  useEffect(() => {\n    if (\n      time &&\n      time !== `${month}${day}${year}` &&\n      moment(time, 'MMDDYYYY').isValid()\n    ) {\n      const values = String(time || '');\n      if (values.slice(0, 2)) setMonth(values.slice(0, 2));\n      if (values.slice(2, 4)) setDay(values.slice(2, 4));\n      if (values.slice(4, 8)) setYear(values.slice(4, 8));\n    } else if (!time && (month || day || year)) {\n      setMonth('');\n      setDay('');\n      setYear('');\n    }\n  }, [time]);\n\n  const onKeyDown = (event) =>\n    onKeyDownHelper(event, {\n      onDayChange,\n      onMonthChange,\n      onYearChange,\n    });\n\n  const renderMonthInput = () => {\n    placeholder = 'MM';\n    const onMonthInputBlur = (e) => {\n      setOnChangeDateTrigger({});\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DateInputInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autoComplete=\"off\"\n        key=\"month-input\"\n        data-testid=\"month\"\n        disabled={disabled}\n        name=\"month\"\n        onBlur={onMonthInputBlur}\n        onChange={onMonthChange}\n        value={month}\n        tabIndex={tabIndex}\n        ref={dayRef}\n      />\n    );\n  };\n  const renderDayInput = () => {\n    placeholder = 'DD';\n    const onDayInputBlur = (e) => {\n      setOnChangeDateTrigger({});\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DateInputInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autoComplete=\"off\"\n        key=\"day-input\"\n        data-testid=\"day\"\n        disabled={disabled}\n        name=\"day\"\n        onBlur={onDayInputBlur}\n        onChange={onDayChange}\n        value={day}\n        tabIndex={tabIndex}\n      />\n    );\n  };\n  const renderYearInput = () => {\n    placeholder = 'YY';\n    digits = 4;\n    const onYearInputBlur = (e) => {\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DateInputInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autoComplete=\"off\"\n        key=\"year-input\"\n        data-testid=\"year\"\n        disabled={disabled}\n        name=\"year\"\n        onBlur={onYearInputBlur}\n        onChange={onYearChange}\n        value={year}\n        size=\"l\"\n        tabIndex={tabIndex}\n      />\n    );\n  };\n\n  const renderDateInputs = () => {\n    const inputs = [renderMonthInput(), renderDayInput(), renderYearInput()];\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? <DateInputDivider>/</DateInputDivider> : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n    ];\n  };\n\n  return (\n    <DateInputFluidContainer\n      onClick={handleFluidClick}\n      data-testid=\"date-input-fluidContainer\"\n    >\n    <DateInputWrapper\n      disabled={disabled}\n      ref={innerRef}\n      onKeyDown={onCustomKeyDown}\n      tabIndex={-1}\n      cols={['auto', '6px', 'auto', '6px', 'auto']}\n    >\n      {renderDateInputs()}\n    </DateInputWrapper>\n    </DateInputFluidContainer>\n  );\n};\n\nDateInputs.propTypes = DateInputsPropTypes;\n","/* eslint-disable react/prop-types */\n/* eslint-disable max-lines */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport 'react-dates/initialize';\nimport {\n  DayPickerSingleDateController,\n  SingleDatePickerPhrases,\n} from 'react-dates';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport ChevronLeft from '@elliemae/ds-icons/ChevronLeft';\nimport { renderMonthElement } from '../DatePickerRenderMonth/DatePickerRenderMonth';\nimport DatePickerNavigation from '../DatePickerNavigation/DatePickerNavigation';\nimport DatePickerDay from '../DatePickerDay/DatePickerDay';\n\nconst { classNameElement, classNameBlock } = convertPropToCssClassName(\n  'datepicker-range',\n);\n\nexport default class DSDatePickerController extends React.Component {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    date: '',\n    value: '',\n    enableOutsideDays: false,\n    initialVisibleMonth: moment(),\n    firstDayOfWeek: 0,\n    keepOpenOnDateSelect: true,\n    hideKeyboardShortcutsPanel: true,\n    onPrevMonthClick: () => null,\n    onNextMonthClick: () => null,\n    onClose: () => null,\n    onChange: () => null,\n    onClickEscape: () => null,\n    onDateChange: () => null,\n    phrases: SingleDatePickerPhrases,\n    // displayFormat: 'L',\n    displayFormatDay: 'D',\n    transitionDuration: 0,\n    // verticalSpacing: 0,\n    isDayBlocked: () => false,\n    isOutsideRange: () => false,\n    isDayHighlighted: () => false,\n    numberOfMonths: 1,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: this.getSafeValue(),\n    };\n    this.firstFocusableItem = React.createRef();\n  }\n\n  // eslint-disable-next-line react/state-in-constructor\n  state = {};\n\n  componentDidMount() {\n    this.datePicker.addEventListener('mouseup', this.handleMouseUp, false);\n    document.addEventListener('keydown', this.handleKeyDown, false);\n    setTimeout(() => {\n      if (this.datePicker) {\n        const [calendarDaySelected] = this.datePicker.getElementsByClassName(\n          'CalendarDay__selected',\n        );\n\n        if (calendarDaySelected) calendarDaySelected?.focus();\n        else\n          this.firstFocusableItem.current\n            .closest('.DayPickerNavigation_button')\n            .focus();\n      }\n    }, 400);\n  }\n\n  componentWillUnmount() {\n    this.datePicker.removeEventListener('mouseup', this.handleMouseUp, false);\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  handleMouseUp = () => {\n    const focusedElement = document.activeElement;\n\n    focusedElement.blur();\n  };\n\n  handleKeyDown = (event) => {\n    const [firstDay, ...restOfDays] = document\n      .getElementsByClassName('CalendarMonthGrid_month__horizontal')[1]\n      .getElementsByClassName('CalendarDay');\n    const [lastDay] = restOfDays.slice(-1);\n    const { onClickEscape } = this.props;\n\n    switch (event.key) {\n      case 'Home':\n        firstDay.focus();\n        break;\n      case 'End':\n        lastDay.focus();\n        break;\n      case 'Escape':\n        onClickEscape();\n        break;\n      default:\n        break;\n    }\n  };\n\n  getSafeValue = () => {\n    const { value, date, defaultValue } = this.props;\n    const { selectedDate } = this.state;\n    if (value) {\n      return moment(value);\n    }\n    if (date) {\n      return moment(date);\n    }\n    if (defaultValue) {\n      return moment(defaultValue);\n    }\n    if (selectedDate) {\n      return moment(selectedDate);\n    }\n    return null;\n  };\n\n  isControlled = () => {\n    const { value, date } = this.props;\n    return Boolean(value) || Boolean(date);\n  };\n\n  handleDateChange = (date) => {\n    const { readOnly, onDateChange, onChange } = this.props;\n    if (!readOnly) {\n      if (!this.isControlled()) {\n        this.setState({ selectedDate: date });\n      }\n      onDateChange(date);\n      onChange(date);\n    }\n  };\n\n  handleChange = (dataInput) => {\n    const { onDateChange, onChange } = this.props;\n    const momentvalue = moment(dataInput.target.value);\n    this.setState({ selectedDate: momentvalue });\n    onDateChange(momentvalue);\n    onChange(momentvalue);\n  };\n\n  handleNavClick = (date, nav) => {\n    const [prev, next] = document.getElementsByClassName(\n      'DayPickerNavigation_button',\n    );\n    const { onPrevMonthClick, onNextMonthClick } = this.props;\n\n    if (nav === 'prev') {\n      prev.focus();\n      onPrevMonthClick(date);\n    } else {\n      next?.focus();\n      onNextMonthClick(date);\n    }\n  };\n\n  insideBlur = (event) => {\n    if (!event.currentTarget.contains(event.relatedTarget)) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const {\n      numberOfMonths,\n      enableOutsideDays,\n      transitionDuration,\n      initialVisibleMonth,\n      firstDayOfWeek,\n      keepOpenOnDateSelect,\n      hideKeyboardShortcutsPanel,\n      onClose,\n      phrases,\n      displayFormatDay,\n      isDayBlocked,\n      isOutsideRange,\n      isDayHighlighted,\n      onOutsideClick,\n      key,\n      calendarProps,\n    } = this.props;\n\n    const safedate = this.getSafeValue();\n    const safeinitialMonth =\n      safedate && safedate.isValid()\n        ? () => safedate\n        : () => initialVisibleMonth;\n\n    return (\n      <div onBlur={this.insideBlur}>\n        <div\n          ref={(elem) => {\n            this.datePicker = elem;\n          }}\n          className={classNameBlock(\n            'wrapper-day-picker-single-date-controller',\n          )}\n          {...calendarProps}\n          data-testid=\"calendar-wrapper\"\n        >\n          <DayPickerSingleDateController\n            key={key}\n            date={safedate}\n            enableOutsideDays={enableOutsideDays}\n            firstDayOfWeek={firstDayOfWeek}\n            focused\n            hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n            initialVisibleMonth={safeinitialMonth}\n            isDayBlocked={isDayBlocked}\n            isDayHighlighted={isDayHighlighted}\n            isOutsideRange={isOutsideRange}\n            keepOpenOnDateSelect={keepOpenOnDateSelect}\n            navNext={\n              <DatePickerNavigation\n                className={classNameElement('navigation-next')}\n              />\n            }\n            navPrev={\n              <DatePickerNavigation\n                className={classNameElement('navigation-prev')}\n                icon={ChevronLeft}\n                innerRef={this.firstFocusableItem}\n              />\n            }\n            renderMonthElement={renderMonthElement}\n            numberOfMonths={numberOfMonths}\n            onClose={onClose}\n            onDateChange={this.handleDateChange}\n            onFocusChange={this.handleFocus}\n            onNextMonthClick={this.handleNavClick('next')}\n            onOutsideClick={onOutsideClick}\n            onPrevMonthClick={this.handleNavClick('prev')}\n            phrases={phrases}\n            renderDayContents={(date) => (\n              <DatePickerDay\n                className={classNameElement('day-contents')}\n                date={date.format(displayFormatDay)}\n              />\n            )}\n            transitionDuration={transitionDuration}\n            onTab={(e) => {\n              if (e.target.classList.contains('CalendarDay')) {\n                e.preventDefault();\n                onClose();\n              }\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDSDatePickerController.propTypes = {\n  date: PropTypes.instanceOf(Date, moment),\n  value: PropTypes.oneOf(\n    PropTypes.instanceOf(Date),\n    PropTypes.instanceOf(moment),\n  ),\n  enableOutsideDays: PropTypes.bool,\n  initialVisibleMonth: PropTypes.instanceOf(Date, moment),\n  firstDayOfWeek: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  hideKeyboardShortcutsPanel: PropTypes.bool,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n  onClickEscape: PropTypes.func,\n  onChange: PropTypes.func,\n  onDateChange: PropTypes.func,\n  phrases: SingleDatePickerPhrases,\n  // displayFormat: PropTypes.string,\n  displayFormatDay: PropTypes.string,\n  transitionDuration: PropTypes.number,\n  // verticalSpacing: PropTypes.number,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n  numberOfMonths: PropTypes.number,\n};\n\nDSDatePickerController.defaultProps = {\n  date: '',\n  value: '',\n  enableOutsideDays: false,\n  initialVisibleMonth: moment(),\n  firstDayOfWeek: 0,\n  keepOpenOnDateSelect: true,\n  hideKeyboardShortcutsPanel: true,\n  onPrevMonthClick: () => null,\n  onNextMonthClick: () => null,\n  onClose: () => null,\n  onClickEscape: () => null,\n  onChange: () => null,\n  onDateChange: () => null,\n  phrases: PropTypes.shape({\n    calendarLabel: PropTypes.string,\n    closeDatePicker: PropTypes.string,\n    clearDates: PropTypes.string,\n    focusStartDate: PropTypes.string,\n    jumpToPrevMonth: PropTypes.string,\n    jumpToNextMonth: PropTypes.string,\n    keyboardShortcuts: PropTypes.string,\n    showKeyboardShortcutsPanel: PropTypes.string,\n    hideKeyboardShortcutsPanel: PropTypes.string,\n    openThisPanel: PropTypes.string,\n    enterKey: PropTypes.string,\n    leftArrowRightArrow: PropTypes.string,\n    upArrowDownArrow: PropTypes.string,\n    pageUpPageDown: PropTypes.string,\n    homeEnd: PropTypes.string,\n    escape: PropTypes.string,\n    questionMark: PropTypes.string,\n    selectFocusedDate: PropTypes.string,\n    moveFocusByOneDay: PropTypes.string,\n    moveFocusByOneWeek: PropTypes.string,\n    moveFocusByOneMonth: PropTypes.string,\n    moveFocustoStartAndEndOfWeek: PropTypes.string,\n    returnFocusToInput: PropTypes.string,\n    keyboardNavigationInstructions: PropTypes.string,\n    chooseAvailableStartDate: PropTypes.func,\n    chooseAvailableEndDate: PropTypes.func,\n    dateIsUnavailable: PropTypes.func,\n    dateIsSelected: PropTypes.func,\n  }),\n  // displayFormat: 'L',\n  displayFormatDay: 'D',\n  transitionDuration: 0,\n  // verticalSpacing: 0,\n  isDayBlocked: () => false,\n  isOutsideRange: () => false,\n  isDayHighlighted: () => false,\n  numberOfMonths: 1,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport DatePickerPicker, {\n  PickerPropsTypes,\n} from './DatePickerPicker/DatePickerPicker';\nconst { classNameElement } = convertPropToCssClassName('datepicker-range');\n\nconst noop = () => null;\nfunction DatePickerDropdown({\n  disabled = false,\n  readOnly,\n  onClick = noop,\n  isOpen,\n  menu,\n  zIndex,\n  pickerProps,\n  pickerRef,\n}) {\n  return (\n    <DSPopper\n      contentComponent={menu}\n      isOpen={isOpen}\n      modifiers={{\n        preventOverflow: {\n          enabled: true,\n          padding: 0,\n          boundariesElement: 'window',\n        },\n      }}\n      showArrow={false}\n      triggerComponent={\n        <div>\n          <DatePickerPicker\n            innerRef={pickerRef}\n            {...pickerProps}\n            className={classNameElement('picker')}\n            disabled={disabled}\n            onClick={onClick}\n            readOnly={readOnly}\n          />\n        </div>\n      }\n      zIndex={zIndex}\n    />\n  );\n}\n\nDatePickerDropdown.propTypes = {\n  pickerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  onClick: PropTypes.func,\n  isOpen: PropTypes.bool,\n  menu: PropTypes.element,\n  zIndex: PropTypes.number,\n  pickerProps: PropTypes.shape(PickerPropsTypes),\n};\n\nexport default DatePickerDropdown;\n","export const AM = 'am';\nexport const PM = 'pm';\nexport const ARROW_UP = 'ArrowUp';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const BACKSPACE = 'Backspace';\nexport const ESCAPE = 'Escape';\nexport const HOME = 'Home';\nexport const SHIFT = 'Shift';\nexport const END = 'End';\nexport const HOUR_RANGE_12 = { min: 0, max: 12 };\nexport const HOUR_RANGE_24 = { min: 0, max: 24 };\nexport const GENERAL_TIME_RANGE = { min: 0, max: 59 };\nexport const PLACEHOLDER_TIME = {\n  hour: 'hour',\n  minutes: 'minutes',\n  seconds: 'seconds',\n  meridiem: 'meridiem',\n};\n","import { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  SHIFT,\n  PLACEHOLDER_TIME,\n} from '../../../../shared-configs/constants';\n\nconst isAM = (time) => time && time.hour() < 12;\n\nexport const isArrowIncrementDecrement = (key) =>\n  key === ARROW_DOWN || key === ARROW_UP || key === SHIFT;\n\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nexport const placeholderFormat = (position, format, use12Hours) => {\n  if (position === PLACEHOLDER_TIME.hour) {\n    return _placeholderHour(format, use12Hours);\n  }\n  if (position === PLACEHOLDER_TIME.minutes) {\n    return format.indexOf('mm') > -1 ? 'mm' : 'm';\n  }\n  if (position === PLACEHOLDER_TIME.seconds) {\n    return format.indexOf('ss') > -1 ? 'ss' : 's';\n  }\n  if (position === PLACEHOLDER_TIME.meridiem) {\n    return format.indexOf('A') > -1 ? 'A' : 'a';\n  }\n};\n\nconst _placeholderHour = (format, use12Hours) => {\n  if (use12Hours) {\n    return format.indexOf('hh') > -1 ? 'hh' : 'h';\n  }\n  return format.indexOf('HH') > -1 ? 'HH' : 'H';\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros ? addLeadingZeros(2)(value) : String(value);\n};\n\nexport const formatMinutes = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('mm') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatSeconds = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('ss') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatHour = (format, value) => {\n  const shouldAddLeadingZeros =\n    format.indexOf('HH') > -1 || format.indexOf('hh') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\n\nexport const formatMeridiem = (format, value) =>\n  format.indexOf('A') > -1 ? value.toUpperCase() : value.toLowerCase();\n\nexport const parseTimeNumberFromText = (stringValue) => {\n  const parsedInt = parseInt(stringValue);\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\nexport const focusNextInput = (currentEl) => {\n  const nextElement = currentEl.nextElementSibling;\n  if (nextElement && nextElement.nextElementSibling) {\n    nextElement.nextElementSibling.focus();\n  }\n};\n\nexport const focusPreviousInput = (currentEl) => {\n  const previousElement = currentEl.previousElementSibling;\n  if (previousElement && previousElement.previousElementSibling) {\n    previousElement.previousElementSibling.focus();\n  }\n};\n\nexport const getValidTimeNumber = ({ min, max }, number, typed) => {\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    if (isNaN(typed)) return parseInt(typed);\n    return max;\n  }\n  if (number < min) return min;\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  const safeString = String(stringValue);\n  const cleanString = safeString.startsWith('00')\n    ? safeString.slice(1)\n    : safeString;\n  return number * 10 > max || String(max).length === cleanString.length;\n};\n\nexport const getTimeValuesFromTime = (time, format, use12Hours) => {\n  if (!time || !time.hour) return {};\n  const hours = use12Hours ? time.hour() % 12 || 12 : time.hour();\n  const minutes = time.minutes();\n  const seconds = time.seconds();\n  const meridiem = !isAM(time) ? PM : AM;\n\n  return {\n    hours: formatHour(format, hours),\n    minutes: formatMinutes(format, minutes),\n    seconds: formatSeconds(format, seconds),\n    meridiem,\n  };\n};\n\nexport const resetTimeValues = () => ({\n  hours: '',\n  minutes: '',\n  seconds: '',\n  meridiem: AM,\n});\n\nexport const commonInputProps = (onKeyDown, onInputFocus, onClick) => ({\n  pattern: '[0-9]*',\n  type: 'text',\n  onKeyDown,\n  onClick,\n  onFocus: onInputFocus,\n});\n","/* eslint-disable complexity */\n/* eslint-disable react/prop-types */\n/* eslint-disable max-lines */\n/* eslint-disable max-statements */\nimport React, { useEffect, useState } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport {\n  commonInputProps,\n  formatHour,\n  formatMinutes,\n  formatSeconds,\n  formatMeridiem,\n  getValidTimeNumber,\n  setNativeValue,\n  parseTimeNumberFromText,\n  focusNextInput,\n  focusPreviousInput,\n  getTimeValuesFromTime,\n  isArrowIncrementDecrement,\n  shouldFocusNextInput,\n  placeholderFormat,\n} from './utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  BACKSPACE,\n  ESCAPE,\n  HOME,\n  HOUR_RANGE_12,\n  HOUR_RANGE_24,\n  GENERAL_TIME_RANGE,\n  END,\n  PLACEHOLDER_TIME,\n  SHIFT,\n} from '../../../../shared-configs/constants';\n\nconst blockName = 'input-times-group';\n\nconst InputTimesGroup = aggregatedClasses('div')(blockName);\nconst TimeInput = aggregatedClasses('input')(blockName, 'input');\nconst Divider = aggregatedClasses('span')(\n  blockName,\n  'divider',\n  ({ value }) => ({\n    value,\n  }),\n);\n\n// eslint-disable-next-line react/prop-types\nconst TimeDivider = ({ content = ':', value = '' }) => (\n  <Divider value={!!value}>{content}</Divider>\n);\n\nconst TimeInputs = ({\n  time,\n  format,\n  use12Hours,\n  step = 1,\n  showHours,\n  showMinutes,\n  showSeconds,\n  onChange,\n  disabled,\n  innerRef,\n  clearable,\n  'arial-label': ariaLabel,\n  'aria-label': ariaLabel2,\n}) => {\n  const [meridiem, setMeridiem] = useState('');\n  const [hours, setHours] = useState('');\n  const [minutes, setMinutes] = useState('');\n  const [hasInputValue, setHasInputValue] = useState(false);\n  const [seconds, setSeconds] = useState('');\n  const [currentKey, setCurrentKey] = useState('');\n  const [hasInputBeenTriggered, setHasInputBeenTriggered] = useState(false);\n\n  const [lastTypedNumber, setLastTypedNumber] = useState(null);\n  const inputRefs = {\n    hours: null,\n    minutes: null,\n    seconds: null,\n    meridiem: null,\n  };\n\n  useEffect(() => {\n    if (time && moment(time).isValid()) {\n      const timeValues = getTimeValuesFromTime(time, format, use12Hours);\n\n      setMeridiem(timeValues.meridiem);\n      setHours(timeValues.hours);\n      setMinutes(timeValues.minutes);\n      setSeconds(timeValues.seconds);\n    } else {\n      setMeridiem('');\n      setHours('');\n      setMinutes('');\n      setSeconds('');\n    }\n  }, [time, format, use12Hours]);\n\n  useEffect(() => {\n    const selectedTime = time || moment();\n    if (isTimeCompletelySet() && selectedTime.hours && hasInputBeenTriggered) {\n      if (showHours && hours) selectedTime.hours(hours);\n      if (showMinutes && minutes) selectedTime.minutes(minutes);\n      if (showSeconds && seconds) selectedTime.seconds(seconds);\n      if (use12Hours && meridiem) {\n        const nextHours =\n          meridiem.toLowerCase() === AM ? hours % 12 : (hours % 12) + 12;\n        selectedTime.hour(nextHours);\n      }\n      onChange(selectedTime);\n      setHasInputBeenTriggered(false);\n    }\n  }, [hours, minutes, seconds, meridiem]);\n\n  const focusNextInputIfNeeded = (currentEl, max, number) => {\n    if (\n      shouldFocusNextInput(max, number, currentEl.value) &&\n      !isArrowIncrementDecrement(currentKey) &&\n      !hasInputValue\n    ) {\n      focusNextInput(currentEl);\n    }\n  };\n\n  const getNextTimeValue = (value, incrementing = true) => {\n    const parsedValue = parseTimeNumberFromText(value);\n    return incrementing ? parsedValue + step : parsedValue - step;\n  };\n\n  const onInputFocus = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.target.select();\n  };\n\n  const onClick = (e) => {\n    if (e.target.value) {\n      setHasInputValue(true);\n    }\n  };\n\n  // eslint-disable-next-line max-statements\n  const onKeyDown = (event, max) => {\n    const { target } = event;\n    const { value } = target;\n    setLastTypedNumber(event.key);\n    switch (event.key) {\n      case ARROW_UP: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const incrementedValue = getNextTimeValue(value);\n        setNativeValue(event.target, incrementedValue);\n        break;\n      }\n      case ARROW_DOWN: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const decrementedValue = getNextTimeValue(value, false);\n        setNativeValue(event.target, decrementedValue);\n        break;\n      }\n      case BACKSPACE: {\n        event.preventDefault();\n        if (!value) {\n          focusPreviousInput(event.target);\n        } else {\n          setNativeValue(event.target, '');\n        }\n        break;\n      }\n      case ESCAPE: {\n        event.preventDefault();\n        event.target.blur();\n        break;\n      }\n      case HOME: {\n        event.preventDefault();\n        setNativeValue(event.target, String(max));\n        focusNextInput(event.target);\n        break;\n      }\n      case END: {\n        event.preventDefault();\n        setNativeValue(event.target, '00');\n        focusNextInput(event.target);\n        break;\n      }\n      case SHIFT:\n        event.preventDefault();\n        setCurrentKey(event.key);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const isTimeCompletelySet = () => {\n    let neededValues = [];\n\n    if (showHours) neededValues = [...neededValues, hours || null];\n    if (showMinutes) neededValues = [...neededValues, minutes || null];\n    if (showSeconds) neededValues = [...neededValues, seconds || null];\n    if (use12Hours) neededValues = [...neededValues, meridiem || null];\n\n    return !neededValues.some((value) => !value);\n  };\n\n  const handleSecondsChange = (e) => {\n    const { value } = e.target;\n    const secondsHandled = parseTimeNumberFromText(value);\n\n    const nextSeconds = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      secondsHandled,\n      lastTypedNumber,\n    );\n\n    setSeconds(formatSeconds(format, nextSeconds));\n    setHasInputBeenTriggered(true);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleMinutesChange = (e) => {\n    const { value } = e.target;\n    const minutesHandled = parseTimeNumberFromText(value);\n    const nextMinutes = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      minutesHandled,\n      lastTypedNumber,\n    );\n\n    setMinutes(formatMinutes(format, nextMinutes));\n    setHasInputBeenTriggered(true);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleHoursChange = (e) => {\n    const { value } = e.target;\n    const hour = parseTimeNumberFromText(value);\n    const hoursRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    const nextHour = getValidTimeNumber(hoursRange, hour, lastTypedNumber);\n    setHours(formatHour(format, nextHour));\n    setHasInputBeenTriggered(true);\n    focusNextInputIfNeeded(e.target, hoursRange.max, value);\n  };\n\n  const handleMeridiemKeyDown = (e) => {\n    if (e.key === ARROW_UP || e.key === 'a') {\n      setMeridiem(formatMeridiem(format, AM));\n    } else if (e.key === ARROW_DOWN || e.key === 'p') {\n      setMeridiem(formatMeridiem(format, PM));\n    } else if (e.key === SHIFT) {\n      setCurrentKey(e.key);\n    } else if (e.key === BACKSPACE) {\n      setMeridiem('');\n    }\n    setHasInputBeenTriggered(true);\n  };\n\n  const handleMeridiemBlur = (e) => {\n    const { value } = e.target;\n    if (value !== AM && value !== PM) {\n      setMeridiem('');\n    }\n  };\n\n  const handleOnBlur = (event) => {\n    const selectedTime = moment();\n    if (clearable && !event.currentTarget.contains(event.relatedTarget)) {\n      if (showHours && hours) selectedTime.hours(hours);\n      if (showMinutes && minutes) selectedTime.minutes(minutes);\n      if (showSeconds && seconds) selectedTime.seconds(seconds);\n      if (use12Hours && meridiem) {\n        const nextHours =\n          meridiem.toLowerCase() === AM ? hours % 12 : (hours % 12) + 12;\n        selectedTime.hour(nextHours);\n      }\n      onChange(selectedTime);\n    }\n  };\n\n  const renderSecondsInput = () => {\n    if (!showSeconds) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"seconds-input\"\n        data-testid=\"ds-time-input__seconds\"\n        aria-label={ariaLabel || ariaLabel2 || 'Seconds Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.seconds = node)}\n        onChange={handleSecondsChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.seconds, format)}\n        value={seconds}\n      />\n    );\n  };\n\n  const renderMinutesInput = () => {\n    if (!showMinutes) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"minutes-input\"\n        data-testid=\"ds-time-input__minutes\"\n        aria-label={ariaLabel || ariaLabel2 || 'Minutes Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.minutes = node)}\n        onChange={handleMinutesChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.minutes, format)}\n        value={minutes}\n      />\n    );\n  };\n\n  const renderHoursInput = () => {\n    if (!showHours) return null;\n    const hourFormatRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, hourFormatRange.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"hour-input\"\n        data-testid=\"ds-time-input__hours\"\n        aria-label={ariaLabel || ariaLabel2 || 'Hours Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.hours = node)}\n        onChange={handleHoursChange}\n        placeholder={placeholderFormat(\n          PLACEHOLDER_TIME.hour,\n          format,\n          use12Hours,\n        )}\n        value={hours}\n      />\n    );\n  };\n\n  const renderMeridiemInput = () => {\n    if (!use12Hours) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps}\n        key=\"meridiem-input\"\n        data-testid=\"ds-time-input__ampm\"\n        aria-label={ariaLabel || ariaLabel2 || 'Meridiem Input'}\n        disabled={disabled}\n        onBlur={handleMeridiemBlur}\n        onKeyDown={handleMeridiemKeyDown}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.meridiem, format)}\n        value={meridiem}\n      />\n    );\n  };\n\n  const renderTimeInputs = () => {\n    const inputs = [\n      renderHoursInput(),\n      renderMinutesInput(),\n      renderSecondsInput(),\n    ];\n    /* eslint-disable indent */\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? (\n                <TimeDivider\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={index}\n                  content=\":\"\n                  value={input.props.value}\n                />\n              ) : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n    /* eslint-enable indent */\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n      renderMeridiemInput(),\n    ];\n  };\n\n  return (\n    <InputTimesGroup onBlur={handleOnBlur} innerRef={innerRef}>\n      {renderTimeInputs()}\n    </InputTimesGroup>\n  );\n};\n\nexport default TimeInputs;\n","import React, { useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport memoizeOne from 'memoize-one';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport TimeInputs from './TimeInputs';\n\nconst blockName = 'input-time';\n\nconst InputTimeContainer = aggregatedClasses('div')(blockName);\n\nconst TimeInputImpl = ({\n  format,\n  innerRef,\n  onChange,\n  className,\n  value,\n  disabled,\n  clearable,\n  'arial-label': ariaLabel,\n}) => {\n  const getVisibleTimeInputs = memoizeOne((formatValue) =>\n    getVisibleTimeByFormat(formatValue),\n  );\n  let inputsContainer = useRef();\n\n  const handleFocus = (e) => {\n    if (!e.target.type) {\n      inputsContainer.querySelector('input').focus();\n    }\n  };\n\n  const visibleInputs = useMemo(() => getVisibleTimeInputs(format));\n\n  return (\n    <InputTimeContainer\n      className={className}\n      disabled={disabled}\n      innerRef={innerRef}\n      onClick={handleFocus}\n    >\n      <TimeInputs\n        aria-label={ariaLabel}\n        clearable={clearable}\n        disabled={disabled}\n        format={format}\n        innerRef={(node) => {\n          inputsContainer = node;\n        }}\n        onChange={onChange}\n        time={value}\n        {...visibleInputs}\n      />\n    </InputTimeContainer>\n  );\n};\n\nTimeInputImpl.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /**\n   * Inner reference to the input\n   */\n  innerRef: PropTypes.any,\n  /**\n   * Classes to add to the container\n   */\n  className: PropTypes.string,\n  /**\n   * Styles to add to the container\n   */\n  style: PropTypes.shape({}),\n  /**\n   * Allows a function that is triggered once the time input changes\n   */\n  onChange: PropTypes.func,\n  /**\n   * Valid time format\n   */\n  format: PropTypes.string,\n  /**\n   * Default value once the component is initialized\n   */\n  value: PropTypes.string,\n  /**\n   * Whether the time input is clearable or not\n   */\n  clearable: PropTypes.bool,\n  /**\n   * Whether the time input is disabled or not\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Aria label to add to the container\n   */\n  'aria-label': PropTypes.bool,\n  'arial-label': PropTypes.bool,\n};\n\nexport default TimeInputImpl;\n","import moment from 'moment';\n\nexport const updateDateAndTime = (date, time) => {\n  const splittedDate = moment();\n  splittedDate.month(date?.get('month'));\n  splittedDate.year(date?.get('year'));\n  splittedDate.date(date?.get('date'));\n  splittedDate.hour(time?.get('hour'));\n  splittedDate.minute(time?.get('minute'));\n  splittedDate.second(time?.get('second'));\n\n  return splittedDate;\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.499 6.969a.503.503 0 0 0-.313.109l-5 4a.5013.5013 0 0 0-.078.703c.173.214.488.25.703.078l4.688-3.75 4.688 3.75c.218.172.531.136.703-.078a.5004.5004 0 0 0-.078-.703l-5-4a.501.501 0 0 0-.313-.109z',\n  ],\n  height: 20,\n  width: 20,\n});\n","export function MoveElementOnScroll(\n  element,\n  {\n    container,\n    min = 0,\n    max = element.offsetHeight,\n    speed = 1,\n    smooth = 2,\n    onUpdate = () => null,\n    onEndScroll = () => null,\n  },\n) {\n  let moving = false;\n  let pos = min;\n  let lastPos = pos;\n\n  // todo: move this to utils if we finally need it\n  const requestFrame = (function() {\n    return (\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function(func) {\n        window.setTimeout(func, 1000 / 50);\n      }\n    );\n  })();\n\n  function update() {\n    moving = true;\n    const delta = (pos - lastPos) / smooth;\n    lastPos += delta;\n\n    if (Math.abs(delta) > 0.7) {\n      requestFrame(() => {\n        onUpdate(lastPos, delta);\n        update();\n      });\n    } else {\n      onEndScroll(pos);\n      moving = false;\n    }\n  }\n\n  function scrolling(e) {\n    e.preventDefault(); // disable default scrolling\n    let delta = e.delta || e.wheelDelta;\n    if (delta === undefined) {\n      // for firefox\n      delta = -e.detail;\n      delta *= 10 * speed;\n    }\n\n    pos += -delta * speed;\n    pos = Math.max(min, Math.min(pos, max)); // limit scrolling\n    if (!moving) {\n      update();\n    }\n  }\n\n  container.addEventListener('mousewheel', scrolling, false);\n  container.addEventListener('DOMMouseScroll', scrolling, false);\n\n  return {\n    unsubscribe: () => {\n      container.removeEventListener('mousewheel', scrolling);\n      container.removeEventListener('DOMMouseScroll', scrolling);\n    },\n    updatePosition: newPos => {\n      pos = -newPos;\n      lastPos = -pos;\n    },\n  };\n}\n\nexport default MoveElementOnScroll;\n","/* eslint-disable eqeqeq */\n/* eslint-disable react/prop-types */\n/* eslint-disable complexity */\n/* eslint-disable max-lines */\nimport React, { Component } from 'react';\nimport { findIndex } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport memoizeOne from 'memoize-one';\nimport ChevronSmallUp from '@elliemae/ds-icons/ChevronSmallUp';\nimport ChevronSmallDown from '@elliemae/ds-icons/ChevronSmallDown';\nimport DSButton from '@elliemae/ds-button';\nimport { MoveElementOnScroll } from './moveElementOnScroll';\nimport { validateIndex } from './utils';\n\nconst blockName = 'time-picker-panel';\n\nconst Container = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ scrolling }) => ({ scrolling }),\n);\nconst Wrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst PickerItemListContainer = aggregatedClasses('div')(\n  blockName,\n  'item-list-container',\n);\nconst PickerItemList = aggregatedClasses('div')(blockName, 'item-list');\nconst PickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst PickerItemContainer = aggregatedClasses('div')(\n  blockName,\n  'item',\n  ({ selected, disabled }) => ({ selected, disabled }),\n);\nconst PickerSelectedOptionSelected = aggregatedClasses('div')(\n  blockName,\n  'selected-container',\n);\nconst SelectedCircle = aggregatedClasses('div')(blockName, 'selected-circle');\nconst ArrowButtonContainer = aggregatedClasses('div')(\n  blockName,\n  'arrow-container',\n);\n\nconst getOptionIndex = (options, selectedOption, valueProperty = 'value') => {\n  const index = options.findIndex(\n    (option) => option[valueProperty] === selectedOption,\n  );\n  return validateIndex(index, options);\n};\n\nconst arrowProps = {\n  buttonType: 'text',\n  fluidHeight: true,\n  fluidWidth: true,\n  size: 's',\n};\n\nexport default class PickerPanel extends Component {\n  computeContainerTranslation = memoizeOne((index) => {\n    const { options, valueProperty } = this.props;\n    const { selectedOption, scrolling } = this.state;\n\n    const selectedOptionIndex =\n      index || getOptionIndex(options, selectedOption, valueProperty);\n    const listYPosition =\n      this.minYListPosition - selectedOptionIndex * this.optionHeight;\n\n    if (this.scrollHandler && !scrolling)\n      this.scrollHandler.updatePosition(listYPosition);\n\n    return listYPosition;\n  });\n\n  constructor(props) {\n    super(props);\n    this.pickerListContainerRef = React.createRef();\n    this.pickerListRef = React.createRef();\n    this.pickerItemRef = React.createRef();\n    this.selectedOptionRef = React.createRef();\n\n    this.state = {\n      selectedOption: props.selected,\n      activeIndex: 0,\n      // eslint-disable-next-line react/no-unused-state\n      prevProps: {},\n    };\n  }\n\n  componentDidMount() {\n    this.computeSizes();\n    const pickerListContainerEl = this.pickerListContainerRef.current;\n    const pickerListEl = this.pickerListRef.current;\n\n    this.scrollHandler = new MoveElementOnScroll(pickerListEl, {\n      container: pickerListContainerEl,\n      min: -this.minYListPosition,\n      max: this.maxYListPosition,\n      onUpdate: (pos, delta) => {\n        const { options } = this.props;\n        const index =\n          options.length -\n          -Math.floor((pos - this.maxYListPosition) / this.optionHeight) +\n          (delta > 0 ? 1 : -1);\n        this.moveTo(index, true);\n      },\n      onEndScroll: () => {\n        this.setState({ scrolling: false });\n      },\n    });\n    this.computeContainerTranslation();\n  }\n\n  componentWillUnmount() {\n    this.scrollHandler.unsubscribe();\n  }\n\n  static getDerivedStateFromProps(nextProps, { prevProps }) {\n    const { selected, valueProperty, options } = nextProps;\n    if (selected !== prevProps.selected) {\n      return {\n        selectedOption: selected,\n        activeIndex: getOptionIndex(options, selected, valueProperty),\n        prevProps: nextProps,\n      };\n    }\n    return null;\n  }\n\n  getOptionValue(option) {\n    const { valueProperty } = this.props;\n    return option[valueProperty];\n  }\n\n  getOptionLabel(option) {\n    const { labelProperty } = this.props;\n    return option[labelProperty];\n  }\n\n  computeSizes() {\n    const { options, numberItemsOnScreen } = this.props;\n    const { offsetHeight: optionHeight } = this.pickerItemRef.current;\n\n    this.optionHeight = optionHeight;\n    this.listHeight = this.optionHeight * numberItemsOnScreen;\n\n    this.minYListPosition = this.listHeight / 2 - this.optionHeight / 2;\n    this.maxYListPosition =\n      this.optionHeight * (options.length - Math.ceil(numberItemsOnScreen / 2));\n  }\n\n  handleOptionSelect(optionValue, index, scrolling) {\n    const { onChange } = this.props;\n    this.setState(\n      (state) => ({\n        ...state,\n        scrolling,\n        selectedOption: optionValue,\n        activeIndex: index,\n      }),\n      () => {\n        onChange(optionValue, index);\n      },\n    );\n  }\n\n  // TODO: this needs a refactor from de FocusGroup\n  // eslint-disable-next-line max-statements\n  handleKeyDown(e) {\n    const { activeIndex } = this.state;\n    const { options } = this.props;\n    const [firstColumn, ...restColumns] = document.getElementsByClassName(\n      'em-ds-time-picker-panel',\n    );\n    const [lastColumn] = restColumns.slice(-1);\n    const [prev] = document.getElementsByClassName(\n      'DayPickerNavigation_button',\n    );\n    const focusedElement = document.activeElement;\n\n    switch (e.key) {\n      case 'Home':\n        this.moveTo(0);\n        break;\n      case 'End':\n        this.moveTo(options.length - 1);\n        break;\n      case 'ArrowUp':\n        this.moveTo(activeIndex - 1);\n        break;\n      case 'ArrowDown':\n        this.moveTo(activeIndex + 1);\n        break;\n      case 'Tab': {\n        e.preventDefault();\n        // If it is DateTimePicker, move focus to prev arrow element\n        if (prev && focusedElement === lastColumn) {\n          prev.focus();\n        } else if (focusedElement === lastColumn) {\n          firstColumn.focus();\n        } else {\n          const position = findIndex(restColumns, focusedElement);\n          restColumns[position + 1].focus();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  moveTo(index, scrolling) {\n    const { options } = this.props;\n    const { selectedOption } = this.state;\n    const validIndex = validateIndex(index, options);\n    const option = options[validIndex];\n    const optionValue = this.getOptionValue(option);\n    if (selectedOption !== optionValue && option.disabled !== true) {\n      this.handleOptionSelect(optionValue, validIndex, scrolling);\n    }\n    // TO-DO: if date disabled, add nextValidOption selection\n  }\n\n  handleStepMoveUp() {\n    const { activeIndex } = this.state;\n    const { arrowStep, options } = this.props;\n    const supposedPos = activeIndex - arrowStep;\n    const nextPos = supposedPos >= 0 ? supposedPos : activeIndex - 1;\n\n    const nextValidOption = options.find((op) => !op.disabled);\n    this.moveTo(nextPos, true, nextValidOption);\n  }\n\n  handleStepMoveDown() {\n    const { activeIndex } = this.state;\n    const { arrowStep, options } = this.props;\n    const supposedPos = activeIndex + arrowStep;\n    const nextPos =\n      supposedPos <= options.length ? supposedPos : activeIndex + 1;\n    this.moveTo(nextPos);\n  }\n\n  renderHeader = () => {\n    const { header } = this.props;\n\n    return <PickerHeader>{header}</PickerHeader>;\n  };\n\n  render() {\n    const {\n      options,\n      hasHeader,\n      type,\n      time,\n      meridiem,\n      disabledTimes,\n    } = this.props;\n    const { selectedOption, activeIndex, scrolling } = this.state;\n\n    const listYPosition = this.computeContainerTranslation(activeIndex);\n\n    return (\n      <Wrapper>\n        {hasHeader && this.renderHeader()}\n        <Container\n          classProps={{ scrolling }}\n          onKeyDown={this.handleKeyDown}\n          tabIndex={0}\n        >\n          <PickerSelectedOptionSelected innerRef={this.selectedOptionRef}>\n            <SelectedCircle />\n          </PickerSelectedOptionSelected>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Up\"\n              data-testid={`${type}-chevron-up`}\n              disabled={activeIndex <= 0}\n              icon={<ChevronSmallUp />}\n              onClick={this.handleStepMoveUp}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n          <PickerItemListContainer\n            innerRef={this.pickerListContainerRef}\n            style={{\n              height: this.listHeight,\n            }}\n          >\n            <PickerItemList\n              data-testid={`${type}-list`}\n              innerRef={this.pickerListRef}\n              style={{\n                transform: `translateY(${listYPosition}px)`,\n              }}\n            >\n              {options.map((option, index) => {\n                const value = this.getOptionValue(option);\n                const label = this.getOptionLabel(option);\n                let valueFormatted;\n                if (meridiem === 'AM') valueFormatted = value;\n                else if (meridiem === 'PM' && value === 12)\n                  valueFormatted = value;\n                else if (meridiem === 'PM') valueFormatted = value + 12;\n\n                let disabled = false;\n                if (disabledTimes) {\n                  const { from, to } = disabledTimes;\n                  if (\n                    (type === 'hour' &&\n                      valueFormatted >= from?.hour &&\n                      valueFormatted < to?.hour) ||\n                    (type === 'minutes' &&\n                      value >= from?.min &&\n                      value < to?.min)\n                  ) {\n                    disabled = true;\n                  }\n                  if (\n                    type === 'minutes' &&\n                    (time?.hour() > to?.hour || time?.hour() < from?.hour)\n                  ) {\n                    disabled = false;\n                  }\n                  if (label === 'am' && from?.hour == 0 && to?.hour >= 12) {\n                    disabled = true;\n                  }\n                  if (label === 'pm' && to?.hour == 24) {\n                    disabled = true;\n                  }\n                }\n\n                option.disabled = disabled;\n\n                return (\n                  <PickerItemContainer\n                    key={value}\n                    classProps={{\n                      selected: selectedOption\n                        ? value === selectedOption\n                        : index === 0,\n                      disabled,\n                    }}\n                    innerRef={this.pickerItemRef}\n                    onClick={() => {\n                      if (!disabled) this.handleOptionSelect(value, index);\n                    }}\n                  >\n                    {label}\n                  </PickerItemContainer>\n                );\n              })}\n            </PickerItemList>\n          </PickerItemListContainer>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Down\"\n              data-testid={`${type}-chevron-down`}\n              disabled={activeIndex >= options.length - 1}\n              icon={<ChevronSmallDown />}\n              onClick={this.handleStepMoveDown}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nPickerPanel.defaultProps = {\n  valueProperty: 'value',\n  labelProperty: 'label',\n  numberItemsOnScreen: 5, // this number should be impair\n  options: [],\n  arrowStep: 1,\n};\n","/* eslint-disable complexity */\n/* eslint-disable max-lines */\n/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { range } from '@elliemae/ds-utilities/utils';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { isAM } from './utils';\nimport PickerPanel from './PickerPanel';\n\nconst blockName = 'time-picker-menu';\n\nconst TimePickerContainer = aggregatedClasses('div')(blockName);\nconst TimePickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst TimePickerPanelContainer = aggregatedClasses('div')(\n  blockName,\n  'panel-container',\n);\n\nconst generateOption = (format) => (option) => ({\n  value: option,\n  label: typeof format === 'function' ? format(option) : option,\n});\n\nclass TimePickerMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: moment(props.time || '', props.format) || moment(),\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.time) {\n      return { ...state, time: moment(props.time) };\n    }\n    return { ...state, time: undefined };\n  }\n\n  componentDidMount() {\n    const { time } = this.state;\n    this.setState({ time });\n  }\n\n  handleMinuteChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.minute(value));\n  }\n\n  handleHoursChange(value) {\n    const { time } = this.state;\n    const { use12Hours } = this.props;\n    let nextHour = value;\n    if (use12Hours) {\n      if (!isAM(time)) {\n        nextHour = (value % 12) + 12;\n      }\n    }\n    this.updateTime(time.hour(nextHour));\n  }\n\n  handleSecondsChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.second(value));\n  }\n\n  handleAMPMChange(value) {\n    const { time } = this.state;\n    const hour = time.hour();\n    const nextHour =\n      value.toLowerCase() === 'am' ? hour % 12 : (hour % 12) + 12;\n    this.updateTime(time.hour(nextHour));\n  }\n\n  updateTime(time) {\n    const { onTimeChange } = this.props;\n    onTimeChange(time);\n    this.setState({ time });\n  }\n\n  renderHoursPanel() {\n    const { time } = this.state;\n    const {\n      showHours,\n      use12Hours,\n      format,\n      hasHeader,\n      disabledTimes,\n    } = this.props;\n    if (!showHours) return null;\n\n    const hour = time.hour(); // in 24 format\n    let selectedHour = use12Hours ? hour % 12 || 12 : hour;\n    if (disabledTimes) {\n      const { from, to } = disabledTimes;\n      if (hour > from.hour && hour < to.hour) {\n        if (to.hour < 24) {\n          const toFormatted = to.hour % 12 || 12;\n          if (selectedHour !== toFormatted) this.handleHoursChange(toFormatted);\n          selectedHour = toFormatted;\n        } else if (from) {\n          selectedHour = (from.hour - 1) % 12 || 12;\n        }\n      }\n    }\n\n    const meridiem = hour >= 12 ? 'PM' : 'AM';\n    const withLeadingZeros = format.indexOf('hh') > -1;\n    const rangeHours = use12Hours ? range(1, 13) : range(24);\n    const hoursOptions = rangeHours.map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        type=\"hour\"\n        time={time}\n        meridiem={meridiem}\n        hasHeader={hasHeader}\n        header=\"H\"\n        onChange={this.handleHoursChange}\n        options={hoursOptions}\n        selected={selectedHour}\n        disabledTimes={disabledTimes}\n      />\n    );\n  }\n\n  renderMinutesPanel() {\n    const { time } = this.state;\n    const {\n      showMinutes,\n      format,\n      hasHeader,\n      disabledTimes,\n      minutesInterval,\n    } = this.props;\n    if (!showMinutes) return null;\n    const withLeadingZeros = format.indexOf('mm') > -1;\n    const rangeMinutes = range(0, 60, minutesInterval).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n\n    let selectedMinute = time.minute();\n    const selectedHour = time.hour();\n\n    if (disabledTimes) {\n      const { from, to } = disabledTimes;\n      if (selectedHour <= to.hour && selectedHour > from.hour) {\n        if (to) {\n          if (selectedMinute < to.min) this.handleMinuteChange(to.min);\n        } else if (from) {\n          if (selectedMinute > from.min) this.handleMinuteChange(from.min - 1);\n        }\n      } else {\n        selectedMinute = time.minute();\n      }\n    }\n\n    return (\n      <PickerPanel\n        type=\"minutes\"\n        time={time}\n        hasHeader={hasHeader}\n        header=\"M\"\n        onChange={this.handleMinuteChange}\n        options={rangeMinutes}\n        selected={selectedMinute}\n        disabledTimes={disabledTimes}\n      />\n    );\n  }\n\n  renderSecondsPanel() {\n    const { time } = this.state;\n    const { showSeconds, format, hasHeader } = this.props;\n    if (!showSeconds) return null;\n    const withLeadingZeros = format.indexOf('ss') > -1;\n    const rangeSeconds = range(60).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        type=\"seconds\"\n        hasHeader={hasHeader}\n        header=\"S\"\n        onChange={this.handleSecondsChange}\n        options={rangeSeconds}\n        selected={time.second()}\n      />\n    );\n  }\n\n  renderAMPMPanel() {\n    const { time } = this.state;\n    const { use12Hours, hasHeader, disabledTimes } = this.props;\n    if (!use12Hours) return null;\n\n    let meridiemSelected = !isAM(time) ? 'pm' : 'am';\n    if (disabledTimes && disabledTimes.to && meridiemSelected === 'am') {\n      meridiemSelected = disabledTimes.to.hour >= 12 ? 'pm' : 'am';\n      if (meridiemSelected === 'am' && time.hour() > 12) {\n        this.handleAMPMChange('am');\n      }\n\n      if (meridiemSelected === 'pm' && time.hour() <= 12) {\n        this.handleAMPMChange('pm');\n      }\n    }\n\n    return (\n      <PickerPanel\n        type=\"meridiem\"\n        hasHeader={hasHeader}\n        header=\"\"\n        onChange={this.handleAMPMChange}\n        options={[\n          { value: 'am', label: 'am' },\n          { value: 'pm', label: 'pm' },\n        ]}\n        selected={meridiemSelected}\n        disabledTimes={disabledTimes}\n      />\n    );\n  }\n\n  renderHeader = () => {\n    const { time } = this.state;\n    return <TimePickerHeader>{time.format('hh:mma')}</TimePickerHeader>;\n  };\n\n  render() {\n    const { hasHeaderDisplay } = this.props;\n\n    return (\n      <TimePickerContainer>\n        {hasHeaderDisplay && this.renderHeader()}\n        <TimePickerPanelContainer>\n          {this.renderHoursPanel()}\n          {this.renderMinutesPanel()}\n          {this.renderSecondsPanel()}\n          {this.renderAMPMPanel()}\n        </TimePickerPanelContainer>\n      </TimePickerContainer>\n    );\n  }\n}\n\nTimePickerMenu.defaultProps = {\n  time: moment(),\n  hasHeader: false,\n  use12Hours: true,\n  showSeconds: true,\n  showMinutes: true,\n  showHours: true,\n  disabledTimes: undefined,\n  onTimeChange: () => null,\n};\n\nTimePickerMenu.propTypes = {\n  /** Time value */\n  time: PropTypes.instanceOf(moment),\n  /** If the menu has header or not */\n  hasHeader: PropTypes.bool,\n  /** Whether to use the 12 hours format */\n  use12Hours: PropTypes.bool,\n  /** Whether show 'seconds' or not */\n  showSeconds: PropTypes.bool,\n  /** Whether show 'minutes' or not */\n  showMinutes: PropTypes.bool,\n  /** Whether show 'hours' or not */\n  showHours: PropTypes.bool,\n  /** Handler when time changes */\n  onTimeChange: PropTypes.func,\n  disabledTimes: PropTypes.object,\n};\n\nexport { TimePickerMenu };\nexport default TimePickerMenu;\n","/* eslint-disable indent */\n/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/* eslint-disable no-empty-pattern */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable max-lines */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport moment from 'moment';\nimport { noop } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport {\n  DSDatePickerController,\n  DatePickerDropdown,\n} from '@elliemae/ds-date-picker';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSInputGroup from '@elliemae/ds-basic/form/InputGroup';\nimport DSInput from '@elliemae/ds-basic/form/Input';\nimport { DateInputsV2Impl } from '@elliemae/ds-basic/form/DateInputV2';\nimport { TimeInputImpl } from '@elliemae/ds-basic/form/TimeInput';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport { Menu, convertTimeString } from '@elliemae/ds-basic/TimePicker';\nimport { updateDateAndTime } from '../utils';\n\nconst blockName = 'date-time-picker';\n\nconst DateTimePickerWrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst TimePicker = aggregatedClasses(Menu)(blockName, 'time-picker');\nconst TimePickerWrapper = aggregatedClasses('div')(\n  blockName,\n  'time-picker-wrapper',\n);\n// const DateInput = aggregatedClasses(DateInputsV2Impl)(blockName, 'date-input');\nconst formatDate = 'MMDDYYYY';\n\nconst DSDateTimePickerImpl = ({\n  onBlur = () => null,\n  placeholder,\n  date,\n  clearable,\n  datePickerProps: {\n    disabled = false,\n    numberOfMonths = 1,\n    readOnly = false,\n    enableOutsideDays = false,\n    transitionDuration = 0,\n    firstDayOfWeek = 0,\n    keepOpenOnDateSelect = true,\n    hideKeyboardShortcutsPanel = true,\n    onPrevMonthClick = () => null,\n    onNextMonthClick = () => null,\n    onClose = () => null,\n    onDateChange = () => null,\n    onError: onErrorDate = () => null,\n    phrases = SingleDatePickerPhrases,\n    displayFormatDay = 'D',\n    isDayBlocked = () => false,\n    isOutsideRange = () => false,\n    isDayHighlighted = () => false,\n    zIndex = 11,\n  },\n  timePickerProps: {\n    format = 'hh:mm A',\n    onChange: onChangeTimePicker = () => null,\n    disabledTimes = undefined,\n    onError: onErrorTime = () => null,\n    minutesInterval = 1,\n  },\n  dateInputProps: { onDateInputDateChange = () => null },\n}) => {\n  const [selectedDate, setSelectedDate] = useState(undefined);\n  const [incompleteInput, setIncompleteInput] = useState(undefined);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const disabledTimeRange = disabledTimes && {\n    from: convertTimeString(disabledTimes.from),\n    to: convertTimeString(disabledTimes.to),\n  };\n\n  const dateTimePickerWrapperRef = useRef();\n  const fullFormat = `${formatDate} ${format}`;\n\n  useEffect(() => {\n    if (date) {\n      setSelectedDate(moment(date));\n    } else if (date === null) setSelectedDate(undefined);\n  }, [date]);\n\n  const visiblePanels = useMemo(() => getVisibleTimeByFormat(format), []);\n\n  const currentYear = moment().year();\n\n  const handleDatePickerChange = (dateSelected) => {\n    const splittedDate = updateDateAndTime(dateSelected, selectedDate);\n    if (!readOnly) {\n      setSelectedDate(splittedDate);\n      onDateChange(splittedDate);\n    }\n  };\n\n  const onTimeChange = (pickerTime) => {\n    const splittedDate = updateDateAndTime(selectedDate, pickerTime);\n    onChangeTimePicker(splittedDate);\n    setSelectedDate(splittedDate);\n  };\n\n  const handleInputChange = (inputValue, type) => {\n    let timeBlocked = false;\n    const inputMoment = moment(inputValue, fullFormat);\n    setIncompleteInput(inputValue);\n    if (type === 'date') {\n      const splittedDate = updateDateAndTime(inputMoment, selectedDate);\n      if (inputValue.length < 8) {\n        onErrorDate({ message: 'date incomplete', inputValue });\n        if (clearable) onDateChange('error');\n        return;\n      }\n      if (inputValue.length === 8 && inputMoment.isValid()) {\n        setSelectedDate(splittedDate);\n        onChangeTimePicker(splittedDate);\n      }\n      onDateChange(splittedDate);\n      return;\n    }\n\n    if (disabledTimeRange) {\n      const hour = inputValue.hour();\n      const min = inputValue.minutes();\n      const { from, to } = disabledTimeRange;\n\n      if (\n        (hour > from.hour && hour < to.hour) ||\n        (hour === to.hour && min < to.min)\n      ) {\n        timeBlocked = true;\n      }\n    }\n    if (timeBlocked) onErrorTime({ message: 'time blocked', inputValue });\n    const dateBlocked = isDayBlocked(inputMoment);\n    if (dateBlocked) onErrorDate({ message: 'date blocked', inputValue });\n    if (!timeBlocked && !dateBlocked) {\n      onDateChange(inputValue);\n    }\n  };\n\n  const handleOutsideClick = (event) => {\n    if (!dateTimePickerWrapperRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  const handleClickEscape = () => setIsOpen(false);\n  const handleOpen = () => setIsOpen(true);\n\n  const handleContainerBlur = (event) => {\n    if (!isOpen && !event.currentTarget.contains(event.relatedTarget)) {\n      onBlur(\n        event,\n        selectedDate?.isValid()\n          ? selectedDate\n          : {\n              error: true,\n              message: 'incomplete input',\n              input: incompleteInput,\n            },\n      );\n      if (clearable && !selectedDate && !!incompleteInput) {\n        const inputMoment = moment(incompleteInput, fullFormat);\n        const splittedDate = updateDateAndTime(inputMoment, selectedDate);\n\n        setSelectedDate(splittedDate);\n        onDateChange(splittedDate);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!isOpen)\n      onBlur(\n        {},\n        selectedDate?.isValid()\n          ? selectedDate\n          : {\n              error: true,\n              message: 'incomplete input',\n              input: incompleteInput,\n            },\n      );\n  }, [isOpen]);\n\n  const hasSelectedDate = !!selectedDate;\n  return (\n    <DSInputGroup\n      containerProps={{\n        onBlur: handleContainerBlur,\n      }}\n      rightAddon={\n        <DatePickerDropdown\n          disabled={disabled}\n          isOpen={isOpen}\n          zIndex={zIndex}\n          menu={\n            <DateTimePickerWrapper\n              ref={dateTimePickerWrapperRef}\n              data-testid=\"date-time-picker\"\n            >\n              <div\n                className={\n                  hasSelectedDate\n                    ? 'has-selected-date'\n                    : 'without-selected-date'\n                }\n                data-testid=\"date-time-picker-portal-wrapper\"\n              >\n                <DSDatePickerController\n                  date={selectedDate}\n                  displayFormatDay={displayFormatDay}\n                  enableOutsideDays={enableOutsideDays}\n                  firstDayOfWeek={firstDayOfWeek}\n                  hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n                  isDayBlocked={isDayBlocked}\n                  isDayHighlighted={isDayHighlighted}\n                  isOutsideRange={isOutsideRange}\n                  keepOpenOnDateSelect={keepOpenOnDateSelect}\n                  numberOfMonths={numberOfMonths}\n                  onClickEscape={handleClickEscape}\n                  onClose={onClose}\n                  onDateChange={handleDatePickerChange}\n                  onFocusChange={noop}\n                  onNextMonthClick={onNextMonthClick}\n                  onOutsideClick={(event) => handleOutsideClick(event)}\n                  onPrevMonthClick={onPrevMonthClick}\n                  phrases={phrases}\n                  transitionDuration={transitionDuration}\n                />\n              </div>\n              <TimePickerWrapper>\n                <TimePicker\n                  disabled={disabled}\n                  disabledTimes={disabledTimeRange}\n                  format={format}\n                  hasHeader\n                  hasHeaderDisplay\n                  onTimeChange={onTimeChange}\n                  showSeconds={false}\n                  minutesInterval={minutesInterval}\n                  time={selectedDate}\n                  {...visiblePanels}\n                />\n              </TimePickerWrapper>\n            </DateTimePickerWrapper>\n          }\n          onClick={handleOpen}\n          readOnly={readOnly}\n        />\n      }\n    >\n      <DSInput\n        customInputType={({ onChange: handleChange, ...restInputProps }) => (\n          <>\n            <div style={{ display: 'flex' }}>\n              <DateInputsV2Impl\n                disabled={disabled}\n                onChange={(input) => handleChange(input, 'date')}\n                {...restInputProps}\n                onDateChange={onDateInputDateChange}\n                yearMaxRange={currentYear + 100}\n                yearMinRange={currentYear - 100}\n                time={\n                  restInputProps.value &&\n                  restInputProps.value.hour &&\n                  restInputProps.value.isValid()\n                    ? restInputProps.value.format(formatDate)\n                    : restInputProps.value\n                }\n              />\n            </div>\n            <TimeInputImpl\n              disabled={disabled}\n              format={format}\n              onChange={(time) => handleChange(time, 'time')}\n              {...restInputProps}\n            />\n          </>\n        )}\n        isShowElipsisActive={false}\n        disabled={disabled}\n        onChange={handleInputChange}\n        placeholder={placeholder}\n        value={selectedDate}\n      />\n    </DSInputGroup>\n  );\n};\n\nexport default DSDateTimePickerImpl;\n","export default {\n  placeholder: 'Select date and time',\n  className: '',\n  id: '',\n};\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport moment from 'moment';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSDateTimePickerImpl from './components/DateTimePickerImpl';\nimport english from './lang/english';\n\nconst {\n  placeholder: placeholderDefault,\n  className: classNameDefault,\n  id: idDefault,\n} = english;\n\nconst DSDateTimePicker = ({\n  containerProps = {},\n  className = classNameDefault,\n  id = idDefault,\n  placeholder = placeholderDefault,\n  date,\n  clearable = false,\n  onBlur = () => null,\n  datePickerProps = {\n    disabled: false,\n    numberOfMonths: 1,\n    readOnly: false,\n    enableOutsideDays: false,\n    transitionDuration: 0,\n    firstDayOfWeek: 0,\n    keepOpenOnDateSelect: true,\n    hideKeyboardShortcutsPanel: true,\n    onPrevMonthClick: () => null,\n    onNextMonthClick: () => null,\n    onClose: () => null,\n    onDateChange: () => null,\n    phrases: SingleDatePickerPhrases,\n    displayFormatDay: 'D',\n    isDayBlocked: () => false,\n    isOutsideRange: () => false,\n    isDayHighlighted: () => false,\n    zIndex: 11,\n  },\n  timePickerProps = {\n    format: 'hh:mm A',\n    onChange: () => null,\n    disabledTimes: undefined,\n    minutesInterval: 1,\n  },\n  dateInputProps = {\n    onDateInputDateChange: () => null,\n  },\n}) => {\n  const { cssClassName } = convertPropToCssClassName(\n    'datetimepicker',\n    className,\n    {\n      id,\n    },\n  );\n  return (\n    <div className={cssClassName} {...containerProps}>\n      <DSDateTimePickerImpl\n        clearable={clearable}\n        date={date}\n        datePickerProps={datePickerProps}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        timePickerProps={timePickerProps}\n        dateInputProps={dateInputProps}\n      />\n    </div>\n  );\n};\n\nconst dateTimePickerProps = {\n  containerProps: PropTypes.object.description(\n    'Set of Properties attached to the main container',\n  ),\n  className: PropTypes.string.description('html class attribute'),\n  id: PropTypes.string.description('components id'),\n  /**\n   * on blur callback\n   */\n  onBlur: PropTypes.func.description('on blur callback'),\n  /**\n   * Initial date, by default current date\n   */\n  date: PropTypes.instanceOf(Date, moment).description(\n    'Initial date, by default current date',\n  ),\n  /**\n   * Flag to trigger onDateChange on error\n   */\n  clearable: PropTypes.bool.description(\n    'Flag to trigger onDateChange on error',\n  ),\n  /**\n   * DatePicker properties\n   */\n  datePickerProps: PropTypes.shape({\n    disabled: PropTypes.bool,\n    numberOfMonths: PropTypes.number,\n    readOnly: PropTypes.bool,\n    enableOutsideDays: PropTypes.bool,\n    transitionDuration: PropTypes.number,\n    firstDayOfWeek: PropTypes.number,\n    keepOpenOnDateSelect: PropTypes.bool,\n    hideKeyboardShortcutsPanel: PropTypes.bool,\n    onPrevMonthClick: PropTypes.func,\n    onNextMonthClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onDateChange: PropTypes.func,\n    phrases: PropTypes.shape({\n      calendarLabel: PropTypes.string,\n      closeDatePicker: PropTypes.string,\n      clearDates: PropTypes.string,\n      focusStartDate: PropTypes.string,\n      jumpToPrevMonth: PropTypes.string,\n      jumpToNextMonth: PropTypes.string,\n      keyboardShortcuts: PropTypes.string,\n      showKeyboardShortcutsPanel: PropTypes.string,\n      hideKeyboardShortcutsPanel: PropTypes.string,\n      openThisPanel: PropTypes.string,\n      enterKey: PropTypes.string,\n      leftArrowRightArrow: PropTypes.string,\n      upArrowDownArrow: PropTypes.string,\n      pageUpPageDown: PropTypes.string,\n      homeEnd: PropTypes.string,\n      escape: PropTypes.string,\n      questionMark: PropTypes.string,\n      selectFocusedDate: PropTypes.string,\n      moveFocusByOneDay: PropTypes.string,\n      moveFocusByOneWeek: PropTypes.string,\n      moveFocusByOneMonth: PropTypes.string,\n      moveFocustoStartAndEndOfWeek: PropTypes.string,\n      returnFocusToInput: PropTypes.string,\n      keyboardNavigationInstructions: PropTypes.string,\n      chooseAvailableStartDate: PropTypes.func,\n      chooseAvailableEndDate: PropTypes.func,\n      dateIsUnavailable: PropTypes.func,\n      dateIsSelected: PropTypes.func,\n      /**\n       * ZIndex for the picker popup\n       */\n      zIndex: PropTypes.number,\n    }),\n    displayFormatDay: PropTypes.string,\n    isDayBlocked: PropTypes.func,\n    isOutsideRange: PropTypes.func,\n    isDayHighlighted: PropTypes.func,\n  }).description('DatePicker properties'),\n  /**\n   * Input placeholder\n   */\n  placeholder: PropTypes.string.description('Input placeholder'),\n  /**\n   * TimePicker properties\n   */\n  timePickerProps: PropTypes.shape({\n    format: PropTypes.string,\n    onChange: PropTypes.func,\n  }).description('TimePicker properties'),\n  dateInputProps: PropTypes.shape({\n    onDateInputDateChange: PropTypes.func,\n  }).description('DateInputProperties'),\n};\n\nDSDateTimePicker.propTypes = dateTimePickerProps;\nconst DateTimePickerWithSchema = describe(DSDateTimePicker);\nDateTimePickerWithSchema.propTypes = dateTimePickerProps;\n\nexport { DateTimePickerWithSchema };\nexport default DSDateTimePicker;\n"],"sourceRoot":""}