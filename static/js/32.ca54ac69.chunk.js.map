{"version":3,"sources":["../../../../src/hooks/useExecutionTimer.tsx","../../../src/usePopoverProviderState.tsx","DateTimePicker/PUI-5575.js","../../../../src/TextBox/DSTextBox.tsx","../../../src/timeUtils.tsx","../../../../../src/DateInputV2/components/utils.tsx","../../../src/ChevronSmallDown.tsx","../../../../../src/DateInputV2/components/helpers.tsx","../../../../../src/DateInputV2/components/styled.tsx","../../../../../src/DateInputV2/components/propsTypes.tsx","../../../src/DatePicker.tsx","../../../../../src/components/DatePickerPicker/DatePickerPicker.tsx","../../../../src/RequiredMark/RequiredMark.tsx","../../../src/TooltipTextProvider.tsx","../../../../../src/DateInputV2/components/DateInputs.tsx","../../../../../src/components/DatePickerController/DatePickerController.tsx","../../src/ResizeObserver.ts","../../../../src/components/DatePickerDropdown.tsx","../../src/ContentRect.ts","../../../src/DSTruncatedTooltipText.tsx","../../src/ResizeObservation.ts","../../src/ResizeObserverEntry.ts","../../../../../shared-configs/constants.js","../../../src/TimeInput/utils.tsx","../../../../src/TimeInput/TimeInputs.tsx","../../../../src/TimeInput/TimeInputImpl.tsx","../../../src/utils.tsx","../../../src/ChevronSmallUp.tsx","../../../src/moveElementOnScroll.tsx","../../../src/PickerPanel.tsx","../../../src/TimePickerMenu.tsx","../../../../src/components/DateTimePickerImpl.tsx","../../../../src/lang/english.tsx","../../../src/DSDateTimePicker.tsx","../../../../src/GroupContext/Group.tsx","../../../../src/GroupContext/GroupContext.tsx","../../../src/props.tsx","../../../src/DSTextWrapper.tsx","../../../src/defaultProps.tsx","../../../../src/FloatingLabelInput/getSvgPath.tsx","../../../../src/FloatingLabelInput/FloatingLabelInputImpl.tsx","../../../../../src/FormItem/Label/DSLabel.tsx","../../../../src/FloatingLabelInput/DSFloatingLabelInput.tsx","../../../../src/FormItem/variants.tsx","../../../../src/FormItem/props.tsx","../../../../src/FormItem/Feedback.tsx","../../../../src/FormItem/defaultProps.tsx","../../../../../src/FormItem/Suffix/Suffix.tsx","../../../../src/FormItem/DSFormItemLayout.tsx"],"names":["startFn","cleanFn","delayTime","startTimer","useRef","closeTimer","args","clearTimeout","setTimeout","initialState","reference","visible","value","options","delay","triggerRef","useState","tooltipState","setTooltipState","useExecutionTimer","state","showTooltip","hideTooltip","handleHideTooltip","useEffect","window","throttle","show","e","target","hide","memo","setValue","label","toggle","setToggle","changeListener","event","date","_isValid","clone","newValue","format","style","width","onClick","preventDefault","extraInputProps","datePickerProps","containerProps","id","hideKeyboardShortcutsPanel","transitionDuration","verticalSpacing","screenReaderInputMessage","onDateChange","timePickerProps","disabled","onChange","keepOpenOnDateSelect","placeholder","readOnly","inputComponent","DSDateTimePicker","labelText","onBlur","console","log","item","DSTextBox","autoFocus","maxLength","minLength","fluidWidth","hasError","innerRef","type","min","max","clearable","leftComponent","rightComponent","required","variant","disableTooltip","otherProps","aria-label","role","props","PropTypes","describe","DSTextBoxWithSchema","getVisibleTimeByFormat","showHours","showMinutes","showSeconds","use12Hours","addLeadingZeros","count","number","padStart","String","formatTimeNumber","Date","shouldAddLeadingZeros","leadingZeros","getFormattedDay","v","parseInt","parseTimeNumberFromText","getShouldShortcircuitDay","parsedValue","getFormattedYear","getFormattedMonth","getShouldShortcircuitMonth","stringValue","parsedInt","isNaN","triggerOnBlur","blurEvent","currentEl","relatedTarget","nextElement","nextElementSibling","focusNextInput","elem","selector","sibling","getNextSibling","focusPreviousInput","getPreviousSibling","onInputFocus","commonInputProps","digits","onKeyDown","pattern","onFocus","createIcon","paths","height","callChange","handlers","isArrowChange","setTarget","n","cloneDeep","onKeyDownHelper","DateInputFluidContainer","styled","DateInputWrapper","theme","DateInputInput","DateInputDivider","DateInputsPropTypes","current","any","onCustomKeyDown","onError","showMonth","showDay","showYear","step","yearMaxRange","yearMinRange","time","tabIndex","Picker","className","icon","size","DSIconSizes","buttonActionType","rest","buttonType","color","DSIconColors","data-testid","PickerPropsTypes","cssClassName","convertPropToCssClassName","optional","TruncatedTooltipContext","React","Provider","TooltipTextProvider","children","tooltipDelay","placement","tooltipOptions","usePopoverProviderState","zIndex","setZIndex","useMemo","boundaries","showArrow","content","referenceEl","pointerEvents","DateInputs","month","setMonth","day","setDay","year","setYear","onChangeDateTrigger","setOnChangeDateTrigger","dayRef","haveInputsOnChangeTriggered","setHaveInputsOnChangeTriggered","handleFluidClick","triggerOnDateChange","momentValue","moment","onMonthChange","shouldAdvance","onDayChange","onYearChange","values","renderMonthInput","autoComplete","key","name","ref","renderDayInput","renderYearInput","cols","input","acc","index","classNameElement","classNameBlock","DSDatePickerController","document","focusedElement","firstDay","restOfDays","lastDay","onClickEscape","defaultValue","selectedDate","Boolean","momentvalue","dataInput","prev","next","onPrevMonthClick","onNextMonthClick","nav","this","calendarDaySelected","numberOfMonths","enableOutsideDays","initialVisibleMonth","firstDayOfWeek","onClose","phrases","displayFormatDay","isDayBlocked","isOutsideRange","isDayHighlighted","onOutsideClick","calendarProps","safedate","safeinitialMonth","insideBlur","focused","navNext","navPrev","firstFocusableItem","renderMonthElement","onFocusChange","renderDayContents","onTab","Component","calendarLabel","closeDatePicker","clearDates","focusStartDate","jumpToPrevMonth","jumpToNextMonth","keyboardShortcuts","showKeyboardShortcutsPanel","openThisPanel","enterKey","leftArrowRightArrow","upArrowDownArrow","pageUpPageDown","homeEnd","escape","questionMark","selectFocusedDate","moveFocusByOneDay","moveFocusByOneWeek","moveFocusByOneMonth","moveFocustoStartAndEndOfWeek","returnFocusToInput","keyboardNavigationInstructions","chooseAvailableStartDate","chooseAvailableEndDate","dateIsUnavailable","dateIsSelected","func","ro","noop","DatePickerDropdown","isOpen","menu","pickerProps","pickerRef","contentComponent","modifiers","preventOverflow","enabled","padding","boundariesElement","triggerComponent","Text","DSTruncatedTooltipText","otherTextProps","tooltipContext","useContext","onMouseEnter","onMouseLeave","truncatedTooltipTextProps","tooltipPlacement","positions","undefined","TruncatedTooltipTextWithSchema","AM","HOUR_RANGE_12","HOUR_RANGE_24","GENERAL_TIME_RANGE","PLACEHOLDER_TIME","setNativeValue","element","Object","valueSetter","prototype","prototypeValueSetter","Event","bubbles","placeholderFormat","position","_placeholderHour","formatMinutes","formatSeconds","formatHour","formatMeridiem","getValidTimeNumber","InputTimesGroup","aggregatedClasses","TimeInput","Divider","TimeDivider","ariaLabel","ariaLabel2","meridiem","setMeridiem","hours","setHours","minutes","setMinutes","hasInputValue","setHasInputValue","seconds","setSeconds","currentKey","setCurrentKey","hasInputBeenTriggered","setHasInputBeenTriggered","lastTypedNumber","setLastTypedNumber","timeValues","isAM","getTimeValuesFromTime","selectedTime","isTimeCompletelySet","nextHours","focusNextInputIfNeeded","safeString","cleanString","shouldFocusNextInput","getNextTimeValue","incrementing","incrementedValue","decrementedValue","previousElement","neededValues","handleSecondsChange","secondsHandled","nextSeconds","handleMinutesChange","minutesHandled","nextMinutes","handleHoursChange","hour","hoursRange","nextHour","handleMeridiemKeyDown","handleMeridiemBlur","renderHoursInput","hourFormatRange","InputTimeContainer","TimeInputImpl","getVisibleTimeInputs","memoizeOne","inputsContainer","visibleInputs","bool","validateIndex","convertTimeString","string","arr","sec","MoveElementOnScroll","container","offsetHeight","speed","smooth","onUpdate","onEndScroll","moving","pos","lastPos","requestFrame","delta","Math","update","unsubscribe","updatePosition","newPos","Container","scrolling","Wrapper","PickerItemListContainer","PickerItemList","PickerHeader","PickerItemContainer","selected","PickerSelectedOptionSelected","SelectedCircle","ArrowButtonContainer","getOptionIndex","selectedOption","valueProperty","option","arrowProps","fluidHeight","PickerPanel","selectedOptionIndex","listYPosition","header","activeIndex","prevProps","pickerListContainerEl","pickerListContainerRef","pickerListEl","pickerListRef","numberItemsOnScreen","optionHeight","pickerItemRef","listHeight","optionValue","firstColumn","restColumns","lastColumn","findIndex","validIndex","getOptionValue","supposedPos","nextPos","nextValidOption","op","hasHeader","disabledTimes","computeContainerTranslation","classProps","selectedOptionRef","transform","valueFormatted","from","to","nextProps","labelProperty","arrowStep","TimePickerContainer","TimePickerHeader","TimePickerPanelContainer","generateOption","TimePickerMenu","onTimeChange","selectedHour","toFormatted","withLeadingZeros","hoursOptions","range","rangeHours","minutesInterval","rangeMinutes","selectedMinute","handleMinuteChange","rangeSeconds","meridiemSelected","hasHeaderDisplay","object","updateDateAndTime","splittedDate","DateTimePickerWrapper","TimePicker","TimePickerWrapper","onErrorDate","SingleDatePickerPhrases","onChangeTimePicker","onErrorTime","dateInputProps","onDateInputDateChange","setSelectedDate","incompleteInput","setIncompleteInput","setIsOpen","disabledTimeRange","dateTimePickerWrapperRef","fullFormat","visiblePanels","currentYear","error","message","hasSelectedDate","inputMoment","rightAddon","dateSelected","handleOutsideClick","pickerTime","customInputType","handleChange","restInputProps","display","isShowElipsisActive","inputValue","timeBlocked","dateBlocked","placeholderDefault","english","classNameDefault","idDefault","dateTimePickerProps","DateTimePickerWithSchema","getValueItem","currentTarget","toggleItemValue","array","newvalue","res","Group","activeValue","prevValue","multiple","textProps","text","maxCharacters","maxWidth","textEllipsis","textAlignment","wordBreak","DSTextWrapper","displayText","resultIndex","result","word","TextWrapperWithSchema","labelWidth","radiusStyle","hasRightRadius","hasLeftRadius","notchWidth","radius","parseFloat","cornerWidth","paddedNotchWidth","extraSizeForH","extraSizeForLeftV","extraSizeForRightV","extraSizeForTopH","blockName","FloatingLabel","OutlineIdle","Outline","OutlinePath","FloatingLabelInputImpl","ResizeObserver","wrapperRef","prevSizes","shouldUpdateSvgPath","labelEl","wrapperEl","outlineIdleEl","elStyles","leftRadius","rightRadius","Array","valueAccessor","path","getSvgPath","mask","useSubfix","inputProps","InputComponent","getComponentFromProps","onMouseOut","onMouseOver","handleMouseOver","labelRef","outlinePathRef","outlineIdleRef","DSLabel","htmlFor","truncateText","isGroup","Tag","arialLabel","labelComponent","FORMITEM_LAYOUT_VARIANTS","leftLabel","floatingLabel","feedbackComponent","validationState","validationMessage","feedbackMessage","extraContent","leftAddon","onPaste","onKeyUp","suffix","FeedbackSpan","defaultProps","Suffix","SuffixInputWrapper","SuffixWrapper","WrapperContent","WrapperContentGroup","DSFormItemLayout","LabelComponent","FeedbackComponent","floatingLabelOverride","WrapperContentComp","renderInput","Input","renderFloating","InputWithLabel","withFeedback","DSFormItemLayoutWithSchema"],"mappings":"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","file":"static/js/32.ca54ac69.chunk.js","sourcesContent":["import { useRef } from 'react';\n\nexport default function useExecutionDelay(startFn, cleanFn, delayTime) {\n  const startTimer = useRef();\n  const closeTimer = useRef();\n\n  const startFunction = (...args) => {\n    clearTimeout(closeTimer.current);\n    startTimer.current = setTimeout(() => startFn(...args), delayTime);\n  };\n\n  const cleanFunction = (...args) => {\n    clearTimeout(startTimer.current);\n    closeTimer.current = setTimeout(() => cleanFn(...args), 30);\n  };\n  return [startFunction, cleanFunction];\n}\n","import { useState, useEffect, useRef } from 'react';\nimport { throttle } from 'lodash';\nimport { useExecutionTimer } from '@elliemae/ds-utilities/hooks';\n\nfunction usePopoverProviderState({\n  initialState = {\n    reference: null,\n    visible: false,\n    value: '',\n    options: {},\n  },\n  delay,\n}) {\n  const triggerRef = useRef();\n  const [tooltipState, setTooltipState] = useState(initialState);\n\n  const show = (state) => {\n    setTooltipState((prevState) => ({\n      ...prevState,\n      ...state,\n      visible: true,\n    }));\n  };\n  const hide = (state) => {\n    setTooltipState((prevState) => ({\n      ...prevState,\n      ...state,\n      visible: false,\n    }));\n  };\n\n  const [showTooltip, hideTooltip] = useExecutionTimer(show, hide, delay);\n\n  const handleShowTooltip = (state, e) => {\n    triggerRef.current = e.target;\n    showTooltip({ ...state, reference: e.target });\n  };\n\n  const handleHideTooltip = (state) => {\n    hideTooltip(state);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', throttle(handleHideTooltip, 300), true);\n    window.addEventListener('click', handleHideTooltip, true);\n    return () => {\n      window.removeEventListener(\n        'scroll',\n        throttle(handleHideTooltip, 300),\n        true,\n      );\n      window.addEventListener('click', handleHideTooltip, true);\n    };\n  }, [tooltipState.reference]);\n\n  return {\n    show: handleShowTooltip,\n    hide: handleHideTooltip,\n    state: tooltipState,\n  };\n}\n\nexport default usePopoverProviderState;\n","import React, {useState, memo} from 'react';\nimport DSFormItemLayout from '@elliemae/ds-basic/form/FormItem';\nimport moment from 'moment';\nimport DSDateTimePicker from '@elliemae/ds-date-time-picker';\n\nconst Component = () => {\n  const [value, setValue] = useState();\n  const [toggle, setToggle] = useState({\n    label: 'HIDE',\n    show: true\n});\n\n  const changeListener = (event) => {\n    const date = event?._isValid ? event.clone() : null;\n    const newValue = date ? date.format('YYYY-MM-DD') : null;\n    if (date !== null) {\n      setValue(newValue);\n    }\n  }\n\n  function toggleValue(e) {\n    e.preventDefault();\n    const show = !toggle.show;\n    const label = toggle.show ? 'SHOW' : 'HIDE';\n    setToggle({\n      label: label,\n      show: show\n    });\n  }\n\n  return (\n    <div style={{width: '200px'}}>\n      <button onClick={toggleValue}>{toggle.label}</button>\n      { toggle.show ?\n        <DSFormItemLayout\n          extraInputProps={{\n            datePickerProps: {\n              containerProps: { id: 'my-custom-id' },\n              hideKeyboardShortcutsPanel: true,\n              transitionDuration: 0,\n              verticalSpacing: 0,\n              screenReaderInputMessage: 'Select date',\n              onDateChange: changeListener,\n            },\n            timePickerProps: {\n              containerProps: { id: 'my-custom-id' },\n              disabled: false,\n              onChange: changeListener,\n            },\n            date: value,\n          }}\n          keepOpenOnDateSelect={false}\n          placeholder={'MM/DD/YYYY'}\n          readOnly={false}\n          inputComponent={DSDateTimePicker}\n          labelText=\"Input search\"\n          onBlur={(event) => {\n            console.log('Event Log: ', event);\n          }}\n          onChange={(item) => {\n            console.log(item);\n          }}\n          value={value}\n        />\n        : null\n      }\n    </div>\n  );\n}\n\nexport default  memo(Component);\n","import React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport DSInput from '../Input';\n\nconst DSTextBox = ({\n  containerProps = {},\n  autoFocus = false,\n  disabled = false,\n  maxLength = 255,\n  minLength = 0,\n  fluidWidth = false,\n  placeholder,\n  value = '',\n  hasError = false,\n  readOnly = false,\n  innerRef = null,\n  type = 'text',\n  min = undefined,\n  max = undefined,\n  clearable = false,\n  leftComponent = null,\n  rightComponent = null,\n  required = false,\n  variant,\n  disableTooltip,\n  ...otherProps\n}) => (\n  <DSInput\n    {...otherProps}\n    aria-label={otherProps['aria-label'] || 'Text Box'}\n    autoFocus={autoFocus}\n    clearable={clearable}\n    containerProps={containerProps}\n    disabled={disabled}\n    fluidWidth={fluidWidth}\n    hasError={hasError}\n    innerRef={innerRef}\n    leftComponent={leftComponent}\n    max={max}\n    maxLength={maxLength}\n    min={min}\n    minLength={minLength}\n    placeholder={placeholder}\n    readOnly={readOnly}\n    required={required}\n    rightComponent={rightComponent}\n    role=\"textbox\"\n    type={type}\n    value={value}\n    variant={variant}\n    disableTooltip={disableTooltip}\n  />\n);\n\nconst props = {\n  /** inject props at textbox wrapper */\n  containerProps: PropTypes.shape({}).description(\n    'inject props at textbox wrapper',\n  ),\n  /**\n   * Whether the text box uses auto focus or not\n   */\n  autoFocus: PropTypes.bool.description(\n    'Whether the text box uses auto focus or not',\n  ),\n  /**\n   * Whether the text box is disabled or not\n   */\n  disabled: PropTypes.bool.description(\n    'Whether the text box is disabled or not',\n  ),\n  /**\n   * Max length for the text box\n   */\n  maxLength: PropTypes.number.description('Max length for the text box'),\n  /**\n   * Min length for the text box\n   */\n  minLength: PropTypes.number.description('Min length for the text box'),\n  /**\n   * Make the content of the text box fit the container or not\n   */\n  fluidWidth: PropTypes.bool.description(\n    'Make the content of the text box fit the container or not',\n  ),\n  /**\n   * Placeholder for the text box\n   */\n  placeholder: PropTypes.string.description('Placeholder for the text box'),\n  /**\n   * Default value once the component is initialized\n   */\n  value: PropTypes.string.description(\n    'Default value once the component is initialized',\n  ),\n  /**\n   * Whether the text box has error or not\n   */\n  hasError: PropTypes.bool.description('Whether the text box has error or not'),\n  /**\n   * Whether the text box is read only or not\n   */\n  readOnly: PropTypes.bool.description(\n    'Whether the text box is read only or not',\n  ),\n  /** html min prop for input */\n  min: PropTypes.number.description('html min prop for input'),\n  /** html max prop for input */\n  max: PropTypes.number.description('html max prop for input'),\n  /**\n   * Whether the text box is clearable or not\n   */\n  clearable: PropTypes.bool.description(\n    'Whether the text box is clearable or not',\n  ),\n  /**\n   * Component to be added at the left side of the text box\n   */\n  leftComponent: PropTypes.element.description(\n    'Component to be added at the left side of the text box',\n  ),\n  /**\n   * Component to be added at the right side of the text box\n   */\n  rightComponent: PropTypes.element.description(\n    'Component to be added at the right side of the text box',\n  ),\n  /**\n   * Whether the text box is required or not\n   */\n  required: PropTypes.bool.description(\n    'Whether the text box is required or not',\n  ),\n  /**\n   * [\n   *  'variant-default',\n   *  'variant-focus',\n   *  'variant-active',\n   *  'variant-disabled',\n   * ]\n   */\n  variant: PropTypes.string.description(\n    \"variant-default','variant-focus','variant-active','variant-disabled'\",\n  ),\n  /** html input type */\n  type: PropTypes.string.description('html input type'),\n  /** Internal ref */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).description(\n    'internal ref',\n  ),\n  /** disableTooltip */\n  disableTooltip: PropTypes.bool\n    .description('Whether to show a tooltip or not when text does not fit')\n    .defaultValue(true),\n};\n\nDSTextBox.propTypes = props;\n\nconst DSTextBoxWithSchema = describe(DSTextBox);\n\nDSTextBoxWithSchema.propTypes = props;\n\nexport default DSTextBox;\nexport { DSTextBoxWithSchema };\n","import { padStart } from './utils';\n\nexport const getVisibleTimeByFormat = format => ({\n  showHours:\n    format.indexOf('H') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('k') > -1,\n  showMinutes: format.indexOf('m') > -1,\n  showSeconds: format.indexOf('s') > -1,\n  use12Hours:\n    format.indexOf('A') > -1 ||\n    format.indexOf('h') > -1 ||\n    format.indexOf('a') > -1,\n});\n\nexport const addLeadingZeros = count => number =>\n  padStart(String(number), count, '0');\n","/* eslint-disable max-params */\n/* eslint-disable complexity */\n/* eslint-disable max-lines */\nimport { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport moment from 'moment';\n\nconst currentYear = new Date().getFullYear();\n\nconst getNextSibling = (elem, selector) => {\n  // Get the next sibling element\n  let sibling = elem.nextElementSibling;\n  // If there's no selector, return the first sibling\n  if (!selector) return sibling;\n\n  // If the sibling matches our selector, use it\n  // If not, jump to the next sibling and continue the loop\n  while (sibling) {\n    if (sibling.matches(selector)) return sibling;\n    sibling = sibling.nextElementSibling;\n  }\n  return sibling;\n};\n\nconst getPreviousSibling = (elem, selector) => {\n  let sibling = elem.previousElementSibling;\n  if (!selector) return sibling;\n  while (sibling) {\n    if (sibling.matches(selector)) return sibling;\n    sibling = sibling.previousElementSibling;\n  }\n  return sibling;\n};\n\nexport const isArrowIncrementDecrement = (key) =>\n  key === 'ArrowDown' || key === 'ArrowUp';\n\n// TODO remove and keep `true` behavior ( PUI-4141 )\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros, leadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros\n    ? addLeadingZeros(leadingZeros)(value)\n    : String(value);\n};\n\nexport const getFormattedDay = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n\n  if (parsedValue > 31) return '31';\n  return formatTimeNumber(parseTimeNumberFromText(v), true, 2);\n};\n\nexport const getShouldShortcircuitDay = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n  if (parsedValue > 31) return true;\n  // if the first input is in range 4-9 then there is no other option\n  // so we auto advance\n  if (parsedValue > 3 && parsedValue < 10) return true;\n  return false;\n};\n\nexport const getFormattedYear = (value) => {\n  const v = value.length > 4 ? value.slice(-4) : value;\n  if (parseInt(v) > 9999) return '9999';\n  return formatTimeNumber(parseTimeNumberFromText(v), true, 4);\n};\n\nexport const getFormattedMonth = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n  if (parsedValue > 12) return '12';\n  return formatTimeNumber(parseTimeNumberFromText(v), true, 2);\n};\n\nexport const getShouldShortcircuitMonth = (value) => {\n  const v = value.length > 2 ? value.slice(-2) : value;\n  const parsedValue = parseInt(v, 10);\n  if (parsedValue > 12) return true;\n  // if the first input is in range 2-9 then there is no other option\n  // so we auto advance\n  if (parsedValue > 1 && parsedValue < 10) return true;\n  return false;\n};\n\nexport const parseTimeNumberFromText = (stringValue) => {\n  const parsedInt = parseInt(stringValue);\n\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\n// trigger onBlur for entire DateInput control if focus is not in day, month, year\nexport const triggerOnBlur = (blurEvent, onBlur = () => {}) => {\n  const { target: currentEl = {}, relatedTarget } = blurEvent || {};\n  const nextElement = currentEl.nextElementSibling;\n  const { nextElementSibling } = nextElement || {};\n  // relatedTarget points to the element that is currently having focus\n  if (!nextElementSibling || nextElementSibling !== relatedTarget) {\n    onBlur(blurEvent);\n  }\n};\n\nexport const focusNextInput = (currentEl) => {\n  getNextSibling(currentEl, 'input').focus();\n};\n\nexport const focusPreviousInput = (currentEl) => {\n  getPreviousSibling(currentEl, 'input').focus();\n};\n\nexport const getValidTimeNumber = (\n  { min, max },\n  number,\n  valueString = '',\n  onError = () => null,\n) => {\n  if (valueString === '0' || number === 0) return null;\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    onError();\n    return max;\n  }\n  if (number < min) {\n    onError();\n    return min;\n  }\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  if (stringValue.length > 1) return true;\n  return number * 10 > max;\n};\n\nexport const getDateValuesFromTime = (time, format) => {\n  if (!time || !time.format) return {};\n  const month = time.format('MM');\n  const day = time.format('DD');\n  const year = time.format('YYYY');\n  return {\n    month: getFormattedMonth(format, month),\n    day: getFormattedDay(format, day),\n    year: getFormattedYear(format, year),\n  };\n};\n\nexport const resetTimeValues = () => ({\n  month: '',\n  day: '',\n  year: '',\n});\n\nexport const onInputFocus = (e) => {\n  e.preventDefault();\n  e.stopPropagation();\n  // we select the whole value to be able to override the value on first key\n  // we don't use selection color to be consistent with the highlight of the input\n  e.target.select();\n};\n\nexport const getNextTimeValue = (\n  value,\n  target,\n  yearMinRange,\n  yearMaxRange,\n  step = 1,\n  incrementing = true,\n) => {\n  const parsedValue = parseTimeNumberFromText(value);\n  let result = incrementing ? parsedValue + step : parsedValue - step;\n  if (target === 'year') {\n    if (result < yearMinRange) result = currentYear;\n    if (result > yearMaxRange) result = currentYear;\n  }\n  return result;\n};\n\nexport const focusNextInputIfNeeded = (\n  currentEl,\n  max,\n  number,\n  stringValue,\n  currentKey,\n) => {\n  if (\n    shouldFocusNextInput(max, number, stringValue) &&\n    !isArrowIncrementDecrement(currentKey)\n  ) {\n    focusNextInput(currentEl);\n  }\n};\n\nexport const commonInputProps = (digits = 2, onKeyDown, placeholder) => {\n  const props = {\n    pattern: '[0-9]*',\n    placeholder,\n    type: 'text',\n    onKeyDown,\n    onFocus: onInputFocus,\n  };\n  if (digits === 4) props.placeholder = 'YYYY';\n  return props;\n};\n\nexport const handleCompletedDate = (\n  time,\n  date,\n  show,\n  INTERNAL_V2_NO_MUTATION,\n) => {\n  // clone time to avoid mutation when INTERNAL_V2_NO_MUTATION is true\n  const newDate = INTERNAL_V2_NO_MUTATION\n    ? (time && moment(time)) || moment()\n    : time || moment();\n\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n\n  if (time && !year && !month && !day) return '';\n\n  newDate.value = `${year}-${month}-${day}`;\n\n  if (showMonth && month) newDate.month(parseInt(month - 1, 10));\n  if (showDay && day) newDate.date(parseInt(day, 10));\n  if (showYear && year) newDate.year(parseInt(year, 10));\n\n  return newDate;\n};\n\nexport const isTimeCompletelySet = (date, show, range) => {\n  let neededValues = [];\n  const { year, month, day } = date;\n  const { showYear, showMonth, showDay } = show;\n  const { yearMinRange, yearMaxRange } = range;\n\n  if (showMonth) neededValues = [...neededValues, month || null];\n  if (showDay) neededValues = [...neededValues, day || null];\n  if (showYear) neededValues = [...neededValues, year || null];\n\n  const isValidYear = year < yearMaxRange && year > yearMinRange;\n\n  return !neededValues.some((value) => !value) && isValidYear;\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.5 13a.503.503 0 0 1-.313-.109l-5-4a.5013.5013 0 0 1-.078-.703c.173-.214.488-.25.703-.078L9.5 11.86l4.688-3.75c.218-.172.531-.136.703.078.172.216.138.53-.078.703l-5 4A.501.501 0 0 1 9.5 13z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import { cloneDeep } from 'lodash';\nimport { focusNextInput, focusPreviousInput } from './utils';\n\nconst callChange = (event, handlers, isArrowChange) => {\n  if (event.target.name === 'day') handlers.onDayChange(event, isArrowChange);\n  if (event.target.name === 'month')\n    handlers.onMonthChange(event, isArrowChange);\n  if (event.target.name === 'year') handlers.onYearChange(event, isArrowChange);\n};\n\nconst setTarget = (event, v) => {\n  const n = cloneDeep(event);\n  let newValue = parseInt(n.target.value || 0, 10) + v;\n  if (newValue < 1) newValue = '01';\n  if (event.target.name === 'day' && newValue > 31) newValue = 31;\n  if (event.target.name === 'month' && newValue > 12) newValue = 12;\n  n.target.value = newValue;\n  return n;\n};\n\n// eslint-disable-next-line max-statements, complexity\nexport const onKeyDownHelper = (event, handlers) => {\n  switch (event.key) {\n    case 'ArrowLeft': {\n      event.preventDefault();\n      focusPreviousInput(event.target);\n      break;\n    }\n    case 'ArrowUp': {\n      event.preventDefault();\n      const n = setTarget(event, 1);\n      callChange(n, handlers, true);\n      break;\n    }\n    case 'ArrowDown': {\n      event.preventDefault();\n      const n = setTarget(event, -1);\n      callChange(n, handlers, true);\n      break;\n    }\n    case 'ArrowRight': {\n      event.preventDefault();\n      focusNextInput(event.target);\n      break;\n    }\n    case 'Tab': {\n      if (event.shiftKey) break;\n      if (event.target.value.length > 0 && event.target.name !== 'year')\n        event.preventDefault();\n      callChange(event, handlers);\n      break;\n    }\n    case 'Backspace': {\n      // HTML Date input behavior, clear everything when deleting\n      event.preventDefault();\n      const n = cloneDeep(event);\n      n.target.value = '';\n      callChange(n, handlers, true);\n      break;\n    }\n    case 'Enter': {\n      break;\n    }\n    default:\n      break;\n  }\n};\n","import styled from 'styled-components';\nimport { Grid } from '@elliemae/ds-grid';\n\n\nexport const DateInputFluidContainer = styled(Grid)`\n  width: 100%;\n  height: 100%;\n  align-items: center;\n`;\n\nexport const DateInputWrapper = styled(Grid)`\n  align-items: center;\n  align-content: center;\n  ${({ disabled, theme }) =>\n    disabled\n      ? `\n    background: ${theme.colors.neutral[100]};\n    color: ${theme.colors.neutral[500]};\n    `\n      : ''}\n  width: 102px;\n\n  &:focus {\n    outline-style: none;\n    box-shadow: none;\n    border-color: transparent;\n  }\n`;\n\nexport const DateInputInput = styled.input`\n  outline: none;\n  border: none;\n  border-radius: 0;\n  width: ${(props) => (props.size === 'l' ? '38px' : '25px')};\n  height: ${(props) => props.theme.space.xs};\n  ${({ disabled, theme }) =>\n    disabled\n      ? `\n  background: ${theme.colors.neutral[100]};\n  color: ${theme.colors.neutral[500]};\n  `\n      : ''}\n  padding-left: 4px;\n  padding-right: 0px;\n  &::placeholder {\n    font-size: 95%;\n    font-style: italic;\n  }\n  :-moz-placeholder {\n    font-size: 95%;\n    font-style: italic;\n  }\n\n  ::-moz-placeholder {\n    font-size: 95%;\n    font-style: italic;\n  }\n  &:focus {\n    background: ${({ theme }) => theme.colors.brand['300']};\n    background-clip: content-box;\n  }\n  ::-moz-selection {\n    background: transparent;\n  }\n  ::selection {\n    background: transparent;\n  }\n`;\n\nexport const DateInputDivider = styled.div`\n  padding: 1px;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\n\nexport const DateInputsPropTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  onBlur: PropTypes.func,\n  onChange: PropTypes.func,\n  onDateChange: PropTypes.func,\n  onCustomKeyDown: PropTypes.func,\n  onError: PropTypes.func,\n  format: PropTypes.string,\n  showMonth: PropTypes.bool,\n  showDay: PropTypes.bool,\n  showYear: PropTypes.bool,\n  step: PropTypes.number,\n  yearMaxRange: PropTypes.number,\n  disabled: PropTypes.bool,\n  yearMinRange: PropTypes.number,\n  time: PropTypes.string,\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M15.99 2H14v-.52c0-.27-.21-.48-.48-.48h-.05c-.26 0-.47.21-.47.48V2H7v-.52C7 1.21 6.79 1 6.52 1h-.04c-.27 0-.48.21-.48.48V2H4.01C2.9 2 2 2.9 2 4.01V17c0 1.1.9 2 2.01 2H16c1.1 0 2.01-.9 2.01-2.01V4.01C18 2.9 17.1 2 15.99 2zM17 16.99c0 .56-.45 1.01-1.01 1.01H4.01C3.45 18 3 17.55 3 16.99V6h14v10.99zM3 5v-.99C3 3.45 3.45 3 4.01 3H6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h6v.52c0 .27.21.48.48.48h.05c.26 0 .47-.21.47-.48V3h1.99c.56 0 1.01.45 1.01 1.01V5H3z',\n    'M5 8h2v2H5V8zM13 8h2v2h-2V8zM9 8h2v2H9V8zM5 11h2v2H5v-2zM13 11h2v2h-2v-2zM9 11h2v2H9v-2zM5 14h2v2H5v-2zM9 14h2v2H9v-2z',\n  ],\n  height: 20,\n  width: 20,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { DSIconColors, DSIconSizes } from '@elliemae/ds-basic/Icon';\nimport DatePicker from '@elliemae/ds-icons/DatePicker';\nimport DSButton, { buttonTypes } from '@elliemae/ds-basic/Button';\nimport { iconSizes } from '../../../../../shared-configs/prop-types';\n\nexport const Picker = ({\n  className = 'date-picker-icon',\n  disabled = false,\n  icon = <DatePicker />,\n  size = DSIconSizes.M,\n  buttonActionType = 'secondary',\n  onClick = () => null,\n  onBlur = () => null,\n  readOnly = false,\n  tabIndex = 0,\n  innerRef,\n  ...rest\n}) => (\n  <DSButton\n    innerRef={innerRef}\n    aria-label={rest['aria-label'] || 'Date Picker Button'}\n    buttonType={buttonActionType}\n    className={className}\n    color={!disabled ? DSIconColors.PRIMARY : DSIconColors.NEUTRAL}\n    disabled={disabled}\n    icon={icon}\n    onBlur={onBlur}\n    onClick={onClick}\n    readOnly={readOnly}\n    size={size}\n    tabIndex={tabIndex}\n    data-testid=\"btn-date-picker\"\n  />\n);\n\nexport const PickerPropsTypes = {\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.element,\n  size: PropTypes.oneOf(iconSizes),\n  buttonActionType: PropTypes.oneOf(buttonTypes),\n  onClick: PropTypes.func,\n  onFocus: PropTypes.func,\n  onBlur: PropTypes.func,\n  readOnly: PropTypes.bool,\n  tabIndex: PropTypes.number,\n};\n\nPicker.propTypes = PickerPropsTypes;\nexport default Picker;\n","import React from 'react';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\n\nconst { cssClassName } = convertPropToCssClassName('form-required-mark');\nconst RequiredMark = ({ required = false, optional = false }) => {\n  if (!required && !optional) return null;\n  if (required) {\n    return <span className={`${cssClassName}`}>&#9679;</span>;\n  }\n  return <span className={`${cssClassName} optional-mark`}>&#9900;</span>;\n};\n\nexport default RequiredMark;\n","/* eslint-disable react/prop-types */\nimport React, { useMemo, useState } from 'react';\nimport DSPopover, { usePopoverProviderState } from '@elliemae/ds-popover';\n\nconst TruncatedTooltipContext = React.createContext();\n\nconst { Provider } = TruncatedTooltipContext;\n\nfunction TooltipTextProvider({\n  children,\n  tooltipDelay = 200,\n  placement = 'top',\n  ...tooltipOptions\n}) {\n  const {\n    show: showTooltip,\n    hide: hideTooltip,\n    state: tooltipState,\n  } = usePopoverProviderState({ delay: tooltipDelay });\n  const [zIndex, setZIndex] = useState(110);\n\n  const value = useMemo(\n    () => ({\n      showTooltip,\n      hideTooltip,\n      setZIndex,\n    }),\n    [],\n  );\n\n  return (\n    <Provider value={value}>\n      {children}\n      {tooltipState.visible ? (\n        <DSPopover\n          boundaries=\"window\"\n          placement={placement}\n          showArrow\n          {...tooltipOptions}\n          {...(tooltipState.options || {})}\n          content={tooltipState.value}\n          referenceEl={tooltipState.reference}\n          style={{ pointerEvents: 'none', zIndex }}\n          visible={tooltipState.visible}\n        />\n      ) : null}\n    </Provider>\n  );\n}\n\nTooltipTextProvider.propTypes = {};\nTooltipTextProvider.defaultProps = {};\n\nexport { TooltipTextProvider, TruncatedTooltipContext };\nexport default TooltipTextProvider;\n","/* eslint-disable indent */\n/* eslint-disable max-lines */\n/* eslint-disable complexity */\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport {\n  commonInputProps,\n  triggerOnBlur,\n  focusNextInput,\n  getFormattedDay,\n  getShouldShortcircuitDay,\n  getFormattedMonth,\n  getShouldShortcircuitMonth,\n  getFormattedYear,\n} from './utils';\nimport { onKeyDownHelper } from './helpers';\nimport {\n  DateInputDivider,\n  DateInputWrapper,\n  DateInputInput,\n  DateInputFluidContainer,\n} from './styled';\nimport { DateInputsPropTypes } from './propsTypes';\n\nconst FORMAT = 'MMDDYYYY';\n\nexport const DateInputs = ({\n  onBlur,\n  onChange,\n  onDateChange,\n  disabled,\n  onCustomKeyDown,\n  time,\n  tabIndex,\n  innerRef,\n}) => {\n  const [month, setMonth] = useState('');\n  const [day, setDay] = useState('');\n  const [year, setYear] = useState('');\n  const [onChangeDateTrigger, setOnChangeDateTrigger] = useState({});\n  const dayRef = React.useRef<HTMLInputElement>();\n  const [\n    haveInputsOnChangeTriggered,\n    setHaveInputsOnChangeTriggered,\n  ] = useState(false);\n\n  let digits = 2;\n  let placeholder = '';\n\n  const handleFluidClick = React.useCallback((e: React.MouseEvent<Element, MouseEvent>) => {\n    if(!(e.target as HTMLInputElement).type && dayRef.current) {\n      dayRef.current.focus();\n    }\n  }, [dayRef.current])\n  \n  const triggerOnDateChange = React.useCallback(() => {\n    if (month && day && year && haveInputsOnChangeTriggered) {\n      const momentValue = moment(`${month}${day}${year}`, 'MMDDYYYY', true);\n      if (momentValue.isValid()) {\n        onDateChange(momentValue);\n      }\n      setHaveInputsOnChangeTriggered(false);\n    }\n  }, [day, month, year, haveInputsOnChangeTriggered]);\n\n  // isArrowChange is coming from the onKeyDown handler in helpers\n  const onMonthChange = React.useCallback((e, isArrowChange) => {\n    const value = getFormattedMonth(e.target.value);\n    const shouldAdvance = getShouldShortcircuitMonth(e.target.value);\n    setMonth(value);\n    setHaveInputsOnChangeTriggered(true);\n    if (e.target.value.length > 1 || shouldAdvance) {\n      if (!isArrowChange) focusNextInput(e.target);\n      setOnChangeDateTrigger({});\n    }\n  },[]);\n\n  // isArrowChange is coming from the onKeyDown handler in helpers\n  const onDayChange = React.useCallback((e, isArrowChange) => {\n    const value = getFormattedDay(e.target.value);\n    const shouldAdvance = getShouldShortcircuitDay(e.target.value);\n    setDay(value);\n    setHaveInputsOnChangeTriggered(true);\n    if (e.target.value.length > 1 || shouldAdvance) {\n      if (!isArrowChange) focusNextInput(e.target);\n      setOnChangeDateTrigger({});\n    }\n  },[]);\n\n  const onYearChange = React.useCallback((e) => {\n    const value = getFormattedYear(e.target.value);\n    setYear(value);\n    setHaveInputsOnChangeTriggered(true);\n    setOnChangeDateTrigger({});\n  },[]);\n\n  useEffect(() => {\n    // When component mounts haveInputsOnChangeTriggered is set to false\n    // so this is not triggered on mount but is triggered with all other changes\n    if (haveInputsOnChangeTriggered) {\n      const momentValue = moment(`${month}${day}${year}`, FORMAT, true);\n      if (month || day || year)\n        onChange(\n          `${month}${day}${year}`,\n          momentValue.isValid() ? momentValue : null,\n        );\n    }\n  }, [day, month, year]);\n\n  useEffect(() => {\n    triggerOnDateChange();\n  }, [onChangeDateTrigger]);\n\n  useEffect(() => {\n    if (\n      time &&\n      time !== `${month}${day}${year}` &&\n      moment(time, 'MMDDYYYY').isValid()\n    ) {\n      const values = String(time || '');\n      if (values.slice(0, 2)) setMonth(values.slice(0, 2));\n      if (values.slice(2, 4)) setDay(values.slice(2, 4));\n      if (values.slice(4, 8)) setYear(values.slice(4, 8));\n    } else if (!time && (month || day || year)) {\n      setMonth('');\n      setDay('');\n      setYear('');\n    }\n  }, [time]);\n\n  const onKeyDown = (event) =>\n    onKeyDownHelper(event, {\n      onDayChange,\n      onMonthChange,\n      onYearChange,\n    });\n\n  const renderMonthInput = () => {\n    placeholder = 'MM';\n    const onMonthInputBlur = (e) => {\n      setOnChangeDateTrigger({});\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DateInputInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autoComplete=\"off\"\n        key=\"month-input\"\n        data-testid=\"month\"\n        disabled={disabled}\n        name=\"month\"\n        onBlur={onMonthInputBlur}\n        onChange={onMonthChange}\n        value={month}\n        tabIndex={tabIndex}\n        ref={dayRef}\n      />\n    );\n  };\n  const renderDayInput = () => {\n    placeholder = 'DD';\n    const onDayInputBlur = (e) => {\n      setOnChangeDateTrigger({});\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DateInputInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autoComplete=\"off\"\n        key=\"day-input\"\n        data-testid=\"day\"\n        disabled={disabled}\n        name=\"day\"\n        onBlur={onDayInputBlur}\n        onChange={onDayChange}\n        value={day}\n        tabIndex={tabIndex}\n      />\n    );\n  };\n  const renderYearInput = () => {\n    placeholder = 'YY';\n    digits = 4;\n    const onYearInputBlur = (e) => {\n      triggerOnBlur(e, onBlur);\n    };\n    return (\n      <DateInputInput\n        {...commonInputProps(digits, onKeyDown, placeholder)}\n        autoComplete=\"off\"\n        key=\"year-input\"\n        data-testid=\"year\"\n        disabled={disabled}\n        name=\"year\"\n        onBlur={onYearInputBlur}\n        onChange={onYearChange}\n        value={year}\n        size=\"l\"\n        tabIndex={tabIndex}\n      />\n    );\n  };\n\n  const renderDateInputs = () => {\n    const inputs = [renderMonthInput(), renderDayInput(), renderYearInput()];\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? <DateInputDivider>/</DateInputDivider> : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n    ];\n  };\n\n  return (\n    <DateInputFluidContainer\n      onClick={handleFluidClick}\n      data-testid=\"date-input-fluidContainer\"\n    >\n    <DateInputWrapper\n      disabled={disabled}\n      ref={innerRef}\n      onKeyDown={onCustomKeyDown}\n      tabIndex={-1}\n      cols={['auto', '6px', 'auto', '6px', 'auto']}\n    >\n      {renderDateInputs()}\n    </DateInputWrapper>\n    </DateInputFluidContainer>\n  );\n};\n\nDateInputs.propTypes = DateInputsPropTypes;\n","/* eslint-disable react/prop-types */\n/* eslint-disable max-lines */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport 'react-dates/initialize';\nimport {\n  DayPickerSingleDateController,\n  SingleDatePickerPhrases,\n} from 'react-dates';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport ChevronLeft from '@elliemae/ds-icons/ChevronLeft';\nimport { renderMonthElement } from '../DatePickerRenderMonth/DatePickerRenderMonth';\nimport DatePickerNavigation from '../DatePickerNavigation/DatePickerNavigation';\nimport DatePickerDay from '../DatePickerDay/DatePickerDay';\n\nconst { classNameElement, classNameBlock } = convertPropToCssClassName(\n  'datepicker-range',\n);\n\nexport default class DSDatePickerController extends React.Component {\n  // eslint-disable-next-line react/static-property-placement\n  static defaultProps = {\n    date: '',\n    value: '',\n    enableOutsideDays: false,\n    initialVisibleMonth: moment(),\n    firstDayOfWeek: 0,\n    keepOpenOnDateSelect: true,\n    hideKeyboardShortcutsPanel: true,\n    onPrevMonthClick: () => null,\n    onNextMonthClick: () => null,\n    onClose: () => null,\n    onChange: () => null,\n    onClickEscape: () => null,\n    onDateChange: () => null,\n    phrases: SingleDatePickerPhrases,\n    // displayFormat: 'L',\n    displayFormatDay: 'D',\n    transitionDuration: 0,\n    // verticalSpacing: 0,\n    isDayBlocked: () => false,\n    isOutsideRange: () => false,\n    isDayHighlighted: () => false,\n    numberOfMonths: 1,\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedDate: this.getSafeValue(),\n    };\n    this.firstFocusableItem = React.createRef();\n  }\n\n  // eslint-disable-next-line react/state-in-constructor\n  state = {};\n\n  componentDidMount() {\n    this.datePicker.addEventListener('mouseup', this.handleMouseUp, false);\n    document.addEventListener('keydown', this.handleKeyDown, false);\n    setTimeout(() => {\n      if (this.datePicker) {\n        const [calendarDaySelected] = this.datePicker.getElementsByClassName(\n          'CalendarDay__selected',\n        );\n\n        if (calendarDaySelected) calendarDaySelected?.focus();\n        else\n          this.firstFocusableItem.current\n            .closest('.DayPickerNavigation_button')\n            .focus();\n      }\n    }, 400);\n  }\n\n  componentWillUnmount() {\n    this.datePicker.removeEventListener('mouseup', this.handleMouseUp, false);\n    document.removeEventListener('keydown', this.handleKeyDown, false);\n  }\n\n  handleMouseUp = () => {\n    const focusedElement = document.activeElement;\n\n    focusedElement.blur();\n  };\n\n  handleKeyDown = (event) => {\n    const [firstDay, ...restOfDays] = document\n      .getElementsByClassName('CalendarMonthGrid_month__horizontal')[1]\n      .getElementsByClassName('CalendarDay');\n    const [lastDay] = restOfDays.slice(-1);\n    const { onClickEscape } = this.props;\n\n    switch (event.key) {\n      case 'Home':\n        firstDay.focus();\n        break;\n      case 'End':\n        lastDay.focus();\n        break;\n      case 'Escape':\n        onClickEscape();\n        break;\n      default:\n        break;\n    }\n  };\n\n  getSafeValue = () => {\n    const { value, date, defaultValue } = this.props;\n    const { selectedDate } = this.state;\n    if (value) {\n      return moment(value);\n    }\n    if (date) {\n      return moment(date);\n    }\n    if (defaultValue) {\n      return moment(defaultValue);\n    }\n    if (selectedDate) {\n      return moment(selectedDate);\n    }\n    return null;\n  };\n\n  isControlled = () => {\n    const { value, date } = this.props;\n    return Boolean(value) || Boolean(date);\n  };\n\n  handleDateChange = (date) => {\n    const { readOnly, onDateChange, onChange } = this.props;\n    if (!readOnly) {\n      if (!this.isControlled()) {\n        this.setState({ selectedDate: date });\n      }\n      onDateChange(date);\n      onChange(date);\n    }\n  };\n\n  handleChange = (dataInput) => {\n    const { onDateChange, onChange } = this.props;\n    const momentvalue = moment(dataInput.target.value);\n    this.setState({ selectedDate: momentvalue });\n    onDateChange(momentvalue);\n    onChange(momentvalue);\n  };\n\n  handleNavClick = (date, nav) => {\n    const [prev, next] = document.getElementsByClassName(\n      'DayPickerNavigation_button',\n    );\n    const { onPrevMonthClick, onNextMonthClick } = this.props;\n\n    if (nav === 'prev') {\n      prev.focus();\n      onPrevMonthClick(date);\n    } else {\n      next?.focus();\n      onNextMonthClick(date);\n    }\n  };\n\n  insideBlur = (event) => {\n    if (!event.currentTarget.contains(event.relatedTarget)) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const {\n      numberOfMonths,\n      enableOutsideDays,\n      transitionDuration,\n      initialVisibleMonth,\n      firstDayOfWeek,\n      keepOpenOnDateSelect,\n      hideKeyboardShortcutsPanel,\n      onClose,\n      phrases,\n      displayFormatDay,\n      isDayBlocked,\n      isOutsideRange,\n      isDayHighlighted,\n      onOutsideClick,\n      key,\n      calendarProps,\n    } = this.props;\n\n    const safedate = this.getSafeValue();\n    const safeinitialMonth =\n      safedate && safedate.isValid()\n        ? () => safedate\n        : () => initialVisibleMonth;\n\n    return (\n      <div onBlur={this.insideBlur}>\n        <div\n          ref={(elem) => {\n            this.datePicker = elem;\n          }}\n          className={classNameBlock(\n            'wrapper-day-picker-single-date-controller',\n          )}\n          {...calendarProps}\n          data-testid=\"calendar-wrapper\"\n        >\n          <DayPickerSingleDateController\n            key={key}\n            date={safedate}\n            enableOutsideDays={enableOutsideDays}\n            firstDayOfWeek={firstDayOfWeek}\n            focused\n            hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n            initialVisibleMonth={safeinitialMonth}\n            isDayBlocked={isDayBlocked}\n            isDayHighlighted={isDayHighlighted}\n            isOutsideRange={isOutsideRange}\n            keepOpenOnDateSelect={keepOpenOnDateSelect}\n            navNext={\n              <DatePickerNavigation\n                className={classNameElement('navigation-next')}\n              />\n            }\n            navPrev={\n              <DatePickerNavigation\n                className={classNameElement('navigation-prev')}\n                icon={ChevronLeft}\n                innerRef={this.firstFocusableItem}\n              />\n            }\n            renderMonthElement={renderMonthElement}\n            numberOfMonths={numberOfMonths}\n            onClose={onClose}\n            onDateChange={this.handleDateChange}\n            onFocusChange={this.handleFocus}\n            onNextMonthClick={this.handleNavClick('next')}\n            onOutsideClick={onOutsideClick}\n            onPrevMonthClick={this.handleNavClick('prev')}\n            phrases={phrases}\n            renderDayContents={(date) => (\n              <DatePickerDay\n                className={classNameElement('day-contents')}\n                date={date.format(displayFormatDay)}\n              />\n            )}\n            transitionDuration={transitionDuration}\n            onTab={(e) => {\n              if (e.target.classList.contains('CalendarDay')) {\n                e.preventDefault();\n                onClose();\n              }\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nDSDatePickerController.propTypes = {\n  date: PropTypes.instanceOf(Date, moment),\n  value: PropTypes.oneOf(\n    PropTypes.instanceOf(Date),\n    PropTypes.instanceOf(moment),\n  ),\n  enableOutsideDays: PropTypes.bool,\n  initialVisibleMonth: PropTypes.instanceOf(Date, moment),\n  firstDayOfWeek: PropTypes.number,\n  keepOpenOnDateSelect: PropTypes.bool,\n  hideKeyboardShortcutsPanel: PropTypes.bool,\n  onPrevMonthClick: PropTypes.func,\n  onNextMonthClick: PropTypes.func,\n  onClose: PropTypes.func,\n  onClickEscape: PropTypes.func,\n  onChange: PropTypes.func,\n  onDateChange: PropTypes.func,\n  phrases: SingleDatePickerPhrases,\n  // displayFormat: PropTypes.string,\n  displayFormatDay: PropTypes.string,\n  transitionDuration: PropTypes.number,\n  // verticalSpacing: PropTypes.number,\n  isDayBlocked: PropTypes.func,\n  isOutsideRange: PropTypes.func,\n  isDayHighlighted: PropTypes.func,\n  numberOfMonths: PropTypes.number,\n};\n\nDSDatePickerController.defaultProps = {\n  date: '',\n  value: '',\n  enableOutsideDays: false,\n  initialVisibleMonth: moment(),\n  firstDayOfWeek: 0,\n  keepOpenOnDateSelect: true,\n  hideKeyboardShortcutsPanel: true,\n  onPrevMonthClick: () => null,\n  onNextMonthClick: () => null,\n  onClose: () => null,\n  onClickEscape: () => null,\n  onChange: () => null,\n  onDateChange: () => null,\n  phrases: PropTypes.shape({\n    calendarLabel: PropTypes.string,\n    closeDatePicker: PropTypes.string,\n    clearDates: PropTypes.string,\n    focusStartDate: PropTypes.string,\n    jumpToPrevMonth: PropTypes.string,\n    jumpToNextMonth: PropTypes.string,\n    keyboardShortcuts: PropTypes.string,\n    showKeyboardShortcutsPanel: PropTypes.string,\n    hideKeyboardShortcutsPanel: PropTypes.string,\n    openThisPanel: PropTypes.string,\n    enterKey: PropTypes.string,\n    leftArrowRightArrow: PropTypes.string,\n    upArrowDownArrow: PropTypes.string,\n    pageUpPageDown: PropTypes.string,\n    homeEnd: PropTypes.string,\n    escape: PropTypes.string,\n    questionMark: PropTypes.string,\n    selectFocusedDate: PropTypes.string,\n    moveFocusByOneDay: PropTypes.string,\n    moveFocusByOneWeek: PropTypes.string,\n    moveFocusByOneMonth: PropTypes.string,\n    moveFocustoStartAndEndOfWeek: PropTypes.string,\n    returnFocusToInput: PropTypes.string,\n    keyboardNavigationInstructions: PropTypes.string,\n    chooseAvailableStartDate: PropTypes.func,\n    chooseAvailableEndDate: PropTypes.func,\n    dateIsUnavailable: PropTypes.func,\n    dateIsSelected: PropTypes.func,\n  }),\n  // displayFormat: 'L',\n  displayFormatDay: 'D',\n  transitionDuration: 0,\n  // verticalSpacing: 0,\n  isDayBlocked: () => false,\n  isOutsideRange: () => false,\n  isDayHighlighted: () => false,\n  numberOfMonths: 1,\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeObservation_1 = require(\"./ResizeObservation\");\nvar ResizeObserverEntry_1 = require(\"./ResizeObserverEntry\");\nvar resizeObservers = [];\nvar ResizeObserver = /** @class */ (function () {\n    function ResizeObserver(callback) {\n        /** @internal */\n        this.$$observationTargets = [];\n        /** @internal */\n        this.$$activeTargets = [];\n        /** @internal */\n        this.$$skippedTargets = [];\n        var message = callbackGuard(callback);\n        if (message) {\n            throw TypeError(message);\n        }\n        this.$$callback = callback;\n        resizeObservers.push(this);\n    }\n    ResizeObserver.prototype.observe = function (target) {\n        var message = targetGuard('observe', target);\n        if (message) {\n            throw TypeError(message);\n        }\n        var index = findTargetIndex(this.$$observationTargets, target);\n        if (index > 0) {\n            return;\n        }\n        this.$$observationTargets.push(new ResizeObservation_1.ResizeObservation(target));\n        startLoop();\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        var message = targetGuard('unobserve', target);\n        if (message) {\n            throw TypeError(message);\n        }\n        var index = findTargetIndex(this.$$observationTargets, target);\n        if (index < 0) {\n            return;\n        }\n        this.$$observationTargets.splice(index, 1);\n        checkStopLoop();\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        this.$$observationTargets = [];\n        this.$$activeTargets = [];\n    };\n    return ResizeObserver;\n}());\nexports.ResizeObserver = ResizeObserver;\nfunction callbackGuard(callback) {\n    if (typeof (callback) === 'undefined') {\n        return \"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\";\n    }\n    if (typeof (callback) !== 'function') {\n        return \"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\";\n    }\n}\nfunction targetGuard(functionName, target) {\n    if (typeof (target) === 'undefined') {\n        return \"Failed to execute '\" + functionName + \"' on 'ResizeObserver': 1 argument required, but only 0 present.\";\n    }\n    if (!(target instanceof window.Element)) {\n        return \"Failed to execute '\" + functionName + \"' on 'ResizeObserver': parameter 1 is not of type 'Element'.\";\n    }\n}\nfunction findTargetIndex(collection, target) {\n    for (var index = 0; index < collection.length; index += 1) {\n        if (collection[index].target === target) {\n            return index;\n        }\n    }\n    return -1;\n}\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function (ro) {\n        ro.$$activeTargets = [];\n        ro.$$skippedTargets = [];\n        ro.$$observationTargets.forEach(function (ot) {\n            if (ot.isActive()) {\n                var targetDepth = calculateDepthForNode(ot.target);\n                if (targetDepth > depth) {\n                    ro.$$activeTargets.push(ot);\n                }\n                else {\n                    ro.$$skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return !!ro.$$activeTargets.length; });\n};\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return !!ro.$$skippedTargets.length; });\n};\nvar broadcastActiveObservations = function () {\n    var shallowestTargetDepth = Infinity;\n    resizeObservers.forEach(function (ro) {\n        if (!ro.$$activeTargets.length) {\n            return;\n        }\n        var entries = [];\n        ro.$$activeTargets.forEach(function (obs) {\n            var entry = new ResizeObserverEntry_1.ResizeObserverEntry(obs.target);\n            entries.push(entry);\n            obs.$$broadcastWidth = entry.contentRect.width;\n            obs.$$broadcastHeight = entry.contentRect.height;\n            var targetDepth = calculateDepthForNode(obs.target);\n            if (targetDepth < shallowestTargetDepth) {\n                shallowestTargetDepth = targetDepth;\n            }\n        });\n        ro.$$callback(entries, ro);\n        ro.$$activeTargets = [];\n    });\n    return shallowestTargetDepth;\n};\nvar deliverResizeLoopErrorNotification = function () {\n    var errorEvent = new window.ErrorEvent('ResizeLoopError', {\n        message: 'ResizeObserver loop completed with undelivered notifications.',\n    });\n    window.dispatchEvent(errorEvent);\n};\nvar calculateDepthForNode = function (target) {\n    var depth = 0;\n    while (target.parentNode) {\n        target = target.parentNode;\n        depth += 1;\n    }\n    return depth;\n};\nvar notificationIteration = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopErrorNotification();\n    }\n};\nvar animationFrameCancelToken;\nvar startLoop = function () {\n    if (animationFrameCancelToken)\n        return;\n    runLoop();\n};\nvar runLoop = function () {\n    animationFrameCancelToken = window.requestAnimationFrame(function () {\n        notificationIteration();\n        runLoop();\n    });\n};\nvar checkStopLoop = function () {\n    if (animationFrameCancelToken && !resizeObservers.some(function (ro) { return !!ro.$$observationTargets.length; })) {\n        window.cancelAnimationFrame(animationFrameCancelToken);\n        animationFrameCancelToken = undefined;\n    }\n};\nvar install = function () {\n    return window.ResizeObserver = ResizeObserver;\n};\nexports.install = install;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplT2JzZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvUmVzaXplT2JzZXJ2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5REFBd0Q7QUFFeEQsNkRBQTREO0FBRTVELElBQU0sZUFBZSxHQUFHLEVBQXNCLENBQUM7QUFFL0M7SUFVSSx3QkFBWSxRQUFnQztRQVA1QyxnQkFBZ0I7UUFDVCx5QkFBb0IsR0FBRyxFQUF5QixDQUFDO1FBQ3hELGdCQUFnQjtRQUNULG9CQUFlLEdBQUcsRUFBeUIsQ0FBQztRQUNuRCxnQkFBZ0I7UUFDVCxxQkFBZ0IsR0FBRyxFQUF5QixDQUFDO1FBR2hELElBQU0sT0FBTyxHQUFHLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4QyxJQUFJLE9BQU8sRUFBRTtZQUNULE1BQU0sU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVCO1FBQ0QsSUFBSSxDQUFDLFVBQVUsR0FBRyxRQUFRLENBQUM7UUFDM0IsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRU0sZ0NBQU8sR0FBZCxVQUFlLE1BQWU7UUFDMUIsSUFBTSxPQUFPLEdBQUcsV0FBVyxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUMvQyxJQUFJLE9BQU8sRUFBRTtZQUNULE1BQU0sU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVCO1FBQ0QsSUFBTSxLQUFLLEdBQUcsZUFBZSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNqRSxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUU7WUFDWCxPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLElBQUkscUNBQWlCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUM5RCxTQUFTLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRU0sa0NBQVMsR0FBaEIsVUFB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","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport DSPopper from '@elliemae/ds-basic/Popper';\nimport DatePickerPicker, {\n  PickerPropsTypes,\n} from './DatePickerPicker/DatePickerPicker';\nconst { classNameElement } = convertPropToCssClassName('datepicker-range');\n\nconst noop = () => null;\nfunction DatePickerDropdown({\n  disabled = false,\n  readOnly,\n  onClick = noop,\n  isOpen,\n  menu,\n  zIndex,\n  pickerProps,\n  pickerRef,\n}) {\n  return (\n    <DSPopper\n      contentComponent={menu}\n      isOpen={isOpen}\n      modifiers={{\n        preventOverflow: {\n          enabled: true,\n          padding: 0,\n          boundariesElement: 'window',\n        },\n      }}\n      showArrow={false}\n      triggerComponent={\n        <div>\n          <DatePickerPicker\n            innerRef={pickerRef}\n            {...pickerProps}\n            className={classNameElement('picker')}\n            disabled={disabled}\n            onClick={onClick}\n            readOnly={readOnly}\n          />\n        </div>\n      }\n      zIndex={zIndex}\n    />\n  );\n}\n\nDatePickerDropdown.propTypes = {\n  pickerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]),\n  disabled: PropTypes.bool,\n  readOnly: PropTypes.bool,\n  onClick: PropTypes.func,\n  isOpen: PropTypes.bool,\n  menu: PropTypes.element,\n  zIndex: PropTypes.number,\n  pickerProps: PropTypes.shape(PickerPropsTypes),\n};\n\nexport default DatePickerDropdown;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentRect = function (target) {\n    if ('getBBox' in target) {\n        var box = target.getBBox();\n        return Object.freeze({\n            height: box.height,\n            left: 0,\n            top: 0,\n            width: box.width,\n        });\n    }\n    else { // if (target instanceof HTMLElement) { // also includes all other non-SVGGraphicsElements\n        var styles = window.getComputedStyle(target);\n        return Object.freeze({\n            height: parseFloat(styles.height || '0'),\n            left: parseFloat(styles.paddingLeft || '0'),\n            top: parseFloat(styles.paddingTop || '0'),\n            width: parseFloat(styles.width || '0'),\n        });\n    }\n};\nexports.ContentRect = ContentRect;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudFJlY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQ29udGVudFJlY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFPQSxJQUFNLFdBQVcsR0FBRyxVQUFDLE1BQWU7SUFDaEMsSUFBSSxTQUFTLElBQUssTUFBNkIsRUFBRTtRQUM3QyxJQUFNLEdBQUcsR0FBSSxNQUE2QixDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3JELE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQztZQUNqQixNQUFNLEVBQUUsR0FBRyxDQUFDLE1BQU07WUFDbEIsSUFBSSxFQUFFLENBQUM7WUFDUCxHQUFHLEVBQUUsQ0FBQztZQUNOLEtBQUssRUFBRSxHQUFHLENBQUMsS0FBSztTQUNuQixDQUFDLENBQUM7S0FDTjtTQUFNLEVBQUUsMEZBQTBGO1FBQy9GLElBQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMvQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUM7WUFDakIsTUFBTSxFQUFFLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FBQztZQUN4QyxJQUFJLEVBQUUsVUFBVSxDQUFDLE1BQU0sQ0FBQyxXQUFXLElBQUksR0FBRyxDQUFDO1lBQzNDLEdBQUcsRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLFVBQVUsSUFBSSxHQUFHLENBQUM7WUFDekMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxJQUFJLEdBQUcsQ0FBQztTQUN6QyxDQUFDLENBQUM7S0FDTjtBQUNMLENBQUMsQ0FBQztBQUVPLGtDQUFXIn0=","import React, { useContext, useEffect } from 'react';\nimport { describe, PropTypes } from 'react-desc';\nimport styled from 'styled-components';\nimport { PopperPositions as positions } from '@elliemae/ds-popper';\nimport { TruncatedTooltipContext } from './TooltipTextProvider';\n\nconst isEllipsisActive = ({ offsetWidth, scrollWidth }) =>\n  offsetWidth < scrollWidth;\n\n// reduce the possibility of error showing the tooltip (text-overflow: ellipsis) https://jira.elliemae.io/browse/PUI-1755\nconst Text = styled.span`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: inline-block;\n  max-width: 100%;\n`;\n\nconst DSTruncatedTooltipText = ({\n  containerProps = {},\n  value = '',\n  zIndex = 110, // https://jira.elliemae.io/browse/PUI-1755\n  ...otherTextProps\n}) => {\n  const tooltipContext = useContext(TruncatedTooltipContext);\n  useEffect(() => {\n    if (zIndex && tooltipContext) tooltipContext.setZIndex(zIndex);\n  }, [zIndex]);\n\n  if (!tooltipContext) return value;\n\n  const { showTooltip, hideTooltip } = tooltipContext;\n\n  const handleMouseEnter = (e) => {\n    const { target } = e;\n    if (target && isEllipsisActive(target, target.getBoundingClientRect())) {\n      showTooltip(\n        {\n          value,\n          reference: target,\n        },\n        e,\n      );\n    }\n  };\n\n  const handleMouseLeave = (e) => {\n    hideTooltip({ reference: e.target });\n  };\n\n  const handlers = showTooltip\n    ? { onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave }\n    : {};\n  return (\n    <Text {...containerProps} {...otherTextProps} {...handlers}>\n      {value}\n    </Text>\n  );\n};\n\nDSTruncatedTooltipText.defaultProps = {\n  value: '',\n  zIndex: 110,\n};\n\nconst truncatedTooltipTextProps = {\n  containerProps: PropTypes.object.description(\n    'Set of Properties attached to the main container',\n  ),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).description(\n    'Text that when truncated will trigger the tooltip interaction',\n  ),\n  tooltipPlacement: PropTypes.oneOf([\n    positions.AUTO_START,\n    positions.AUTO_END,\n    positions.AUTO,\n    positions.TOP_START,\n    positions.TOP,\n    positions.TOP_END,\n    positions.RIGHT_START,\n    positions.RIGHT,\n    positions.RIGHT_END,\n    positions.BOTTOM_START,\n    positions.BOTTOM,\n    positions.BOTTOM_END,\n    positions.LEFT_START,\n    positions.LEFT,\n    positions.LEFT_END,\n  ]).description('Position of the tooltip'),\n  tooltipDelay: PropTypes.number.description('Delay to show the tooltip'),\n  zIndex: PropTypes.number\n    .description('override default zIndex')\n    .defaultValue(110),\n};\n\nDSTruncatedTooltipText.defaultProps = {\n  containerProps: {},\n  value: '',\n  tooltipPlacement: undefined,\n  tooltipDelay: undefined,\n};\n\nDSTruncatedTooltipText.propTypes = truncatedTooltipTextProps;\n\nconst TruncatedTooltipTextWithSchema = describe(DSTruncatedTooltipText);\nTruncatedTooltipTextWithSchema.propTypes = truncatedTooltipTextProps;\n\nexport { DSTruncatedTooltipText, TruncatedTooltipTextWithSchema };\nexport default DSTruncatedTooltipText;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentRect_1 = require(\"./ContentRect\");\nvar ResizeObservation = /** @class */ (function () {\n    function ResizeObservation(target) {\n        this.target = target;\n        this.$$broadcastWidth = this.$$broadcastHeight = 0;\n    }\n    Object.defineProperty(ResizeObservation.prototype, \"broadcastWidth\", {\n        get: function () {\n            return this.$$broadcastWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResizeObservation.prototype, \"broadcastHeight\", {\n        get: function () {\n            return this.$$broadcastHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResizeObservation.prototype.isActive = function () {\n        var cr = ContentRect_1.ContentRect(this.target);\n        return !!cr\n            && (cr.width !== this.broadcastWidth\n                || cr.height !== this.broadcastHeight);\n    };\n    return ResizeObservation;\n}());\nexports.ResizeObservation = ResizeObservation;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplT2JzZXJ2YXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvUmVzaXplT2JzZXJ2YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2Q0FBNEM7QUFFNUM7SUFlSSwyQkFBWSxNQUFlO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFWRCxzQkFBVyw2Q0FBYzthQUF6QjtZQUNJLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDO1FBQ2pDLENBQUM7OztPQUFBO0lBQ0Qsc0JBQVcsOENBQWU7YUFBMUI7WUFDSSxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztRQUNsQyxDQUFDOzs7T0FBQTtJQU9NLG9DQUFRLEdBQWY7UUFDSSxJQUFNLEVBQUUsR0FBRyx5QkFBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVwQyxPQUFPLENBQUMsQ0FBQyxFQUFFO2VBQ0osQ0FDQyxFQUFFLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxjQUFjO21CQUM3QixFQUFFLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxlQUFlLENBQ3hDLENBQUM7SUFDVixDQUFDO0lBQ0wsd0JBQUM7QUFBRCxDQUFDLEFBN0JELElBNkJDO0FBRVEsOENBQWlCIn0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentRect_1 = require(\"./ContentRect\");\nvar ResizeObserverEntry = /** @class */ (function () {\n    function ResizeObserverEntry(target) {\n        this.target = target;\n        this.contentRect = ContentRect_1.ContentRect(target);\n    }\n    return ResizeObserverEntry;\n}());\nexports.ResizeObserverEntry = ResizeObserverEntry;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplT2JzZXJ2ZXJFbnRyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9SZXNpemVPYnNlcnZlckVudHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQTRDO0FBRTVDO0lBR0ksNkJBQVksTUFBZTtRQUN2QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLHlCQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUNMLDBCQUFDO0FBQUQsQ0FBQyxBQVBELElBT0M7QUFFUSxrREFBbUIifQ==","export const AM = 'am';\nexport const PM = 'pm';\nexport const ARROW_UP = 'ArrowUp';\nexport const ARROW_DOWN = 'ArrowDown';\nexport const BACKSPACE = 'Backspace';\nexport const ESCAPE = 'Escape';\nexport const HOME = 'Home';\nexport const SHIFT = 'Shift';\nexport const END = 'End';\nexport const HOUR_RANGE_12 = { min: 0, max: 12 };\nexport const HOUR_RANGE_24 = { min: 0, max: 24 };\nexport const GENERAL_TIME_RANGE = { min: 0, max: 59 };\nexport const PLACEHOLDER_TIME = {\n  hour: 'hour',\n  minutes: 'minutes',\n  seconds: 'seconds',\n  meridiem: 'meridiem',\n};\n","import { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { parseInt, isNaN } from '@elliemae/ds-utilities/utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  SHIFT,\n  PLACEHOLDER_TIME,\n} from '../../../../shared-configs/constants';\n\nconst isAM = (time) => time && time.hour() < 12;\n\nexport const isArrowIncrementDecrement = (key) =>\n  key === ARROW_DOWN || key === ARROW_UP || key === SHIFT;\n\nexport const setNativeValue = (element, value) => {\n  if (!Object.getOwnPropertyDescriptor(element, 'value')) return;\n  const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n  const prototype = Object.getPrototypeOf(element);\n  const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n    prototype,\n    'value',\n  ).set;\n\n  if (valueSetter && valueSetter !== prototypeValueSetter) {\n    prototypeValueSetter.call(element, value);\n  } else {\n    valueSetter.call(element, value);\n  }\n  element.dispatchEvent(new Event('input', { bubbles: true }));\n};\n\nexport const placeholderFormat = (position, format, use12Hours) => {\n  if (position === PLACEHOLDER_TIME.hour) {\n    return _placeholderHour(format, use12Hours);\n  }\n  if (position === PLACEHOLDER_TIME.minutes) {\n    return format.indexOf('mm') > -1 ? 'mm' : 'm';\n  }\n  if (position === PLACEHOLDER_TIME.seconds) {\n    return format.indexOf('ss') > -1 ? 'ss' : 's';\n  }\n  if (position === PLACEHOLDER_TIME.meridiem) {\n    return format.indexOf('A') > -1 ? 'A' : 'a';\n  }\n};\n\nconst _placeholderHour = (format, use12Hours) => {\n  if (use12Hours) {\n    return format.indexOf('hh') > -1 ? 'hh' : 'h';\n  }\n  return format.indexOf('HH') > -1 ? 'HH' : 'H';\n};\n\nconst formatTimeNumber = (value, shouldAddLeadingZeros) => {\n  if (value === null || value === undefined) return '';\n  return shouldAddLeadingZeros ? addLeadingZeros(2)(value) : String(value);\n};\n\nexport const formatMinutes = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('mm') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatSeconds = (format, value) => {\n  const shouldAddLeadingZeros = format.indexOf('ss') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\nexport const formatHour = (format, value) => {\n  const shouldAddLeadingZeros =\n    format.indexOf('HH') > -1 || format.indexOf('hh') > -1;\n  return formatTimeNumber(value, shouldAddLeadingZeros);\n};\n\nexport const formatMeridiem = (format, value) =>\n  format.indexOf('A') > -1 ? value.toUpperCase() : value.toLowerCase();\n\nexport const parseTimeNumberFromText = (stringValue) => {\n  const parsedInt = parseInt(stringValue);\n  if (isNaN(parsedInt)) return null;\n\n  return parsedInt;\n};\n\nexport const focusNextInput = (currentEl) => {\n  const nextElement = currentEl.nextElementSibling;\n  if (nextElement && nextElement.nextElementSibling) {\n    nextElement.nextElementSibling.focus();\n  }\n};\n\nexport const focusPreviousInput = (currentEl) => {\n  const previousElement = currentEl.previousElementSibling;\n  if (previousElement && previousElement.previousElementSibling) {\n    previousElement.previousElementSibling.focus();\n  }\n};\n\nexport const getValidTimeNumber = ({ min, max }, number, typed) => {\n  if (number === undefined || number === null) return null;\n  if (number > max) {\n    if (isNaN(typed)) return parseInt(typed);\n    return max;\n  }\n  if (number < min) return min;\n  return number;\n};\n\nexport const shouldFocusNextInput = (max, number = 0, stringValue) => {\n  const safeString = String(stringValue);\n  const cleanString = safeString.startsWith('00')\n    ? safeString.slice(1)\n    : safeString;\n  return number * 10 > max || String(max).length === cleanString.length;\n};\n\nexport const getTimeValuesFromTime = (time, format, use12Hours) => {\n  if (!time || !time.hour) return {};\n  const hours = use12Hours ? time.hour() % 12 || 12 : time.hour();\n  const minutes = time.minutes();\n  const seconds = time.seconds();\n  const meridiem = !isAM(time) ? PM : AM;\n\n  return {\n    hours: formatHour(format, hours),\n    minutes: formatMinutes(format, minutes),\n    seconds: formatSeconds(format, seconds),\n    meridiem,\n  };\n};\n\nexport const resetTimeValues = () => ({\n  hours: '',\n  minutes: '',\n  seconds: '',\n  meridiem: AM,\n});\n\nexport const commonInputProps = (onKeyDown, onInputFocus, onClick) => ({\n  pattern: '[0-9]*',\n  type: 'text',\n  onKeyDown,\n  onClick,\n  onFocus: onInputFocus,\n});\n","/* eslint-disable complexity */\n/* eslint-disable react/prop-types */\n/* eslint-disable max-lines */\n/* eslint-disable max-statements */\nimport React, { useEffect, useState } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport {\n  commonInputProps,\n  formatHour,\n  formatMinutes,\n  formatSeconds,\n  formatMeridiem,\n  getValidTimeNumber,\n  setNativeValue,\n  parseTimeNumberFromText,\n  focusNextInput,\n  focusPreviousInput,\n  getTimeValuesFromTime,\n  isArrowIncrementDecrement,\n  shouldFocusNextInput,\n  placeholderFormat,\n} from './utils';\nimport {\n  AM,\n  PM,\n  ARROW_UP,\n  ARROW_DOWN,\n  BACKSPACE,\n  ESCAPE,\n  HOME,\n  HOUR_RANGE_12,\n  HOUR_RANGE_24,\n  GENERAL_TIME_RANGE,\n  END,\n  PLACEHOLDER_TIME,\n  SHIFT,\n} from '../../../../shared-configs/constants';\n\nconst blockName = 'input-times-group';\n\nconst InputTimesGroup = aggregatedClasses('div')(blockName);\nconst TimeInput = aggregatedClasses('input')(blockName, 'input');\nconst Divider = aggregatedClasses('span')(\n  blockName,\n  'divider',\n  ({ value }) => ({\n    value,\n  }),\n);\n\n// eslint-disable-next-line react/prop-types\nconst TimeDivider = ({ content = ':', value = '' }) => (\n  <Divider value={!!value}>{content}</Divider>\n);\n\nconst TimeInputs = ({\n  time,\n  format,\n  use12Hours,\n  step = 1,\n  showHours,\n  showMinutes,\n  showSeconds,\n  onChange,\n  disabled,\n  innerRef,\n  clearable,\n  'arial-label': ariaLabel,\n  'aria-label': ariaLabel2,\n}) => {\n  const [meridiem, setMeridiem] = useState('');\n  const [hours, setHours] = useState('');\n  const [minutes, setMinutes] = useState('');\n  const [hasInputValue, setHasInputValue] = useState(false);\n  const [seconds, setSeconds] = useState('');\n  const [currentKey, setCurrentKey] = useState('');\n  const [hasInputBeenTriggered, setHasInputBeenTriggered] = useState(false);\n\n  const [lastTypedNumber, setLastTypedNumber] = useState(null);\n  const inputRefs = {\n    hours: null,\n    minutes: null,\n    seconds: null,\n    meridiem: null,\n  };\n\n  useEffect(() => {\n    if (time && moment(time).isValid()) {\n      const timeValues = getTimeValuesFromTime(time, format, use12Hours);\n\n      setMeridiem(timeValues.meridiem);\n      setHours(timeValues.hours);\n      setMinutes(timeValues.minutes);\n      setSeconds(timeValues.seconds);\n    } else {\n      setMeridiem('');\n      setHours('');\n      setMinutes('');\n      setSeconds('');\n    }\n  }, [time, format, use12Hours]);\n\n  useEffect(() => {\n    const selectedTime = time || moment();\n    if (isTimeCompletelySet() && selectedTime.hours && hasInputBeenTriggered) {\n      if (showHours && hours) selectedTime.hours(hours);\n      if (showMinutes && minutes) selectedTime.minutes(minutes);\n      if (showSeconds && seconds) selectedTime.seconds(seconds);\n      if (use12Hours && meridiem) {\n        const nextHours =\n          meridiem.toLowerCase() === AM ? hours % 12 : (hours % 12) + 12;\n        selectedTime.hour(nextHours);\n      }\n      onChange(selectedTime);\n      setHasInputBeenTriggered(false);\n    }\n  }, [hours, minutes, seconds, meridiem]);\n\n  const focusNextInputIfNeeded = (currentEl, max, number) => {\n    if (\n      shouldFocusNextInput(max, number, currentEl.value) &&\n      !isArrowIncrementDecrement(currentKey) &&\n      !hasInputValue\n    ) {\n      focusNextInput(currentEl);\n    }\n  };\n\n  const getNextTimeValue = (value, incrementing = true) => {\n    const parsedValue = parseTimeNumberFromText(value);\n    return incrementing ? parsedValue + step : parsedValue - step;\n  };\n\n  const onInputFocus = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.target.select();\n  };\n\n  const onClick = (e) => {\n    if (e.target.value) {\n      setHasInputValue(true);\n    }\n  };\n\n  // eslint-disable-next-line max-statements\n  const onKeyDown = (event, max) => {\n    const { target } = event;\n    const { value } = target;\n    setLastTypedNumber(event.key);\n    switch (event.key) {\n      case ARROW_UP: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const incrementedValue = getNextTimeValue(value);\n        setNativeValue(event.target, incrementedValue);\n        break;\n      }\n      case ARROW_DOWN: {\n        event.preventDefault();\n        setCurrentKey(event.key);\n        const decrementedValue = getNextTimeValue(value, false);\n        setNativeValue(event.target, decrementedValue);\n        break;\n      }\n      case BACKSPACE: {\n        event.preventDefault();\n        if (!value) {\n          focusPreviousInput(event.target);\n        } else {\n          setNativeValue(event.target, '');\n        }\n        break;\n      }\n      case ESCAPE: {\n        event.preventDefault();\n        event.target.blur();\n        break;\n      }\n      case HOME: {\n        event.preventDefault();\n        setNativeValue(event.target, String(max));\n        focusNextInput(event.target);\n        break;\n      }\n      case END: {\n        event.preventDefault();\n        setNativeValue(event.target, '00');\n        focusNextInput(event.target);\n        break;\n      }\n      case SHIFT:\n        event.preventDefault();\n        setCurrentKey(event.key);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const isTimeCompletelySet = () => {\n    let neededValues = [];\n\n    if (showHours) neededValues = [...neededValues, hours || null];\n    if (showMinutes) neededValues = [...neededValues, minutes || null];\n    if (showSeconds) neededValues = [...neededValues, seconds || null];\n    if (use12Hours) neededValues = [...neededValues, meridiem || null];\n\n    return !neededValues.some((value) => !value);\n  };\n\n  const handleSecondsChange = (e) => {\n    const { value } = e.target;\n    const secondsHandled = parseTimeNumberFromText(value);\n\n    const nextSeconds = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      secondsHandled,\n      lastTypedNumber,\n    );\n\n    setSeconds(formatSeconds(format, nextSeconds));\n    setHasInputBeenTriggered(true);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleMinutesChange = (e) => {\n    const { value } = e.target;\n    const minutesHandled = parseTimeNumberFromText(value);\n    const nextMinutes = getValidTimeNumber(\n      GENERAL_TIME_RANGE,\n      minutesHandled,\n      lastTypedNumber,\n    );\n\n    setMinutes(formatMinutes(format, nextMinutes));\n    setHasInputBeenTriggered(true);\n    focusNextInputIfNeeded(e.target, GENERAL_TIME_RANGE.max, value);\n  };\n\n  const handleHoursChange = (e) => {\n    const { value } = e.target;\n    const hour = parseTimeNumberFromText(value);\n    const hoursRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    const nextHour = getValidTimeNumber(hoursRange, hour, lastTypedNumber);\n    setHours(formatHour(format, nextHour));\n    setHasInputBeenTriggered(true);\n    focusNextInputIfNeeded(e.target, hoursRange.max, value);\n  };\n\n  const handleMeridiemKeyDown = (e) => {\n    if (e.key === ARROW_UP || e.key === 'a') {\n      setMeridiem(formatMeridiem(format, AM));\n    } else if (e.key === ARROW_DOWN || e.key === 'p') {\n      setMeridiem(formatMeridiem(format, PM));\n    } else if (e.key === SHIFT) {\n      setCurrentKey(e.key);\n    } else if (e.key === BACKSPACE) {\n      setMeridiem('');\n    }\n    setHasInputBeenTriggered(true);\n  };\n\n  const handleMeridiemBlur = (e) => {\n    const { value } = e.target;\n    if (value !== AM && value !== PM) {\n      setMeridiem('');\n    }\n  };\n\n  const handleOnBlur = (event) => {\n    const selectedTime = moment();\n    if (clearable && !event.currentTarget.contains(event.relatedTarget)) {\n      if (showHours && hours) selectedTime.hours(hours);\n      if (showMinutes && minutes) selectedTime.minutes(minutes);\n      if (showSeconds && seconds) selectedTime.seconds(seconds);\n      if (use12Hours && meridiem) {\n        const nextHours =\n          meridiem.toLowerCase() === AM ? hours % 12 : (hours % 12) + 12;\n        selectedTime.hour(nextHours);\n      }\n      onChange(selectedTime);\n    }\n  };\n\n  const renderSecondsInput = () => {\n    if (!showSeconds) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"seconds-input\"\n        data-testid=\"ds-time-input__seconds\"\n        aria-label={ariaLabel || ariaLabel2 || 'Seconds Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.seconds = node)}\n        onChange={handleSecondsChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.seconds, format)}\n        value={seconds}\n      />\n    );\n  };\n\n  const renderMinutesInput = () => {\n    if (!showMinutes) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, GENERAL_TIME_RANGE.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"minutes-input\"\n        data-testid=\"ds-time-input__minutes\"\n        aria-label={ariaLabel || ariaLabel2 || 'Minutes Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.minutes = node)}\n        onChange={handleMinutesChange}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.minutes, format)}\n        value={minutes}\n      />\n    );\n  };\n\n  const renderHoursInput = () => {\n    if (!showHours) return null;\n    const hourFormatRange = use12Hours ? HOUR_RANGE_12 : HOUR_RANGE_24;\n\n    return (\n      <TimeInput\n        {...commonInputProps(\n          (e) => onKeyDown(e, hourFormatRange.max),\n          onInputFocus,\n          onClick,\n        )}\n        key=\"hour-input\"\n        data-testid=\"ds-time-input__hours\"\n        aria-label={ariaLabel || ariaLabel2 || 'Hours Input'}\n        disabled={disabled}\n        // eslint-disable-next-line no-return-assign\n        innerRef={(node) => (inputRefs.hours = node)}\n        onChange={handleHoursChange}\n        placeholder={placeholderFormat(\n          PLACEHOLDER_TIME.hour,\n          format,\n          use12Hours,\n        )}\n        value={hours}\n      />\n    );\n  };\n\n  const renderMeridiemInput = () => {\n    if (!use12Hours) return null;\n\n    return (\n      <TimeInput\n        {...commonInputProps}\n        key=\"meridiem-input\"\n        data-testid=\"ds-time-input__ampm\"\n        aria-label={ariaLabel || ariaLabel2 || 'Meridiem Input'}\n        disabled={disabled}\n        onBlur={handleMeridiemBlur}\n        onKeyDown={handleMeridiemKeyDown}\n        placeholder={placeholderFormat(PLACEHOLDER_TIME.meridiem, format)}\n        value={meridiem}\n      />\n    );\n  };\n\n  const renderTimeInputs = () => {\n    const inputs = [\n      renderHoursInput(),\n      renderMinutesInput(),\n      renderSecondsInput(),\n    ];\n    /* eslint-disable indent */\n    const inputsWithDividers = inputs.reduce(\n      (acc, input, index) =>\n        input\n          ? acc.concat([\n              index ? (\n                <TimeDivider\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={index}\n                  content=\":\"\n                  value={input.props.value}\n                />\n              ) : null,\n              input,\n            ])\n          : acc,\n      [],\n    );\n    /* eslint-enable indent */\n\n    return [\n      inputsWithDividers,\n      React.createElement('span', { key: 'span' }), // hack for next/prev focus\n      renderMeridiemInput(),\n    ];\n  };\n\n  return (\n    <InputTimesGroup onBlur={handleOnBlur} innerRef={innerRef}>\n      {renderTimeInputs()}\n    </InputTimesGroup>\n  );\n};\n\nexport default TimeInputs;\n","import React, { useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport memoizeOne from 'memoize-one';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport TimeInputs from './TimeInputs';\n\nconst blockName = 'input-time';\n\nconst InputTimeContainer = aggregatedClasses('div')(blockName);\n\nconst TimeInputImpl = ({\n  format,\n  innerRef,\n  onChange,\n  className,\n  value,\n  disabled,\n  clearable,\n  'arial-label': ariaLabel,\n}) => {\n  const getVisibleTimeInputs = memoizeOne((formatValue) =>\n    getVisibleTimeByFormat(formatValue),\n  );\n  let inputsContainer = useRef();\n\n  const handleFocus = (e) => {\n    if (!e.target.type) {\n      inputsContainer.querySelector('input').focus();\n    }\n  };\n\n  const visibleInputs = useMemo(() => getVisibleTimeInputs(format));\n\n  return (\n    <InputTimeContainer\n      className={className}\n      disabled={disabled}\n      innerRef={innerRef}\n      onClick={handleFocus}\n    >\n      <TimeInputs\n        aria-label={ariaLabel}\n        clearable={clearable}\n        disabled={disabled}\n        format={format}\n        innerRef={(node) => {\n          inputsContainer = node;\n        }}\n        onChange={onChange}\n        time={value}\n        {...visibleInputs}\n      />\n    </InputTimeContainer>\n  );\n};\n\nTimeInputImpl.propTypes = {\n  containerProps: PropTypes.shape({}),\n  /**\n   * Inner reference to the input\n   */\n  innerRef: PropTypes.any,\n  /**\n   * Classes to add to the container\n   */\n  className: PropTypes.string,\n  /**\n   * Styles to add to the container\n   */\n  style: PropTypes.shape({}),\n  /**\n   * Allows a function that is triggered once the time input changes\n   */\n  onChange: PropTypes.func,\n  /**\n   * Valid time format\n   */\n  format: PropTypes.string,\n  /**\n   * Default value once the component is initialized\n   */\n  value: PropTypes.string,\n  /**\n   * Whether the time input is clearable or not\n   */\n  clearable: PropTypes.bool,\n  /**\n   * Whether the time input is disabled or not\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Aria label to add to the container\n   */\n  'aria-label': PropTypes.bool,\n  'arial-label': PropTypes.bool,\n};\n\nexport default TimeInputImpl;\n","import moment from 'moment';\n\nexport const updateDateAndTime = (date, time) => {\n  const splittedDate = moment();\n  splittedDate.month(date?.get('month'));\n  splittedDate.year(date?.get('year'));\n  splittedDate.date(date?.get('date'));\n  splittedDate.hour(time?.get('hour'));\n  splittedDate.minute(time?.get('minute'));\n  splittedDate.second(time?.get('second'));\n\n  return splittedDate;\n};\n","/* eslint-disable */\nimport createIcon from './utils/createIcon';\n\nexport default createIcon({\n  paths: [\n    'M9.499 6.969a.503.503 0 0 0-.313.109l-5 4a.5013.5013 0 0 0-.078.703c.173.214.488.25.703.078l4.688-3.75 4.688 3.75c.218.172.531.136.703-.078a.5004.5004 0 0 0-.078-.703l-5-4a.501.501 0 0 0-.313-.109z',\n  ],\n  height: 20,\n  width: 20,\n});\n","export function MoveElementOnScroll(\n  element,\n  {\n    container,\n    min = 0,\n    max = element.offsetHeight,\n    speed = 1,\n    smooth = 2,\n    onUpdate = () => null,\n    onEndScroll = () => null,\n  },\n) {\n  let moving = false;\n  let pos = min;\n  let lastPos = pos;\n\n  // todo: move this to utils if we finally need it\n  const requestFrame = (function() {\n    return (\n      window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      function(func) {\n        window.setTimeout(func, 1000 / 50);\n      }\n    );\n  })();\n\n  function update() {\n    moving = true;\n    const delta = (pos - lastPos) / smooth;\n    lastPos += delta;\n\n    if (Math.abs(delta) > 0.7) {\n      requestFrame(() => {\n        onUpdate(lastPos, delta);\n        update();\n      });\n    } else {\n      onEndScroll(pos);\n      moving = false;\n    }\n  }\n\n  function scrolling(e) {\n    e.preventDefault(); // disable default scrolling\n    let delta = e.delta || e.wheelDelta;\n    if (delta === undefined) {\n      // for firefox\n      delta = -e.detail;\n      delta *= 10 * speed;\n    }\n\n    pos += -delta * speed;\n    pos = Math.max(min, Math.min(pos, max)); // limit scrolling\n    if (!moving) {\n      update();\n    }\n  }\n\n  container.addEventListener('mousewheel', scrolling, false);\n  container.addEventListener('DOMMouseScroll', scrolling, false);\n\n  return {\n    unsubscribe: () => {\n      container.removeEventListener('mousewheel', scrolling);\n      container.removeEventListener('DOMMouseScroll', scrolling);\n    },\n    updatePosition: newPos => {\n      pos = -newPos;\n      lastPos = -pos;\n    },\n  };\n}\n\nexport default MoveElementOnScroll;\n","/* eslint-disable eqeqeq */\n/* eslint-disable react/prop-types */\n/* eslint-disable complexity */\n/* eslint-disable max-lines */\nimport React, { Component } from 'react';\nimport { findIndex } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport memoizeOne from 'memoize-one';\nimport ChevronSmallUp from '@elliemae/ds-icons/ChevronSmallUp';\nimport ChevronSmallDown from '@elliemae/ds-icons/ChevronSmallDown';\nimport DSButton from '@elliemae/ds-button';\nimport { MoveElementOnScroll } from './moveElementOnScroll';\nimport { validateIndex } from './utils';\n\nconst blockName = 'time-picker-panel';\n\nconst Container = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ scrolling }) => ({ scrolling }),\n);\nconst Wrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst PickerItemListContainer = aggregatedClasses('div')(\n  blockName,\n  'item-list-container',\n);\nconst PickerItemList = aggregatedClasses('div')(blockName, 'item-list');\nconst PickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst PickerItemContainer = aggregatedClasses('div')(\n  blockName,\n  'item',\n  ({ selected, disabled }) => ({ selected, disabled }),\n);\nconst PickerSelectedOptionSelected = aggregatedClasses('div')(\n  blockName,\n  'selected-container',\n);\nconst SelectedCircle = aggregatedClasses('div')(blockName, 'selected-circle');\nconst ArrowButtonContainer = aggregatedClasses('div')(\n  blockName,\n  'arrow-container',\n);\n\nconst getOptionIndex = (options, selectedOption, valueProperty = 'value') => {\n  const index = options.findIndex(\n    (option) => option[valueProperty] === selectedOption,\n  );\n  return validateIndex(index, options);\n};\n\nconst arrowProps = {\n  buttonType: 'text',\n  fluidHeight: true,\n  fluidWidth: true,\n  size: 's',\n};\n\nexport default class PickerPanel extends Component {\n  computeContainerTranslation = memoizeOne((index) => {\n    const { options, valueProperty } = this.props;\n    const { selectedOption, scrolling } = this.state;\n\n    const selectedOptionIndex =\n      index || getOptionIndex(options, selectedOption, valueProperty);\n    const listYPosition =\n      this.minYListPosition - selectedOptionIndex * this.optionHeight;\n\n    if (this.scrollHandler && !scrolling)\n      this.scrollHandler.updatePosition(listYPosition);\n\n    return listYPosition;\n  });\n\n  constructor(props) {\n    super(props);\n    this.pickerListContainerRef = React.createRef();\n    this.pickerListRef = React.createRef();\n    this.pickerItemRef = React.createRef();\n    this.selectedOptionRef = React.createRef();\n\n    this.state = {\n      selectedOption: props.selected,\n      activeIndex: 0,\n      // eslint-disable-next-line react/no-unused-state\n      prevProps: {},\n    };\n  }\n\n  componentDidMount() {\n    this.computeSizes();\n    const pickerListContainerEl = this.pickerListContainerRef.current;\n    const pickerListEl = this.pickerListRef.current;\n\n    this.scrollHandler = new MoveElementOnScroll(pickerListEl, {\n      container: pickerListContainerEl,\n      min: -this.minYListPosition,\n      max: this.maxYListPosition,\n      onUpdate: (pos, delta) => {\n        const { options } = this.props;\n        const index =\n          options.length -\n          -Math.floor((pos - this.maxYListPosition) / this.optionHeight) +\n          (delta > 0 ? 1 : -1);\n        this.moveTo(index, true);\n      },\n      onEndScroll: () => {\n        this.setState({ scrolling: false });\n      },\n    });\n    this.computeContainerTranslation();\n  }\n\n  componentWillUnmount() {\n    this.scrollHandler.unsubscribe();\n  }\n\n  static getDerivedStateFromProps(nextProps, { prevProps }) {\n    const { selected, valueProperty, options } = nextProps;\n    if (selected !== prevProps.selected) {\n      return {\n        selectedOption: selected,\n        activeIndex: getOptionIndex(options, selected, valueProperty),\n        prevProps: nextProps,\n      };\n    }\n    return null;\n  }\n\n  getOptionValue(option) {\n    const { valueProperty } = this.props;\n    return option[valueProperty];\n  }\n\n  getOptionLabel(option) {\n    const { labelProperty } = this.props;\n    return option[labelProperty];\n  }\n\n  computeSizes() {\n    const { options, numberItemsOnScreen } = this.props;\n    const { offsetHeight: optionHeight } = this.pickerItemRef.current;\n\n    this.optionHeight = optionHeight;\n    this.listHeight = this.optionHeight * numberItemsOnScreen;\n\n    this.minYListPosition = this.listHeight / 2 - this.optionHeight / 2;\n    this.maxYListPosition =\n      this.optionHeight * (options.length - Math.ceil(numberItemsOnScreen / 2));\n  }\n\n  handleOptionSelect(optionValue, index, scrolling) {\n    const { onChange } = this.props;\n    this.setState(\n      (state) => ({\n        ...state,\n        scrolling,\n        selectedOption: optionValue,\n        activeIndex: index,\n      }),\n      () => {\n        onChange(optionValue, index);\n      },\n    );\n  }\n\n  // TODO: this needs a refactor from de FocusGroup\n  // eslint-disable-next-line max-statements\n  handleKeyDown(e) {\n    const { activeIndex } = this.state;\n    const { options } = this.props;\n    const [firstColumn, ...restColumns] = document.getElementsByClassName(\n      'em-ds-time-picker-panel',\n    );\n    const [lastColumn] = restColumns.slice(-1);\n    const [prev] = document.getElementsByClassName(\n      'DayPickerNavigation_button',\n    );\n    const focusedElement = document.activeElement;\n\n    switch (e.key) {\n      case 'Home':\n        this.moveTo(0);\n        break;\n      case 'End':\n        this.moveTo(options.length - 1);\n        break;\n      case 'ArrowUp':\n        this.moveTo(activeIndex - 1);\n        break;\n      case 'ArrowDown':\n        this.moveTo(activeIndex + 1);\n        break;\n      case 'Tab': {\n        e.preventDefault();\n        // If it is DateTimePicker, move focus to prev arrow element\n        if (prev && focusedElement === lastColumn) {\n          prev.focus();\n        } else if (focusedElement === lastColumn) {\n          firstColumn.focus();\n        } else {\n          const position = findIndex(restColumns, focusedElement);\n          restColumns[position + 1].focus();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  }\n\n  moveTo(index, scrolling) {\n    const { options } = this.props;\n    const { selectedOption } = this.state;\n    const validIndex = validateIndex(index, options);\n    const option = options[validIndex];\n    const optionValue = this.getOptionValue(option);\n    if (selectedOption !== optionValue && option.disabled !== true) {\n      this.handleOptionSelect(optionValue, validIndex, scrolling);\n    }\n    // TO-DO: if date disabled, add nextValidOption selection\n  }\n\n  handleStepMoveUp() {\n    const { activeIndex } = this.state;\n    const { arrowStep, options } = this.props;\n    const supposedPos = activeIndex - arrowStep;\n    const nextPos = supposedPos >= 0 ? supposedPos : activeIndex - 1;\n\n    const nextValidOption = options.find((op) => !op.disabled);\n    this.moveTo(nextPos, true, nextValidOption);\n  }\n\n  handleStepMoveDown() {\n    const { activeIndex } = this.state;\n    const { arrowStep, options } = this.props;\n    const supposedPos = activeIndex + arrowStep;\n    const nextPos =\n      supposedPos <= options.length ? supposedPos : activeIndex + 1;\n    this.moveTo(nextPos);\n  }\n\n  renderHeader = () => {\n    const { header } = this.props;\n\n    return <PickerHeader>{header}</PickerHeader>;\n  };\n\n  render() {\n    const {\n      options,\n      hasHeader,\n      type,\n      time,\n      meridiem,\n      disabledTimes,\n    } = this.props;\n    const { selectedOption, activeIndex, scrolling } = this.state;\n\n    const listYPosition = this.computeContainerTranslation(activeIndex);\n\n    return (\n      <Wrapper>\n        {hasHeader && this.renderHeader()}\n        <Container\n          classProps={{ scrolling }}\n          onKeyDown={this.handleKeyDown}\n          tabIndex={0}\n        >\n          <PickerSelectedOptionSelected innerRef={this.selectedOptionRef}>\n            <SelectedCircle />\n          </PickerSelectedOptionSelected>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Up\"\n              data-testid={`${type}-chevron-up`}\n              disabled={activeIndex <= 0}\n              icon={<ChevronSmallUp />}\n              onClick={this.handleStepMoveUp}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n          <PickerItemListContainer\n            innerRef={this.pickerListContainerRef}\n            style={{\n              height: this.listHeight,\n            }}\n          >\n            <PickerItemList\n              data-testid={`${type}-list`}\n              innerRef={this.pickerListRef}\n              style={{\n                transform: `translateY(${listYPosition}px)`,\n              }}\n            >\n              {options.map((option, index) => {\n                const value = this.getOptionValue(option);\n                const label = this.getOptionLabel(option);\n                let valueFormatted;\n                if (meridiem === 'AM') valueFormatted = value;\n                else if (meridiem === 'PM' && value === 12)\n                  valueFormatted = value;\n                else if (meridiem === 'PM') valueFormatted = value + 12;\n\n                let disabled = false;\n                if (disabledTimes) {\n                  const { from, to } = disabledTimes;\n                  if (\n                    (type === 'hour' &&\n                      valueFormatted >= from?.hour &&\n                      valueFormatted < to?.hour) ||\n                    (type === 'minutes' &&\n                      value >= from?.min &&\n                      value < to?.min)\n                  ) {\n                    disabled = true;\n                  }\n                  if (\n                    type === 'minutes' &&\n                    (time?.hour() > to?.hour || time?.hour() < from?.hour)\n                  ) {\n                    disabled = false;\n                  }\n                  if (label === 'am' && from?.hour == 0 && to?.hour >= 12) {\n                    disabled = true;\n                  }\n                  if (label === 'pm' && to?.hour == 24) {\n                    disabled = true;\n                  }\n                }\n\n                option.disabled = disabled;\n\n                return (\n                  <PickerItemContainer\n                    key={value}\n                    classProps={{\n                      selected: selectedOption\n                        ? value === selectedOption\n                        : index === 0,\n                      disabled,\n                    }}\n                    innerRef={this.pickerItemRef}\n                    onClick={() => {\n                      if (!disabled) this.handleOptionSelect(value, index);\n                    }}\n                  >\n                    {label}\n                  </PickerItemContainer>\n                );\n              })}\n            </PickerItemList>\n          </PickerItemListContainer>\n          <ArrowButtonContainer>\n            <DSButton\n              {...arrowProps}\n              aria-label=\"Chevron Down\"\n              data-testid={`${type}-chevron-down`}\n              disabled={activeIndex >= options.length - 1}\n              icon={<ChevronSmallDown />}\n              onClick={this.handleStepMoveDown}\n              tabIndex={-1}\n            />\n          </ArrowButtonContainer>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nPickerPanel.defaultProps = {\n  valueProperty: 'value',\n  labelProperty: 'label',\n  numberItemsOnScreen: 5, // this number should be impair\n  options: [],\n  arrowStep: 1,\n};\n","/* eslint-disable complexity */\n/* eslint-disable max-lines */\n/* eslint-disable react/prop-types */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { range } from '@elliemae/ds-utilities/utils';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport moment from 'moment';\nimport { addLeadingZeros } from '@elliemae/ds-utilities/timeUtils';\nimport { isAM } from './utils';\nimport PickerPanel from './PickerPanel';\n\nconst blockName = 'time-picker-menu';\n\nconst TimePickerContainer = aggregatedClasses('div')(blockName);\nconst TimePickerHeader = aggregatedClasses('div')(blockName, 'header');\nconst TimePickerPanelContainer = aggregatedClasses('div')(\n  blockName,\n  'panel-container',\n);\n\nconst generateOption = (format) => (option) => ({\n  value: option,\n  label: typeof format === 'function' ? format(option) : option,\n});\n\nclass TimePickerMenu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: moment(props.time || '', props.format) || moment(),\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.time) {\n      return { ...state, time: moment(props.time) };\n    }\n    return { ...state, time: undefined };\n  }\n\n  componentDidMount() {\n    const { time } = this.state;\n    this.setState({ time });\n  }\n\n  handleMinuteChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.minute(value));\n  }\n\n  handleHoursChange(value) {\n    const { time } = this.state;\n    const { use12Hours } = this.props;\n    let nextHour = value;\n    if (use12Hours) {\n      if (!isAM(time)) {\n        nextHour = (value % 12) + 12;\n      }\n    }\n    this.updateTime(time.hour(nextHour));\n  }\n\n  handleSecondsChange(value) {\n    const { time } = this.state;\n    this.updateTime(time.second(value));\n  }\n\n  handleAMPMChange(value) {\n    const { time } = this.state;\n    const hour = time.hour();\n    const nextHour =\n      value.toLowerCase() === 'am' ? hour % 12 : (hour % 12) + 12;\n    this.updateTime(time.hour(nextHour));\n  }\n\n  updateTime(time) {\n    const { onTimeChange } = this.props;\n    onTimeChange(time);\n    this.setState({ time });\n  }\n\n  renderHoursPanel() {\n    const { time } = this.state;\n    const {\n      showHours,\n      use12Hours,\n      format,\n      hasHeader,\n      disabledTimes,\n    } = this.props;\n    if (!showHours) return null;\n\n    const hour = time.hour(); // in 24 format\n    let selectedHour = use12Hours ? hour % 12 || 12 : hour;\n    if (disabledTimes) {\n      const { from, to } = disabledTimes;\n      if (hour > from.hour && hour < to.hour) {\n        if (to.hour < 24) {\n          const toFormatted = to.hour % 12 || 12;\n          if (selectedHour !== toFormatted) this.handleHoursChange(toFormatted);\n          selectedHour = toFormatted;\n        } else if (from) {\n          selectedHour = (from.hour - 1) % 12 || 12;\n        }\n      }\n    }\n\n    const meridiem = hour >= 12 ? 'PM' : 'AM';\n    const withLeadingZeros = format.indexOf('hh') > -1;\n    const rangeHours = use12Hours ? range(1, 13) : range(24);\n    const hoursOptions = rangeHours.map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        type=\"hour\"\n        time={time}\n        meridiem={meridiem}\n        hasHeader={hasHeader}\n        header=\"H\"\n        onChange={this.handleHoursChange}\n        options={hoursOptions}\n        selected={selectedHour}\n        disabledTimes={disabledTimes}\n      />\n    );\n  }\n\n  renderMinutesPanel() {\n    const { time } = this.state;\n    const {\n      showMinutes,\n      format,\n      hasHeader,\n      disabledTimes,\n      minutesInterval,\n    } = this.props;\n    if (!showMinutes) return null;\n    const withLeadingZeros = format.indexOf('mm') > -1;\n    const rangeMinutes = range(0, 60, minutesInterval).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n\n    let selectedMinute = time.minute();\n    const selectedHour = time.hour();\n\n    if (disabledTimes) {\n      const { from, to } = disabledTimes;\n      if (selectedHour <= to.hour && selectedHour > from.hour) {\n        if (to) {\n          if (selectedMinute < to.min) this.handleMinuteChange(to.min);\n        } else if (from) {\n          if (selectedMinute > from.min) this.handleMinuteChange(from.min - 1);\n        }\n      } else {\n        selectedMinute = time.minute();\n      }\n    }\n\n    return (\n      <PickerPanel\n        type=\"minutes\"\n        time={time}\n        hasHeader={hasHeader}\n        header=\"M\"\n        onChange={this.handleMinuteChange}\n        options={rangeMinutes}\n        selected={selectedMinute}\n        disabledTimes={disabledTimes}\n      />\n    );\n  }\n\n  renderSecondsPanel() {\n    const { time } = this.state;\n    const { showSeconds, format, hasHeader } = this.props;\n    if (!showSeconds) return null;\n    const withLeadingZeros = format.indexOf('ss') > -1;\n    const rangeSeconds = range(60).map(\n      generateOption(withLeadingZeros && addLeadingZeros(2)),\n    );\n    return (\n      <PickerPanel\n        type=\"seconds\"\n        hasHeader={hasHeader}\n        header=\"S\"\n        onChange={this.handleSecondsChange}\n        options={rangeSeconds}\n        selected={time.second()}\n      />\n    );\n  }\n\n  renderAMPMPanel() {\n    const { time } = this.state;\n    const { use12Hours, hasHeader, disabledTimes } = this.props;\n    if (!use12Hours) return null;\n\n    let meridiemSelected = !isAM(time) ? 'pm' : 'am';\n    if (disabledTimes && disabledTimes.to && meridiemSelected === 'am') {\n      meridiemSelected = disabledTimes.to.hour >= 12 ? 'pm' : 'am';\n      if (meridiemSelected === 'am' && time.hour() > 12) {\n        this.handleAMPMChange('am');\n      }\n\n      if (meridiemSelected === 'pm' && time.hour() <= 12) {\n        this.handleAMPMChange('pm');\n      }\n    }\n\n    return (\n      <PickerPanel\n        type=\"meridiem\"\n        hasHeader={hasHeader}\n        header=\"\"\n        onChange={this.handleAMPMChange}\n        options={[\n          { value: 'am', label: 'am' },\n          { value: 'pm', label: 'pm' },\n        ]}\n        selected={meridiemSelected}\n        disabledTimes={disabledTimes}\n      />\n    );\n  }\n\n  renderHeader = () => {\n    const { time } = this.state;\n    return <TimePickerHeader>{time.format('hh:mma')}</TimePickerHeader>;\n  };\n\n  render() {\n    const { hasHeaderDisplay } = this.props;\n\n    return (\n      <TimePickerContainer>\n        {hasHeaderDisplay && this.renderHeader()}\n        <TimePickerPanelContainer>\n          {this.renderHoursPanel()}\n          {this.renderMinutesPanel()}\n          {this.renderSecondsPanel()}\n          {this.renderAMPMPanel()}\n        </TimePickerPanelContainer>\n      </TimePickerContainer>\n    );\n  }\n}\n\nTimePickerMenu.defaultProps = {\n  time: moment(),\n  hasHeader: false,\n  use12Hours: true,\n  showSeconds: true,\n  showMinutes: true,\n  showHours: true,\n  disabledTimes: undefined,\n  onTimeChange: () => null,\n};\n\nTimePickerMenu.propTypes = {\n  /** Time value */\n  time: PropTypes.instanceOf(moment),\n  /** If the menu has header or not */\n  hasHeader: PropTypes.bool,\n  /** Whether to use the 12 hours format */\n  use12Hours: PropTypes.bool,\n  /** Whether show 'seconds' or not */\n  showSeconds: PropTypes.bool,\n  /** Whether show 'minutes' or not */\n  showMinutes: PropTypes.bool,\n  /** Whether show 'hours' or not */\n  showHours: PropTypes.bool,\n  /** Handler when time changes */\n  onTimeChange: PropTypes.func,\n  disabledTimes: PropTypes.object,\n};\n\nexport { TimePickerMenu };\nexport default TimePickerMenu;\n","/* eslint-disable indent */\n/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/* eslint-disable no-empty-pattern */\n/* eslint-disable import/no-unresolved */\n/* eslint-disable max-lines */\n/* eslint-disable react/prop-types */\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\nimport moment from 'moment';\nimport { noop } from 'lodash';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport {\n  DSDatePickerController,\n  DatePickerDropdown,\n} from '@elliemae/ds-date-picker';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSInputGroup from '@elliemae/ds-basic/form/InputGroup';\nimport DSInput from '@elliemae/ds-basic/form/Input';\nimport { DateInputsV2Impl } from '@elliemae/ds-basic/form/DateInputV2';\nimport { TimeInputImpl } from '@elliemae/ds-basic/form/TimeInput';\nimport { getVisibleTimeByFormat } from '@elliemae/ds-utilities/timeUtils';\nimport { Menu, convertTimeString } from '@elliemae/ds-basic/TimePicker';\nimport { updateDateAndTime } from '../utils';\n\nconst blockName = 'date-time-picker';\n\nconst DateTimePickerWrapper = aggregatedClasses('div')(blockName, 'wrapper');\nconst TimePicker = aggregatedClasses(Menu)(blockName, 'time-picker');\nconst TimePickerWrapper = aggregatedClasses('div')(\n  blockName,\n  'time-picker-wrapper',\n);\n// const DateInput = aggregatedClasses(DateInputsV2Impl)(blockName, 'date-input');\nconst formatDate = 'MMDDYYYY';\n\nconst DSDateTimePickerImpl = ({\n  onBlur = () => null,\n  placeholder,\n  date,\n  clearable,\n  datePickerProps: {\n    disabled = false,\n    numberOfMonths = 1,\n    readOnly = false,\n    enableOutsideDays = false,\n    transitionDuration = 0,\n    firstDayOfWeek = 0,\n    keepOpenOnDateSelect = true,\n    hideKeyboardShortcutsPanel = true,\n    onPrevMonthClick = () => null,\n    onNextMonthClick = () => null,\n    onClose = () => null,\n    onDateChange = () => null,\n    onError: onErrorDate = () => null,\n    phrases = SingleDatePickerPhrases,\n    displayFormatDay = 'D',\n    isDayBlocked = () => false,\n    isOutsideRange = () => false,\n    isDayHighlighted = () => false,\n    zIndex = 11,\n  },\n  timePickerProps: {\n    format = 'hh:mm A',\n    onChange: onChangeTimePicker = () => null,\n    disabledTimes = undefined,\n    onError: onErrorTime = () => null,\n    minutesInterval = 1,\n  },\n  dateInputProps: { onDateInputDateChange = () => null },\n}) => {\n  const [selectedDate, setSelectedDate] = useState(undefined);\n  const [incompleteInput, setIncompleteInput] = useState(undefined);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const disabledTimeRange = disabledTimes && {\n    from: convertTimeString(disabledTimes.from),\n    to: convertTimeString(disabledTimes.to),\n  };\n\n  const dateTimePickerWrapperRef = useRef();\n  const fullFormat = `${formatDate} ${format}`;\n\n  useEffect(() => {\n    if (date) {\n      setSelectedDate(moment(date));\n    } else if (date === null) setSelectedDate(undefined);\n  }, [date]);\n\n  const visiblePanels = useMemo(() => getVisibleTimeByFormat(format), []);\n\n  const currentYear = moment().year();\n\n  const handleDatePickerChange = (dateSelected) => {\n    const splittedDate = updateDateAndTime(dateSelected, selectedDate);\n    if (!readOnly) {\n      setSelectedDate(splittedDate);\n      onDateChange(splittedDate);\n    }\n  };\n\n  const onTimeChange = (pickerTime) => {\n    const splittedDate = updateDateAndTime(selectedDate, pickerTime);\n    onChangeTimePicker(splittedDate);\n    setSelectedDate(splittedDate);\n  };\n\n  const handleInputChange = (inputValue, type) => {\n    let timeBlocked = false;\n    const inputMoment = moment(inputValue, fullFormat);\n    setIncompleteInput(inputValue);\n    if (type === 'date') {\n      const splittedDate = updateDateAndTime(inputMoment, selectedDate);\n      if (inputValue.length < 8) {\n        onErrorDate({ message: 'date incomplete', inputValue });\n        if (clearable) onDateChange('error');\n        return;\n      }\n      if (inputValue.length === 8 && inputMoment.isValid()) {\n        setSelectedDate(splittedDate);\n        onChangeTimePicker(splittedDate);\n      }\n      onDateChange(splittedDate);\n      return;\n    }\n\n    if (disabledTimeRange) {\n      const hour = inputValue.hour();\n      const min = inputValue.minutes();\n      const { from, to } = disabledTimeRange;\n\n      if (\n        (hour > from.hour && hour < to.hour) ||\n        (hour === to.hour && min < to.min)\n      ) {\n        timeBlocked = true;\n      }\n    }\n    if (timeBlocked) onErrorTime({ message: 'time blocked', inputValue });\n    const dateBlocked = isDayBlocked(inputMoment);\n    if (dateBlocked) onErrorDate({ message: 'date blocked', inputValue });\n    if (!timeBlocked && !dateBlocked) {\n      onDateChange(inputValue);\n    }\n  };\n\n  const handleOutsideClick = (event) => {\n    if (!dateTimePickerWrapperRef.current.contains(event.target)) {\n      setIsOpen(false);\n    }\n  };\n\n  const handleClickEscape = () => setIsOpen(false);\n  const handleOpen = () => setIsOpen(true);\n\n  const handleContainerBlur = (event) => {\n    if (!isOpen && !event.currentTarget.contains(event.relatedTarget)) {\n      onBlur(\n        event,\n        selectedDate?.isValid()\n          ? selectedDate\n          : {\n              error: true,\n              message: 'incomplete input',\n              input: incompleteInput,\n            },\n      );\n      if (clearable && !selectedDate && !!incompleteInput) {\n        const inputMoment = moment(incompleteInput, fullFormat);\n        const splittedDate = updateDateAndTime(inputMoment, selectedDate);\n\n        setSelectedDate(splittedDate);\n        onDateChange(splittedDate);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!isOpen)\n      onBlur(\n        {},\n        selectedDate?.isValid()\n          ? selectedDate\n          : {\n              error: true,\n              message: 'incomplete input',\n              input: incompleteInput,\n            },\n      );\n  }, [isOpen]);\n\n  const hasSelectedDate = !!selectedDate;\n  return (\n    <DSInputGroup\n      containerProps={{\n        onBlur: handleContainerBlur,\n      }}\n      rightAddon={\n        <DatePickerDropdown\n          disabled={disabled}\n          isOpen={isOpen}\n          zIndex={zIndex}\n          menu={\n            <DateTimePickerWrapper\n              ref={dateTimePickerWrapperRef}\n              data-testid=\"date-time-picker\"\n            >\n              <div\n                className={\n                  hasSelectedDate\n                    ? 'has-selected-date'\n                    : 'without-selected-date'\n                }\n                data-testid=\"date-time-picker-portal-wrapper\"\n              >\n                <DSDatePickerController\n                  date={selectedDate}\n                  displayFormatDay={displayFormatDay}\n                  enableOutsideDays={enableOutsideDays}\n                  firstDayOfWeek={firstDayOfWeek}\n                  hideKeyboardShortcutsPanel={hideKeyboardShortcutsPanel}\n                  isDayBlocked={isDayBlocked}\n                  isDayHighlighted={isDayHighlighted}\n                  isOutsideRange={isOutsideRange}\n                  keepOpenOnDateSelect={keepOpenOnDateSelect}\n                  numberOfMonths={numberOfMonths}\n                  onClickEscape={handleClickEscape}\n                  onClose={onClose}\n                  onDateChange={handleDatePickerChange}\n                  onFocusChange={noop}\n                  onNextMonthClick={onNextMonthClick}\n                  onOutsideClick={(event) => handleOutsideClick(event)}\n                  onPrevMonthClick={onPrevMonthClick}\n                  phrases={phrases}\n                  transitionDuration={transitionDuration}\n                />\n              </div>\n              <TimePickerWrapper>\n                <TimePicker\n                  disabled={disabled}\n                  disabledTimes={disabledTimeRange}\n                  format={format}\n                  hasHeader\n                  hasHeaderDisplay\n                  onTimeChange={onTimeChange}\n                  showSeconds={false}\n                  minutesInterval={minutesInterval}\n                  time={selectedDate}\n                  {...visiblePanels}\n                />\n              </TimePickerWrapper>\n            </DateTimePickerWrapper>\n          }\n          onClick={handleOpen}\n          readOnly={readOnly}\n        />\n      }\n    >\n      <DSInput\n        customInputType={({ onChange: handleChange, ...restInputProps }) => (\n          <>\n            <div style={{ display: 'flex' }}>\n              <DateInputsV2Impl\n                disabled={disabled}\n                onChange={(input) => handleChange(input, 'date')}\n                {...restInputProps}\n                onDateChange={onDateInputDateChange}\n                yearMaxRange={currentYear + 100}\n                yearMinRange={currentYear - 100}\n                time={\n                  restInputProps.value &&\n                  restInputProps.value.hour &&\n                  restInputProps.value.isValid()\n                    ? restInputProps.value.format(formatDate)\n                    : restInputProps.value\n                }\n              />\n            </div>\n            <TimeInputImpl\n              disabled={disabled}\n              format={format}\n              onChange={(time) => handleChange(time, 'time')}\n              {...restInputProps}\n            />\n          </>\n        )}\n        isShowElipsisActive={false}\n        disabled={disabled}\n        onChange={handleInputChange}\n        placeholder={placeholder}\n        value={selectedDate}\n      />\n    </DSInputGroup>\n  );\n};\n\nexport default DSDateTimePickerImpl;\n","export default {\n  placeholder: 'Select date and time',\n  className: '',\n  id: '',\n};\n","/* eslint-disable max-lines */\nimport React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport moment from 'moment';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport { SingleDatePickerPhrases } from 'react-dates';\nimport DSDateTimePickerImpl from './components/DateTimePickerImpl';\nimport english from './lang/english';\n\nconst {\n  placeholder: placeholderDefault,\n  className: classNameDefault,\n  id: idDefault,\n} = english;\n\nconst DSDateTimePicker = ({\n  containerProps = {},\n  className = classNameDefault,\n  id = idDefault,\n  placeholder = placeholderDefault,\n  date,\n  clearable = false,\n  onBlur = () => null,\n  datePickerProps = {\n    disabled: false,\n    numberOfMonths: 1,\n    readOnly: false,\n    enableOutsideDays: false,\n    transitionDuration: 0,\n    firstDayOfWeek: 0,\n    keepOpenOnDateSelect: true,\n    hideKeyboardShortcutsPanel: true,\n    onPrevMonthClick: () => null,\n    onNextMonthClick: () => null,\n    onClose: () => null,\n    onDateChange: () => null,\n    phrases: SingleDatePickerPhrases,\n    displayFormatDay: 'D',\n    isDayBlocked: () => false,\n    isOutsideRange: () => false,\n    isDayHighlighted: () => false,\n    zIndex: 11,\n  },\n  timePickerProps = {\n    format: 'hh:mm A',\n    onChange: () => null,\n    disabledTimes: undefined,\n    minutesInterval: 1,\n  },\n  dateInputProps = {\n    onDateInputDateChange: () => null,\n  },\n}) => {\n  const { cssClassName } = convertPropToCssClassName(\n    'datetimepicker',\n    className,\n    {\n      id,\n    },\n  );\n  return (\n    <div className={cssClassName} {...containerProps}>\n      <DSDateTimePickerImpl\n        clearable={clearable}\n        date={date}\n        datePickerProps={datePickerProps}\n        onBlur={onBlur}\n        placeholder={placeholder}\n        timePickerProps={timePickerProps}\n        dateInputProps={dateInputProps}\n      />\n    </div>\n  );\n};\n\nconst dateTimePickerProps = {\n  containerProps: PropTypes.object.description(\n    'Set of Properties attached to the main container',\n  ),\n  className: PropTypes.string.description('html class attribute'),\n  id: PropTypes.string.description('components id'),\n  /**\n   * on blur callback\n   */\n  onBlur: PropTypes.func.description('on blur callback'),\n  /**\n   * Initial date, by default current date\n   */\n  date: PropTypes.instanceOf(Date, moment).description(\n    'Initial date, by default current date',\n  ),\n  /**\n   * Flag to trigger onDateChange on error\n   */\n  clearable: PropTypes.bool.description(\n    'Flag to trigger onDateChange on error',\n  ),\n  /**\n   * DatePicker properties\n   */\n  datePickerProps: PropTypes.shape({\n    disabled: PropTypes.bool,\n    numberOfMonths: PropTypes.number,\n    readOnly: PropTypes.bool,\n    enableOutsideDays: PropTypes.bool,\n    transitionDuration: PropTypes.number,\n    firstDayOfWeek: PropTypes.number,\n    keepOpenOnDateSelect: PropTypes.bool,\n    hideKeyboardShortcutsPanel: PropTypes.bool,\n    onPrevMonthClick: PropTypes.func,\n    onNextMonthClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onDateChange: PropTypes.func,\n    phrases: PropTypes.shape({\n      calendarLabel: PropTypes.string,\n      closeDatePicker: PropTypes.string,\n      clearDates: PropTypes.string,\n      focusStartDate: PropTypes.string,\n      jumpToPrevMonth: PropTypes.string,\n      jumpToNextMonth: PropTypes.string,\n      keyboardShortcuts: PropTypes.string,\n      showKeyboardShortcutsPanel: PropTypes.string,\n      hideKeyboardShortcutsPanel: PropTypes.string,\n      openThisPanel: PropTypes.string,\n      enterKey: PropTypes.string,\n      leftArrowRightArrow: PropTypes.string,\n      upArrowDownArrow: PropTypes.string,\n      pageUpPageDown: PropTypes.string,\n      homeEnd: PropTypes.string,\n      escape: PropTypes.string,\n      questionMark: PropTypes.string,\n      selectFocusedDate: PropTypes.string,\n      moveFocusByOneDay: PropTypes.string,\n      moveFocusByOneWeek: PropTypes.string,\n      moveFocusByOneMonth: PropTypes.string,\n      moveFocustoStartAndEndOfWeek: PropTypes.string,\n      returnFocusToInput: PropTypes.string,\n      keyboardNavigationInstructions: PropTypes.string,\n      chooseAvailableStartDate: PropTypes.func,\n      chooseAvailableEndDate: PropTypes.func,\n      dateIsUnavailable: PropTypes.func,\n      dateIsSelected: PropTypes.func,\n      /**\n       * ZIndex for the picker popup\n       */\n      zIndex: PropTypes.number,\n    }),\n    displayFormatDay: PropTypes.string,\n    isDayBlocked: PropTypes.func,\n    isOutsideRange: PropTypes.func,\n    isDayHighlighted: PropTypes.func,\n  }).description('DatePicker properties'),\n  /**\n   * Input placeholder\n   */\n  placeholder: PropTypes.string.description('Input placeholder'),\n  /**\n   * TimePicker properties\n   */\n  timePickerProps: PropTypes.shape({\n    format: PropTypes.string,\n    onChange: PropTypes.func,\n  }).description('TimePicker properties'),\n  dateInputProps: PropTypes.shape({\n    onDateInputDateChange: PropTypes.func,\n  }).description('DateInputProperties'),\n};\n\nDSDateTimePicker.propTypes = dateTimePickerProps;\nconst DateTimePickerWithSchema = describe(DSDateTimePicker);\nDateTimePickerWithSchema.propTypes = dateTimePickerProps;\n\nexport { DateTimePickerWithSchema };\nexport default DSDateTimePicker;\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GroupContext } from './GroupContext';\n\nconst getValueItem = (e) => {\n  const { target, currentTarget } = e;\n  if (target) {\n    const { value } = target;\n    return value;\n  }\n  if (currentTarget) {\n    const { value } = currentTarget;\n    return value;\n  }\n  return e;\n};\n\nconst toggleItemValue = (array, e) => {\n  const newvalue = getValueItem(e);\n  const res = array;\n  const index = array.indexOf(newvalue);\n\n  if (index === -1) {\n    res.push(newvalue);\n  } else {\n    res.splice(index, 1);\n  }\n\n  return res;\n};\n\nconst { Provider } = GroupContext;\n/** deprecated use CheckableGroup instead */\nclass Group extends Component {\n  constructor(props) {\n    super(props);\n    const { activeValue, disabled } = props;\n    this.state = {\n      activeValue,\n      disabled,\n      prevValue: null,\n      onChange: this.handleChange.bind(this),\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, { prevValue }) {\n    if (nextProps.activeValue === prevValue) return null;\n    return {\n      activeValue: nextProps.activeValue,\n      prevValue: nextProps.activeValue,\n    };\n  }\n\n  handleChange(e, ...rest) {\n    const { multiple, onChange } = this.props;\n    const { activeValue } = this.state;\n    const value = getValueItem(e);\n    let newValue;\n    if (multiple) {\n      newValue = toggleItemValue(activeValue || [], value);\n    } else if (activeValue !== value) {\n      // default behaviour it will be toggle the active value\n      newValue = value;\n    }\n\n    this.setState({\n      activeValue: newValue,\n    });\n\n    if (onChange) onChange(newValue, ...rest);\n  }\n\n  render() {\n    const { children } = this.props;\n    return <Provider value={this.state}>{children}</Provider>;\n  }\n}\n\nGroup.defaultProps = {\n  multiple: false,\n};\n\nGroup.propTypes = {\n  children: PropTypes.array,\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  activeValue: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  disabled: PropTypes.bool,\n};\n\nexport default Group;\n","import React from 'react';\n\nexport const GroupContext = React.createContext();\n","import { PropTypes } from 'react-desc';\n\nexport const textProps = {\n  containerProps: PropTypes.object.description(\n    'Set of Properties attached to the main container',\n  ),\n  className: PropTypes.string.description('css class'),\n  style: PropTypes.object.description('css style'),\n  text: PropTypes.string.description('Text to display').isRequired,\n  maxCharacters: PropTypes.number.description(\n    'Maximum amount of charachters allowed',\n  ),\n  maxWidth: PropTypes.string.description('Maximum width allowed'),\n  textEllipsis: PropTypes.bool.description('Whether to show ellipsis or not'),\n  textAlignment: PropTypes.oneOf(['left', 'center', 'right']).description(\n    'Text alignement',\n  ),\n  wordBreak: PropTypes.bool.description('Whether to break the line or not'),\n};\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { describe } from 'react-desc';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\nimport { textProps } from './props';\nimport { defaultProps } from './defaultProps';\n\n/**\n * if we don't care about word break\n * const regx = new RegExp(`.{1,${maxCharacters}}`, 'g')\n * text.match(regx)\n *\n * @param {*} param0\n */\nconst DSTextWrapper = ({\n  containerProps,\n  className,\n  style,\n  text,\n  maxCharacters,\n  maxWidth,\n  textEllipsis,\n  textAlignment,\n  wordBreak,\n}) => {\n  const { cssClassName, classNameElement } = convertPropToCssClassName(\n    'text-wrapperRef',\n    className,\n    {\n      textEllipsis,\n      textAlignment,\n      wordBreak,\n    },\n  );\n  const limitPerCharacter = () =>\n    text.split(' ').reduce(\n      (result, word) => {\n        let resultIndex = result.length - 1;\n        if (result[resultIndex].length + word.length > maxCharacters)\n          resultIndex += 1;\n        result[resultIndex] = `${result[resultIndex] || ''} ${word}`;\n        return result;\n      },\n      [''],\n    );\n\n  let displayText = text;\n\n  if (textEllipsis)\n    displayText =\n      maxCharacters > 0 ? displayText.substring(0, maxCharacters) : displayText;\n  else if (maxCharacters > 0) {\n    displayText = limitPerCharacter().map((textpart, index) => (\n      <span key={index} className={classNameElement('line')}>\n        {textpart}\n      </span>\n    ));\n  }\n\n  return (\n    <span\n      {...containerProps}\n      className={cssClassName}\n      style={{\n        maxWidth: maxCharacters < 1 ? maxWidth : null,\n        ...style,\n      }}\n    >\n      {textEllipsis ? (\n        <span className={classNameElement('ellipsis-wrapperRef')}>\n          {displayText}\n        </span>\n      ) : (\n        displayText\n      )}\n    </span>\n  );\n};\n\nDSTextWrapper.propTypes = textProps;\nDSTextWrapper.defaultProps = defaultProps;\n\nconst TextWrapperWithSchema = describe(DSTextWrapper);\nTextWrapperWithSchema.propTypes = textProps;\n\nexport { DSTextWrapper, TextWrapperWithSchema };\nexport default DSTextWrapper;\n","export const defaultProps = {\n  containerProps: {},\n  className: '',\n  style: {},\n  text: '',\n  maxCharacters: 0,\n  maxWidth: '100%',\n  textEllipsis: false,\n  textAlignment: 'left',\n  wordBreak: true,\n};\n","/* eslint-disable prefer-template,max-statements,no-nested-ternary */\nfunction getSvgPath({\n  labelWidth = 50,\n  width = 200,\n  height = 35,\n  radiusStyle,\n  hasRightRadius = true,\n  hasLeftRadius = true,\n}) {\n  const notchWidth = labelWidth;\n  const isRtl = false;\n\n  const radius = parseFloat(radiusStyle);\n  const cornerWidth = radius + 1.3;\n  const leadingStrokeLength = 4;\n  const paddedNotchWidth = notchWidth + 8;\n\n  let extraSizeForH = 0;\n  let extraSizeForLeftV = 0;\n  let extraSizeForRightV = 0;\n  let extraSizeForTopH = radius;\n\n  if (!hasRightRadius) {\n    extraSizeForH += radius;\n    extraSizeForRightV = radius * 2;\n  }\n  if (!hasLeftRadius) {\n    extraSizeForH += radius;\n    extraSizeForLeftV = radius * 2;\n  }\n\n  if ((!hasLeftRadius && hasRightRadius) || (hasRightRadius && hasLeftRadius)) {\n    extraSizeForTopH = 0;\n  }\n\n  const pathMiddle =\n    '' +\n    (hasRightRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      : '') +\n    'v' +\n    (height - (2 * cornerWidth - (extraSizeForRightV + 1.5))) + // right vertical line\n    (hasRightRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      : '') +\n    'h' +\n    (-width + 2 * cornerWidth - extraSizeForH) +\n    (hasLeftRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      : '') +\n    'v' +\n    (-height + (2 * cornerWidth - (extraSizeForLeftV + 1.5))) + // left vertical line\n    (hasLeftRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius\n      : '');\n\n  let path;\n  if (!isRtl) {\n    path =\n      '' +\n      'M' +\n      (cornerWidth + leadingStrokeLength + paddedNotchWidth) +\n      ',' +\n      0.5 +\n      'h' +\n      (width -\n        2 * cornerWidth -\n        paddedNotchWidth -\n        leadingStrokeLength +\n        extraSizeForTopH) +\n      pathMiddle +\n      'h' +\n      leadingStrokeLength;\n  } else {\n    path =\n      '' +\n      'M' +\n      (width - cornerWidth - leadingStrokeLength) +\n      ',' +\n      0.5 +\n      'h' +\n      leadingStrokeLength +\n      pathMiddle +\n      'h' +\n      (width - 2 * cornerWidth - paddedNotchWidth - leadingStrokeLength);\n  }\n  return path;\n}\n\nexport default getSvgPath;\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport DSTextWrapper from '@elliemae/ds-text-wrapper';\nimport { ResizeObserver } from 'resize-observer';\nimport getSvgPath from './getSvgPath';\nimport RequiredMark from '../RequiredMark/RequiredMark';\n\nconst blockName = 'labeled-outline';\n\nconst Wrapper = aggregatedClasses('div')(blockName, null, ({ isOpen }) => ({\n  'has-value': isOpen,\n}));\nconst FloatingLabel = aggregatedClasses('label')(blockName, 'label');\nconst OutlineIdle = aggregatedClasses('div')(blockName, 'idle');\nconst Outline = aggregatedClasses('div')(blockName, 'outline');\nconst OutlinePath = aggregatedClasses('path')(blockName, 'outline__path');\n\nconst shouldUpdateSvgPath = ({ width, height, labelWidth }, prevSizes) => {\n  if (width !== prevSizes.width) return true;\n  if (height !== prevSizes.height) return true;\n  return labelWidth !== prevSizes.labelWidth;\n};\n\nclass FloatingLabelInputImpl extends Component {\n  resizeObserver = new ResizeObserver(() => this.updatePath());\n\n  prevSizes = {};\n\n  static defaultProps = { onChange: () => null };\n\n  constructor(props) {\n    super(props);\n    this.wrapperRef = React.createRef();\n    this.outlinePathRef = React.createRef();\n    this.outlineIdleRef = React.createRef();\n    this.labelRef = React.createRef();\n\n    this.updatePath = this.updatePath.bind(this);\n  }\n\n  componentDidMount() {\n    this.resizeObserver.observe(this.wrapperRef.current);\n  }\n\n  componentDidUpdate() {\n    if (!shouldUpdateSvgPath(this.sizes, this.prevSizes)) return;\n    this.updatePath();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver.unobserve(this.wrapperRef.current);\n  }\n\n  get sizes() {\n    const { current: labelEl } = this.labelRef;\n    const { current: wrapperEl } = this.wrapperRef;\n    const { current: outlineIdleEl } = this.outlineIdleRef;\n    const elStyles = window.getComputedStyle(outlineIdleEl);\n    const leftRadius = elStyles.getPropertyValue('border-top-left-radius');\n    const rightRadius = elStyles.getPropertyValue('border-top-right-radius');\n    const hasLeftRadius = parseFloat(leftRadius) !== 0;\n    const hasRightRadius = parseFloat(rightRadius) !== 0;\n    return {\n      labelWidth: labelEl.offsetWidth * 0.9,\n      width: wrapperEl.offsetWidth,\n      height: wrapperEl.offsetHeight,\n      radiusStyle: leftRadius,\n      hasLeftRadius,\n      hasRightRadius,\n    };\n  }\n\n  get isOpened() {\n    const { focused, isOpen, value } = this.props;\n    return (\n      focused || (Array.isArray(value) ? !!value.length : !!value) || isOpen\n    );\n  }\n\n  getValue(value) {\n    const { valueAccessor } = this.props;\n    if (valueAccessor) return valueAccessor(value);\n    // is an event\n    if (value && value.target) return value.target.value;\n\n    return value;\n  }\n\n  updatePath() {\n    const path = getSvgPath(this.sizes);\n    this.prevSizes = this.sizes;\n    this.outlinePathRef.current.setAttribute('d', path);\n  }\n\n  render() {\n    const {\n      ariaLabel,\n      hasError,\n      readOnly,\n      disabled,\n      inputComponent,\n      labelText,\n      onBlur,\n      onFocus,\n      innerRef,\n      extraInputProps,\n      required,\n      value,\n      onChange,\n      mask,\n      useSubfix,\n      optional,\n    } = this.props;\n\n    const inputProps = {\n      ariaLabel,\n      className: 'floating-label-input-controller',\n      disabled,\n      hasError,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      value,\n      innerRef,\n      mask,\n      useSubfix,\n      ...extraInputProps,\n    };\n    const InputComponent = getComponentFromProps(inputComponent, inputProps);\n    const isOpen = this.isOpened;\n\n    return (\n      <Wrapper\n        classProps={{\n          hasError,\n          isOpen,\n          readOnly,\n          disabled,\n        }}\n        innerRef={this.wrapperRef}\n        onBlur={() => null}\n        onFocus={() => null}\n        onMouseOut={this.handleMouseOut}\n        onMouseOver={this.handleMouseOver}\n      >\n        {InputComponent}\n        <FloatingLabel classProps={{ isOpen }} innerRef={this.labelRef}>\n          <DSTextWrapper maxWidth=\"100%\" text={labelText} />\n          <RequiredMark optional={optional} required={required} />\n        </FloatingLabel>\n        <Outline>\n          <svg>\n            <OutlinePath innerRef={this.outlinePathRef} />\n          </svg>\n        </Outline>\n        <OutlineIdle innerRef={this.outlineIdleRef} />\n      </Wrapper>\n    );\n  }\n}\n\nexport default FloatingLabelInputImpl;\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/no-unknown-property, jsx-a11y/label-has-for */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport DSTruncatedTooltipText from '@elliemae/ds-truncated-tooltip-text';\nimport RequiredMark from '../../RequiredMark';\n\nconst blockName = 'em-ds-label';\n\nconst Text = aggregatedClasses('span')(blockName, 'text');\n\nconst DSLabel = ({\n  children,\n  label,\n  htmlFor,\n  required,\n  optional,\n  truncateText = true,\n  isGroup = false,\n}) => {\n  const Tag = isGroup ? 'legend' : 'label';\n\n  return (\n    <Tag\n      className={`${blockName}${isGroup ? ` ${blockName}--group` : ''}`}\n      htmlFor={htmlFor}\n    >\n      {truncateText ? (\n        <DSTruncatedTooltipText value={children || label} />\n      ) : (\n        <Text>{label}</Text>\n      )}\n      <RequiredMark optional={optional} required={required} />\n    </Tag>\n  );\n};\n\nDSLabel.propTypes = {\n  children: PropTypes.string,\n  label: PropTypes.string,\n  htmlFor: PropTypes.string,\n  required: PropTypes.bool,\n  optional: PropTypes.bool,\n  truncateText: PropTypes.bool,\n  isGroup: PropTypes.bool,\n};\n\nexport default DSLabel;\n","import React from 'react';\nimport FloatingLabelInputImpl from './FloatingLabelInputImpl';\nimport DSLabel from '../FormItem/Label/DSLabel';\nimport DSTextBox from '../TextBox/DSTextBox';\n\nconst noop = () => {};\nconst DSFloatingLabelInput = ({\n  containerProps = {},\n  arialLabel = '',\n  /**\n   * Gets the reference for the input controller\n   *\n   * @param {HTMLElement} node\n   */\n  innerRef = noop,\n  /**\n   * Custom className for floatingLabelInput\n   */\n  className = '',\n  /**\n   * Props injected to the input component\n   *\n   * @type Object\n   */\n  extraInputProps = {},\n  /**\n   * Input controller\n   *\n   * @type {element}\n   */\n  inputComponent = DSTextBox,\n  /**\n   * Input value\n   *\n   * @type {string}\n   */\n  value = '',\n  /**\n   * Label component\n   *\n   * @type {element}\n   */\n  labelComponent = DSLabel,\n  /**\n   * Label text\n   *\n   * @type {string | element}\n   */\n  labelText = null,\n  /**\n   * Callback when input controller has changed\n   *\n   * @param event\n   */\n  onChange = noop,\n  onBlur = noop,\n  onFocus = noop,\n  /**\n   * Whether the label is floating or not\n   *\n   * @type {boolean}\n   */\n  isOpen = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  hasError = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  readOnly = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  disabled = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  required = false,\n  optional = false,\n  mask = null,\n  useSubfix = '',\n}) => (\n  <FloatingLabelInputImpl\n    arialLabel={arialLabel}\n    className={className}\n    disabled={disabled}\n    extraInputProps={extraInputProps}\n    hasError={hasError}\n    innerRef={innerRef}\n    inputComponent={inputComponent}\n    isOpen={isOpen}\n    labelComponent={labelComponent}\n    labelText={labelText}\n    mask={mask}\n    onBlur={onBlur}\n    onChange={onChange}\n    onFocus={onFocus}\n    optional={optional}\n    readOnly={readOnly}\n    required={required}\n    useSubfix={useSubfix}\n    value={value}\n  />\n);\n\nexport default DSFloatingLabelInput;\n","export const FORMITEM_LAYOUT_VARIANTS = {\n  DEFAULT: 'variant-default',\n  FOCUS: 'variant-focus',\n  ACTIVE: 'variant-active',\n  DISABLED: 'variant-disabled',\n  READ_ONLY: 'variant-read-only',\n  OPTIONAL: 'variant-optional',\n};\n","import { PropTypes } from 'react-desc';\nimport { FORMITEM_LAYOUT_VARIANTS } from './variants';\n\nexport const props = {\n  /** props to inject to form item layout wrapper */\n  containerProps: PropTypes.object.description(\n    'props to inject to form item layout wrapper',\n  ),\n  /** disableTooltip */\n  disableTooltip: PropTypes.bool\n    .description('Whether to show a tooltip or not when text does not fit')\n    .defaultValue(true),\n  /** position label on the left */\n  leftLabel: PropTypes.bool.description('position label on the left'),\n  /** turn on floating label */\n  floatingLabel: PropTypes.bool.description('turn on floating label'),\n  /** id for form item layout */\n  id: PropTypes.string.description('id for form item layout'),\n  /** html name prop for form tags */\n  name: PropTypes.string.description('html name prop for form tags'),\n  /** form item layout element value */\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n  ]).description('form item layout element value'),\n  /** Any input component */\n  inputComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n  ]).description('Any input component'),\n  /** isShowElipsisActive */\n  /** isShowElipsisActive */\n  isShowElipsisActive: PropTypes.bool\n    .description(\n      'Wheter to enable the ellipsis and tooltip functionality or not',\n    )\n    .defaultValue(true),\n  /** Label component  */\n  labelComponent: PropTypes.element.description('Label component'),\n  /** feedback component to embed on form item */\n  feedbackComponent: PropTypes.node.description(\n    'feedback component to embed on form item',\n  ),\n  /** label text */\n  labelText: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]).description('label text'),\n  /** error state */\n  hasError: PropTypes.bool.description('error state'),\n  /** validation state */\n  validationState: PropTypes.oneOf(['success', 'error', 'warning']).description(\n    'validation state',\n  ),\n  /** validation message */\n  validationMessage: PropTypes.string.description('validation message'),\n  /** feedback message */\n  feedbackMessage: PropTypes.string.description('feedback message'),\n  /** read only form item */\n  readOnly: PropTypes.bool.description('read only form item'),\n  /** focused state */\n  focused: PropTypes.bool.description('focused state'),\n  /** input type */\n  type: PropTypes.string.description('input type'),\n  /** auto focus input */\n  autoFocus: PropTypes.bool.description('auto focus input'),\n  /** disabled state */\n  disabled: PropTypes.bool.description('disabled state'),\n  /** on change handler */\n  onChange: PropTypes.func.description('on change handler'),\n  /** on blur handler */\n  onBlur: PropTypes.func.description('on blur handler'),\n  /** extra input props to inject */\n  extraInputProps: PropTypes.object.description('extra input props to inject'),\n  /** extra content */\n  extraContent: PropTypes.element.description('extra content'),\n  /** left addon for form item */\n  leftAddon: PropTypes.element.description('left addon for form item'),\n  /** right addon for form item */\n  rightAddon: PropTypes.element.description('right addon for form item'),\n  /** add required mark */\n  required: PropTypes.bool.description('add required mark'),\n  /** add optional mark */\n  optional: PropTypes.bool.description('add optional mark'),\n  /** on focus handler */\n  onFocus: PropTypes.func.description('on focus handler'),\n  /** on paste handler */\n  onPaste: PropTypes.func.description('on paste handler'),\n  /** add truncation and ellipsis */\n  truncateText: PropTypes.bool.description('add truncation and ellipsis'),\n  /** on key up event handler */\n  onKeyUp: PropTypes.func.description('on key up event handler'),\n  /** mask for input mask component */\n  mask: PropTypes.oneOfType([\n    // PropTypes.oneOf(maskTypes),\n    PropTypes.string,\n    PropTypes.func,\n  ]).description('mask for input mask component'),\n  /** add suffix to input */\n  useSubfix: PropTypes.string.description('add suffix to input'),\n  /** suffix for input */\n  suffix: PropTypes.string.description('suffix for input'),\n  /** form item layout type */\n  variant: PropTypes.oneOf([\n    FORMITEM_LAYOUT_VARIANTS.DEFAULT,\n    FORMITEM_LAYOUT_VARIANTS.FOCUS,\n    FORMITEM_LAYOUT_VARIANTS.ACTIVE,\n    FORMITEM_LAYOUT_VARIANTS.DISABLED,\n    FORMITEM_LAYOUT_VARIANTS.READ_ONLY,\n    FORMITEM_LAYOUT_VARIANTS.OPTIONAL,\n  ]).description('form item layout type'),\n};\n","import React from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'form-item';\n\nconst FeedbackSpan = aggregatedClasses('span')(blockName, 'feedback');\n\nconst Feedback = ({ text, hasError }) => {\n  if (!text) return null;\n  return <FeedbackSpan classProps={hasError}>{text}</FeedbackSpan>;\n};\n\nexport default Feedback;\n","import DSTextBox from '../TextBox';\nimport DSLabel from './Label/DSLabel';\nimport Feedback from './Feedback';\nimport { FORMITEM_LAYOUT_VARIANTS } from './variants';\n\nexport const defaultProps = {\n  leftLabel: false,\n  floatingLabel: false,\n  inputComponent: DSTextBox,\n  labelComponent: DSLabel,\n  feedbackComponent: Feedback,\n  hasError: false,\n  validationMessage: '',\n  feedbackMessage: '',\n  focused: false,\n  autoFocus: false,\n  disabled: false,\n  onChange: () => {},\n  onBlur: () => {},\n  onFocus: () => {},\n  onPaste: () => {},\n  onKeyUp: () => {},\n  extraInputProps: {},\n  leftAddon: null,\n  rightAddon: null,\n  required: false,\n  optional: false,\n  useSubfix: '',\n  suffix: '',\n  variant: FORMITEM_LAYOUT_VARIANTS.DEFAULT,\n  containerProps: {},\n};\n","/* eslint-disable consistent-return */\nimport styled from 'styled-components';\n\nexport const Suffix = styled.div`\n  height: 2.16rem;\n  align-items: center;\n  display: flex;\n  ${props => {\n    if (props.label && !props.withFeedback) {\n      return `\n      padding-top: 1.2rem;\n      `;\n    }\n    if (!props.label && !props.withFeedback) {\n      return `\n      padding-top: 1rem;\n      `;\n    }\n  }}\n`;\n\nexport const SuffixInputWrapper = styled.div`\n  padding-right: 0.32rem;\n  flex: 1;\n`;\nexport const SuffixWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport default Suffix;\n","/* eslint-disable complexity */\n/* eslint-disable max-lines */\nimport React from 'react';\nimport { describe } from 'react-desc';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport Group from '@elliemae/ds-shared/GroupContext/Group';\nimport DSInputGroup from '../InputGroup';\nimport DSFloatingLabelInput from '../FloatingLabelInput';\nimport DSError from './Error/DSError';\nimport { props } from './props';\nimport { defaultProps } from './defaultProps';\nimport { FORMITEM_LAYOUT_VARIANTS } from './variants';\nimport { Suffix, SuffixInputWrapper, SuffixWrapper } from './Suffix/Suffix';\n// import { maskTypes } from '../InputMask/MaskTypes';\n\nexport { DSError, FORMITEM_LAYOUT_VARIANTS };\n\nconst blockName = 'form-item';\n\nconst Wrapper = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ leftLabel, variant }) => ({\n    'with-left-label': leftLabel,\n    [variant]: variant,\n  }),\n);\nconst WrapperContent = aggregatedClasses('div')(`${blockName}-content`);\nconst WrapperContentGroup = aggregatedClasses('fieldset')(\n  `${blockName}-content`,\n);\n\nconst DSFormItemLayout = ({\n  leftLabel,\n  floatingLabel,\n  name,\n  id,\n  value,\n  inputComponent: InputComponent,\n  labelComponent: LabelComponent,\n  feedbackComponent: FeedbackComponent,\n  labelText,\n  truncateText,\n  hasError,\n  // orientation = 'vertical', // one of [ vertical, horizontal ]\n  validationState, // one of [ success, error, warning ]\n  validationMessage,\n  feedbackMessage,\n  readOnly,\n  focused,\n  type,\n  autoFocus,\n  disabled,\n  onChange,\n  onBlur,\n  onFocus,\n  onPaste,\n  onKeyUp,\n  extraInputProps,\n  extraContent,\n  leftAddon,\n  rightAddon,\n  required,\n  optional,\n  mask,\n  useSubfix,\n  suffix,\n  variant,\n  containerProps,\n  ...rest\n}) => {\n  const isGroup = InputComponent.type === (<Group />).type;\n  const floatingLabelOverride = floatingLabel === 'UNSAFE';\n  const WrapperContentComp = !isGroup ? WrapperContent : WrapperContentGroup;\n\n  // group the input props to not duplicate it inside the specific inputComponent (floating or not)\n  const inputProps = {\n    ...extraInputProps,\n    disabled,\n    hasError: hasError || validationState === 'error',\n    id,\n    name,\n    type,\n    autoFocus,\n    onBlur,\n    onChange,\n    onFocus,\n    onPaste,\n    onKeyUp,\n    readOnly,\n    value,\n    mask,\n    useSubfix,\n    variant,\n    required,\n    ...rest,\n  };\n\n  const renderInput = (Input) =>\n    leftAddon || rightAddon ? (\n      <DSInputGroup\n        leftAddon={leftAddon}\n        rightAddon={rightAddon}\n        variant={variant}\n      >\n        {Input}\n      </DSInputGroup>\n    ) : (\n      Input\n    );\n\n  const renderFloating = (\n    <DSFloatingLabelInput\n      {...inputProps}\n      extraInputProps={extraInputProps}\n      focused={focused}\n      inputComponent={InputComponent}\n      labelComponent={LabelComponent}\n      labelText={labelText}\n      optional={optional}\n      required={required}\n      variant={variant}\n    />\n  );\n\n  const InputWithLabel = floatingLabelOverride ? (\n    renderInput(renderFloating)\n  ) : (\n    <>\n      <LabelComponent\n        htmlFor={id || name}\n        label={labelText}\n        optional={optional}\n        required={required}\n        isGroup={isGroup}\n        truncateText={truncateText}\n      />\n      {renderInput(getComponentFromProps(InputComponent, inputProps))}\n    </>\n  );\n\n  if (suffix) {\n    return (\n      <Wrapper\n        classProps={{\n          disabled,\n          readOnly,\n          hasError,\n          leftLabel,\n          variant,\n        }}\n        {...containerProps}\n      >\n        <SuffixWrapper className=\"suffix-wrapper\">\n          <SuffixInputWrapper className=\"suffix-input-wrapper\">\n            <WrapperContentComp>\n              {InputWithLabel}\n              {extraContent}\n            </WrapperContentComp>\n            <FeedbackComponent\n              hasError={hasError}\n              text={\n                validationState || hasError\n                  ? validationMessage\n                  : feedbackMessage\n              }\n            />\n          </SuffixInputWrapper>\n          <Suffix\n            className=\"suffix-label\"\n            label={!!labelText}\n            withFeedback={Boolean(validationMessage || feedbackMessage)}\n          >\n            {suffix}\n          </Suffix>\n        </SuffixWrapper>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <Wrapper\n      classProps={{\n        disabled,\n        readOnly,\n        hasError,\n        leftLabel,\n        variant,\n      }}\n      {...containerProps}\n    >\n      <WrapperContentComp>\n        {InputWithLabel}\n        {extraContent}\n      </WrapperContentComp>\n      <FeedbackComponent\n        hasError={hasError}\n        text={validationState || hasError ? validationMessage : feedbackMessage}\n      />\n    </Wrapper>\n  );\n};\n\nDSFormItemLayout.propTypes = props;\nDSFormItemLayout.defaultProps = defaultProps;\nconst DSFormItemLayoutWithSchema = describe(DSFormItemLayout);\nDSFormItemLayoutWithSchema.propTypes = props;\n\nexport default DSFormItemLayout;\nexport { DSFormItemLayoutWithSchema };\n"],"sourceRoot":""}