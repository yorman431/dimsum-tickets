{"version":3,"sources":["../../../../src/Popover/usePopoverProviderState.js","../../../../src/TruncatedTooltipText/TooltipTextProvider.js","../../../../src/TruncatedTooltipText/DSTruncatedTooltipText.js","../../../../../src/form/TextBox/DSTextBox.js","../../../../../src/form/RequiredMark/RequiredMark.js","../../../../../src/form/InputGroup/AddonWrapper.js","../../src/ResizeObserver.ts","../../../../src/hooks/useExecutionTimer.js","../../../../../src/form/InputGroup/DSInputGroup.js","../../src/ContentRect.ts","../../src/ResizeObservation.ts","../../src/ResizeObserverEntry.ts","../../../../src/GroupContext/Group.js","../../../../src/GroupContext/GroupContext.js","../../../../../../src/form/FormItem/Label/DSLabel.js","../../../../src/TextWrapper/DSTextWrapper.js","../../../../../src/form/FloatingLabelInput/getSvgPath.js","../../../../../src/form/FloatingLabelInput/FloatingLabelInputImpl.js","../../../../../src/form/FloatingLabelInput/DSFloatingLabelInput.js","../../../../../src/form/FormItem/Feedback.js","../../../../../../src/form/FormItem/Suffix/Suffix.js","../../../../../src/form/FormItem/DSFormItemLayout.js"],"names":["initialState","reference","visible","value","options","delay","triggerRef","useRef","useState","tooltipState","setTooltipState","useExecutionTimer","state","prevState","showTooltip","hideTooltip","handleHideTooltip","useEffect","window","throttle","show","e","target","hide","TruncatedTooltipContext","React","Provider","TooltipTextProvider","children","tooltipDelay","placement","tooltipOptions","usePopoverProviderState","zIndex","setZIndex","useMemo","boundaries","showArrow","content","referenceEl","style","pointerEvents","Text","styled","DSTruncatedTooltipText","containerProps","otherTextProps","tooltipContext","useContext","handlers","onMouseEnter","onMouseLeave","truncatedTooltipTextProps","PropTypes","tooltipPlacement","positions","undefined","describe","TruncatedTooltipTextWithSchema","DSTextBox","autoFocus","disabled","maxLength","minLength","fluidWidth","placeholder","hasError","readOnly","innerRef","type","min","max","clearable","leftComponent","rightComponent","required","variant","otherProps","aria-label","role","props","DSTextBoxWithSchema","cssClassName","convertPropToCssClassName","optional","className","Container","aggregatedClasses","InputAddon","AddonWrapper","this","leftAddon","rightAddon","inputComponent","childType","Component","ro","startFn","cleanFn","delayTime","startTimer","closeTimer","args","clearTimeout","setTimeout","DSInputGroup","InputComponents","ref","current","any","DSInputGroupWithSchema","getValueItem","currentTarget","toggleItemValue","array","newvalue","res","index","Group","activeValue","prevValue","onChange","multiple","newValue","rest","nextProps","bool","DSLabel","label","htmlFor","truncateText","isGroup","Tag","DSTextWrapper","text","maxCharacters","maxWidth","textEllipsis","textAlignment","wordBreak","classNameElement","displayText","resultIndex","result","word","key","textWrapperProps","TextWrapperWithSchema","labelWidth","width","height","radiusStyle","hasRightRadius","hasLeftRadius","notchWidth","radius","parseFloat","cornerWidth","paddedNotchWidth","extraSizeForH","extraSizeForLeftV","extraSizeForRightV","extraSizeForTopH","Wrapper","FloatingLabel","OutlineIdle","Outline","OutlinePath","FloatingLabelInputImpl","ResizeObserver","wrapperRef","prevSizes","shouldUpdateSvgPath","labelEl","wrapperEl","outlineIdleEl","elStyles","leftRadius","rightRadius","focused","isOpen","Array","valueAccessor","path","getSvgPath","ariaLabel","labelText","onBlur","onFocus","extraInputProps","mask","useSubfix","inputProps","InputComponent","getComponentFromProps","classProps","onMouseOut","onMouseOver","handleMouseOver","labelRef","outlinePathRef","outlineIdleRef","noop","arialLabel","labelComponent","FeedbackSpan","Suffix","SuffixInputWrapper","SuffixWrapper","leftLabel","WrapperContent","WrapperContentGroup","FORMITEM_LAYOUT_VARIANTS","DSFormItemLayout","floatingLabel","name","id","LabelComponent","feedbackComponent","FeedbackComponent","Feedback","validationState","validationMessage","feedbackMessage","onPaste","onKeyUp","extraContent","suffix","floatingLabelOverride","WrapperContentComp","autofocus","renderInput","Input","renderFloating","InputWithLabel","withFeedback","Boolean","DSFormItemLayoutWithSchema"],"mappings":"stBAIA,SAAiC,GAQ9B,QAPDA,oBAOC,MAPc,CACbC,UADa,KAEbC,SAFa,EAGbC,MAHa,GAIbC,QAAS,IAGV,EADDC,EACC,EADDA,MAEMC,EAAaC,mBADlB,EAEuCC,mBAFvC,sBAEMC,EAFN,KAEoBC,EAFpB,OAmBkCC,aAftB,SAAAC,GACXF,GAAgB,SAAAG,GAAS,0BAGvBX,SAAS,UAGA,SAAAU,GACXF,GAAgB,SAAAG,GAAS,0BAGvBX,SAAS,SAfZ,sBAmBMY,EAnBN,KAmBmBC,EAnBnB,KA0BKC,EAAoB,SAAAJ,GACxBG,MAgBF,OAbAE,qBAAU,WAGR,OAFAC,iCAAkCC,mBAASH,EAA3CE,SACAA,sCACO,WACLA,oCAEEC,mBAASH,EAFXE,SAKAA,yCAED,CAACT,EAXJQ,YAaO,CACLG,KAvBwB,SAACR,EAAOS,GAChCf,UAAqBe,EAArBf,OACAQ,EAAY,EAAD,YAAab,UAAWoB,EAAEC,WAsBrCC,KAFK,EAGLX,MAAOH,K,+LCtDEe,EAA0BC,oBAE/BC,EAAaF,EAAbE,SAER,SAASC,EAAoB,GAK1B,IAJDC,EAIC,EAJDA,SAIC,IAHDC,oBAGC,MAHc,IAGd,MAFDC,iBAEC,MAFW,MAEX,EADEC,EACF,yDAKGC,YAAwB,CAAE3B,MAAOwB,IAH7Bf,EAFP,OAGOC,EAHP,OAIQN,EAJR,UAM2BD,mBAN3B,wBAMMyB,EANN,KAMcC,EANd,KAQK/B,EAAQgC,mBACZ,iBAAO,CACLrB,YADK,EAELC,YAFK,EAGLmB,eAJJ,IASA,OACE,qBAAU/B,MAAOA,GAAjB,EAEGM,EAAA,QACC,mCACE2B,WADF,SAEEN,UAFF,EAGEO,WAAS,GAHX,EAKO5B,WALP,IAME6B,QAAS7B,EANX,MAOE8B,YAAa9B,EAPf,UAQE+B,MAAO,CAAEC,cAAF,OAAyBR,UAChC/B,QAASO,EAAaP,WAb9B,MAoBFyB,eACAA,kB,6KCzCMe,EAAOC,UAAH,4CAAGA,CAAH,CAAV,mGAQMC,EAAyB,SAAC,GAK1B,QAJJC,sBAII,MAJa,GAIb,MAHJ1C,aAGI,MAHI,GAGJ,MAFJ8B,cAEI,MAFK,IAEL,EADDa,EACC,mDACEC,EAAiBC,qBAAvB,KAKA,GAJA/B,qBAAU,WACJgB,GAAJ,GAA8Bc,iBAC7B,CAFH9B,KAIA,EAAqB,OAAOd,EANxB,IAQIW,EAA6BiC,EARjC,YAQiBhC,EAAgBgC,EARjC,YA2BEE,EAAWnC,EACb,CAAEoC,aAlBmB,SAAC7B,GAAM,IA3BR,EA4BdC,EAAWD,EADW,OAE1BC,IA7BkB,EA6BSA,EAAQA,EAAvC,wBA7BqB,8BA8BnBR,EACE,CACEX,MADF,EAEEF,UAAWqB,GAHfR,IAekCqC,aALb,SAAC9B,GACxBN,EAAY,CAAEd,UAAWoB,EAAEC,WAG7B,GAGA,OACE,0CADF,IAOI8B,EAA4B,CAChCP,eAAgBQ,+BADgB,oDAIhClD,MAAOkD,sBAAoB,CAACA,YAAD,OAAmBA,YAAvCA,qBAJyB,iEAOhCC,iBAAkBD,kBAAgB,CAChCE,IADgC,WAEhCA,IAFgC,SAGhCA,IAHgC,KAIhCA,IAJgC,UAKhCA,IALgC,IAMhCA,IANgC,QAOhCA,IAPgC,YAQhCA,IARgC,MAShCA,IATgC,UAUhCA,IAVgC,aAWhCA,IAXgC,OAYhCA,IAZgC,WAahCA,IAbgC,WAchCA,IAdgC,KAehCA,IAfgBF,uBAPc,2BAwBhCxB,aAAcwB,+BAxBkB,6BAyBhCpB,OAAQoB,6EAKVT,eAAsC,CACpCC,eADoC,GAEpC1C,MAFoC,GAGpCmD,sBAHoC,EAIpCzB,kBAAc2B,GAGhBZ,cAEuCa,mBAASb,GAChDc,Y,wKChGMC,EAAY,SAAC,GAAD,uBAChBd,OADgB,yBAEhBe,OAFgB,sBAGhBC,OAHgB,uBAIhBC,OAJgB,0BAKhBC,OALgB,yBAMhBC,OANgB,SAOhBC,EAPgB,wBAQhB9D,OARgB,wBAShB+D,OATgB,sBAUhBC,OAVgB,sBAWhBC,OAXgB,sBAYhBC,OAZgB,uBAahBC,OAbgB,uBAchBC,OAdgB,6BAehBC,OAfgB,2BAgBhBC,OAhBgB,gCAiBhBC,OAjBgB,0BAkBhBC,OAlBgB,SAmBhBC,EAnBgB,UAoBbC,EApBa,iPAsBhB,wCAEEC,aAAYD,iBAFd,WAGEjB,UAHF,EAIEY,UAJF,EAKE3B,eALF,EAMEgB,SANF,EAOEG,WAPF,EAQEE,SARF,EASEE,SATF,EAUEK,cAVF,EAWEF,IAXF,EAYET,UAZF,EAaEQ,IAbF,EAcEP,UAdF,EAeEE,YAfF,EAgBEE,SAhBF,EAiBEQ,SAjBF,EAkBED,eAlBF,EAmBEK,KAnBF,UAoBEV,KApBF,EAqBElE,MArBF,EAsBEyE,QAASA,MAIPI,EAAQ,CAEZnC,eAAgBQ,kCAFJ,mCAQZO,UAAWP,6BARC,+CAcZQ,SAAUR,6BAdE,2CAoBZS,UAAWT,+BApBC,+BAwBZU,UAAWV,+BAxBC,+BA4BZW,WAAYX,6BA5BA,6DAkCZY,YAAaZ,+BAlCD,gCAsCZlD,MAAOkD,+BAtCK,mDA4CZa,SAAUb,6BA5CE,yCAgDZc,SAAUd,6BAhDE,4CAoDZiB,IAAKjB,+BApDO,2BAsDZkB,IAAKlB,+BAtDO,2BA0DZmB,UAAWnB,6BA1DC,4CAgEZoB,cAAepB,gCAhEH,0DAsEZqB,eAAgBrB,gCAtEJ,2DA4EZsB,SAAUtB,6BA5EE,2CAuFZuB,QAASvB,+BAvFG,wEA2FZgB,KAAMhB,+BA3FM,mBA6FZe,SAAUf,sBAAoB,CAACA,YAAD,KAAiBA,YAArCA,sCAKZM,cAE4BF,mBAASE,GAErCsB,Y,oECvJQC,EAAiBC,YAA0B,sBAA3CD,a,IACa,SAAC,GAA2C,QAAzCP,gBAAyC,aAAvBS,SACxC,OAAKT,QAD0D,SAE/D,EACS,0BAAMU,UAAS,cAAtB,UAEK,0BAAMA,UAAS,+BAAtB,UAJmC,O,6jBCFrC,IAEMC,EAAYC,mBAFlB,qBAGMC,EAAaD,oBAHnB,oBAGA,SAEqBE,c,wNAGX,I,4CAER,WAAS,MAOHC,KAPG,MAELC,EAFK,YAGLC,EAHK,aAIKC,EAJL,WAKLR,EALK,YAMLxC,EANK,iBAQDiD,EACJD,GAAkBA,EAAlBA,MAAyCA,OAAzCA,KACIA,YADJA,cADF,UAIA,OACE,iCACER,UAAS,wBAxBjB,oBAwBiB,iBADX,GAIGM,GAAa,yBAJhB,KAMGC,GAAc,yBAPnB,Q,EAjBiBH,CAAqBM,a,YAArBN,iBACG,I,yFCTxB,aAEI,EAAJ,OAEM,EAAkB,GAExB,aAUM,SAAF,EAAY,GANL,0BAAuB,GAEvB,qBAAkB,GAElB,sBAAmB,GAGtB,IAAM,EAwCd,SAAuB,GACnB,GAAyB,qBAAd,EACP,MAAO,iFAET,GAAuB,oBAAd,EACP,MAAO,gGA7CS,CAAc,GAC9B,GAAI,EACA,MAAM,UAAU,GAEpB,KAAK,WAAa,EAClB,EAAgB,KAAK,MAiC3B,OA9BS,oBAAP,SAAe,GACX,IAAM,EAAU,EAAY,UAAW,GACnC,KACA,MAAM,UAAU,GAEN,EAAgB,KAAK,qBAAsB,GAC7C,IAGZ,KAAK,qBAAqB,KAAK,IAAI,oBAAkB,IACjD,MAGD,sBAAP,SAAiB,GACT,IAAE,EAAU,EAAY,YAAa,GACzC,GAAI,EACA,MAAM,UAAU,GAEpB,IAAM,EAAQ,EAAgB,KAAK,qBAAsB,GACrD,EAAQ,IAGZ,KAAK,qBAAqB,OAAO,EAAO,GACxC,MAGG,uBAAP,WACI,KAAK,qBAAuB,GAC5B,KAAK,gBAAkB,IAE/B,EAjDA,GA4DA,SAAS,EAAY,EAAsB,GACvC,MAAuB,qBAAZ,EACA,sBAAsB,EAAY,kEAEvC,aAAmB,OAAe,aAAtC,EACS,sBAAsB,EAAY,+DAIjD,SAAS,EAAgB,EAAiC,GACtD,IAAK,IAAI,EAAQ,EAAG,EAAQ,EAAW,OAAQ,GAAS,EACpD,GAAI,EAAW,GAAO,SAAW,EAC7B,OAAO,EAGb,OAAM,EA6GR,mBA1GJ,IA+EI,EA/EE,EAAkC,SAAC,GACnC,EAAc,SAAQ,SAAC,GACjB,EAAD,gBAAkB,GACjB,EAAD,iBAAmB,GAClB,EAAD,qBAAqB,SAAQ,SAAC,GACzB,EAAG,aACiB,EAAsB,EAAG,QAC3B,EACd,EAAG,gBAAgB,KAAK,GAExB,EAAG,iBAAiB,KAAK,WAavC,EAA8B,WAC9B,IAAE,EAAwB,IAsB1B,OArBA,EAAc,SAAQ,SAAC,GACjB,GAAC,EAAG,gBAAgB,OAApB,CAIJ,IAAM,EAAU,GAChBO,EAAG,gBAAgB,SAAQ,SAAC,GACxB,IAAM,EAAQ,IAAI,sBAAoB,EAAI,QAC1C,EAAQ,KAAK,GACb,EAAI,iBAAmB,EAAM,YAAY,MACzC,EAAI,kBAAoB,EAAM,YAAY,OAC1C,IAAM,EAAc,EAAsB,EAAI,QAC1C,EAAc,IACd,EAAwB,MAIhC,EAAG,WAAW,EAAS,GACvB,EAAG,gBAAkB,OAGlB,GAWL,EAAwB,SAAC,GAE3B,IADE,IAAE,EAAQ,EACL,EAAO,YACV,EAAS,EAAO,WAChB,GAAS,EAEb,OAAO,GAGL,EAAwB,WAC1B,IAAI,EAAQ,EAEV,IADF,EAAgC,GAlDhC,EAAgB,MAAK,SAAC,GAAO,QAAE,EAAG,gBAAL,WAoDzB,EAAQ,IACR,EAAgC,GAlDpC,EAAgB,MAAK,SAAC,GAAO,QAAE,EAAG,iBAAL,WA4BU,WACvC,IAAM,EAAa,IAAK,OAAe,WAAW,kBAAmB,CACjE,QAAS,kEAGX,OAAK,cAAc,GAqBjB,IAMF,EAAY,WACV,GAEJ,KAGE,EAAU,SAAV,IACF,EAA4B,OAAO,uBAAsB,WACrD,IACA,QAIF,EAAgB,WACd,IAA8B,EAAgB,MAAK,SAAC,GAAO,QAAE,EAAG,qBAAL,YAC3D,OAAO,qBAAqB,GAC5B,OAA4B,IAQhC,UAJY,WACZ,OAAC,OAAe,eAAiB,I,gDCxLtB,SAA2BC,EAASC,EAASC,GAC1D,IAAMC,EAAa7F,mBACb8F,EAAa9F,mBAWnB,MAAO,CATe,WAAa,2BAAT+F,EAAS,yBAATA,EAAS,gBACjCC,aAAaF,EAAbE,SACAH,UAAqBI,YAAW,kBAAMP,eAAN,KAAhCG,IAGoB,WAAa,2BAATE,EAAS,yBAATA,EAAS,gBACjCC,aAAaH,EAAbG,SACAF,UAAqBG,YAAW,kBAAMN,eAAN,KAAhCG,Q,qHCTEI,EAAe,SAAC,GAAD,uBACnB5D,OADmB,wBAEnBuB,OAFmB,2BAGnBiB,OAHmB,qBAInB7C,OAJmB,yBAKnBmD,OALmB,4BAMnBC,OANmB,aAOTc,EAPS,kBASnB,uBACEC,IADF,EAEEtB,UAFF,EAGExC,eAHF,EAIE8C,UAJF,EAKEC,WALF,EAMEpD,MAAOA,GAfU,IAqBfwC,EAAQ,CAEZnC,eAAgBQ,kCAFJ,4CAMZe,SAAU,sBAAoB,CAC5Bf,YAD4B,KAE5B,kBAAgB,CAAEuD,QAASvD,YAAUwD,QAF7B,YANE,qCAWZxB,UAAWhC,+BAXC,iCAeZb,MAAOa,+BAfK,iCAmBZsC,UAAWtC,gCAnBC,uDAyBZuC,WAAYvC,gCAzBA,wDA+BZzB,SAAUyB,6DAGZoD,cAC+BhD,mBAASgD,GAExCK,Y,yFCnCS,cApBW,SAAC,GACf,GAAE,YAAc,EAA+B,CACzC,IAAE,EAAO,EAA8B,UAC3C,OAAO,OAAO,OAAO,CACjB,OAAQ,EAAI,OACZ,KAAM,EACN,IAAK,EACL,MAAO,EAAI,QAGX,IAAE,EAAS,OAAO,iBAAiB,GACnC,OAAG,OAAO,OAAO,CACjB,OAAQ,WAAW,EAAO,QAAU,KACpC,KAAM,WAAW,EAAO,aAAe,KACvC,IAAK,WAAW,EAAO,YAAc,KACrC,MAAO,WAAW,EAAO,OAAS,S,kFCtB9C,aAEI,EAAJ,WAeM,SAAF,EAAY,GACR,KAAK,OAAS,EACd,KAAK,iBAAmB,KAAK,kBAAoB,EAYzD,OArBM,OAAF,eAAW,6BAAc,C,IAAzB,WACI,OAAO,KAAK,kB,gCAEd,OAAF,eAAW,8BAAe,C,IAA1B,WACI,OAAO,KAAK,mB,gCAQT,qBAAP,WACI,IAAM,EAAK,cAAY,KAAK,QAExB,QAAK,IAED,EAAG,QAAU,KAAK,gBACf,EAAG,SAAW,KAAK,kBAGtC,EA7BA,GA+BS,uB,kFCjCT,aAEI,EAGE,SAAU,GACRpB,KAAK,OAAS,EACd,KAAK,YAAc,cAAY,IAI9B,yB,iqBCNT,IAAMqB,EAAe,SAAC1F,GAAM,IAClBC,EAA0BD,EADR,OACV2F,EAAkB3F,EADR,cAE1B,SACoBC,EADR,MAIZ,EACoB0F,EADD,MAInB,GAGIC,EAAkB,SAACC,EAAO7F,GAC9B,IAAM8F,EAAWJ,EAAjB,GACMK,EAAN,EACMC,EAAQH,UAAd,GAQA,OANA,IAAIG,EACFD,UAEAA,cAGF,GAGM1F,EC9BoBD,oBD8BpBC,SAEF4F,c,4BACJ,cAAmB,0BACjB,iBADiB,IAETC,EAA0BvC,EAFjB,YAEInB,EAAamB,EAFjB,gBAGjB,QAAa,CACXuC,YADW,EAEX1D,SAFW,EAGX2D,UAHW,KAIXC,SAAU,qCAPK,E,gDAmBnB,YAAyB,IAIvB,EAJuB,EACQ/B,KADR,MACfgC,EADe,WACLD,EADK,WAEfF,EAAgB7B,KAFD,kBAGjBvF,EAAQ4G,EAAd,GAEA,EACEY,EAAWV,EAAgBM,GAAD,GAA1BI,GACSJ,IAAJ,IAELI,KAGFjC,KAAA,SAAc,CACZ6B,YAAaI,IAbQ,2BAANC,EAAM,iCAANA,EAAM,kBAgBvB,GAAcH,gC,oBAGhB,WAAS,IACC7F,EAAa8D,KADd,eAEP,OAAO,qBAAUvF,MAAOuF,KAAK9E,OAA7B,M,uCA7BF,cAA0D,IAAb4G,EAAa,EAAbA,UAC3C,OAAIK,gBAAJ,EAAgD,KACzC,CACLN,YAAaM,EADR,YAELL,UAAWK,EAAUN,iB,EAhBrBD,CAAcvB,aA6CpBuB,eAAqB,CACnBI,UAAU,GAGZJ,YAAkB,CAChB1F,SAAUyB,IADM,MAEhBqE,SAAUrE,IAFM,KAGhBoE,SAAUpE,IAHM,KAIhBkE,YAAalE,cAAoB,CAACA,IAAD,MAAkBA,IAJnC,SAKhBQ,SAAUR,IAAUyE,M,0BE9EhBpF,EAAO6C,oBAFb,cAEA,QAEMwC,EAAU,SAAC,GAQX,IAPJnG,EAOI,EAPJA,SACAoG,EAMI,EANJA,MACAC,EAKI,EALJA,QACAtD,EAII,EAJJA,SACAS,EAGI,EAHJA,SAGI,IAFJ8C,oBAEI,aADJC,eACI,SACEC,EAAMD,EAAU,SAAtB,QAEA,OACE,qBACE9C,UAAS,UAjBf,eAiBe,OAAiB8C,EAAU,IAAH,OAjBvC,cAiBuC,WADnC,IAEEF,QAASA,GAERC,EACC,uBAAwB/H,MAAOyB,GAAYoG,IAE3C,yBAPJ,GASE,uBAAc5C,SAAd,EAAkCT,SAAUA,MAKlDoD,YAAoB,CAClBnG,SAAUyB,IADQ,OAElB2E,MAAO3E,IAFW,OAGlB4E,QAAS5E,IAHS,OAIlBsB,SAAUtB,IAJQ,KAKlB+B,SAAU/B,IALQ,KAMlB6E,aAAc7E,IANI,KAOlB8E,QAAS9E,IAAUyE,M,6lBCjCfO,EAAgB,SAAC,GAUjB,QATJxF,sBASI,MATa,GASb,MARJwC,iBAQI,MARQ,GAQR,MAPJ7C,aAOI,MAPI,GAOJ,MANJ8F,YAMI,MANG,GAMH,MALJC,qBAKI,MALY,EAKZ,MAJJC,gBAII,MAJO,OAIP,MAHJC,oBAGI,aAFJC,qBAEI,MAFY,OAEZ,MADJC,iBACI,WACuCxD,YAA0B,kBAAD,EAGlE,CACEsD,aADF,EAEEC,cAFF,EAGEC,cANIzD,EADJ,eACkB0D,EADlB,mBAsBAC,EAAJ,EAaA,OAXA,EACEA,EACEN,IAAoBM,cAApBN,GAFJ,EAGSA,EAAJ,IACHM,EAjBAP,EAAA,mBACE,cACE,IAAIQ,EAAcC,SAAlB,EAIA,OAHIA,YAA6BC,EAA7BD,OAAJ,IACED,MACFC,eAAyBA,MAAzBA,kBACA,IAEF,CATsB,KAkBV,KAAwB,qBACpC,0BAAME,IAAN,EAAkB5D,UAAWuD,EAAiB,SADV,OAQtC,2CAEEvD,UAFF,EAGE7C,MAAK,GACHgG,SAAUD,MAA+B,MADtC,KAKJE,EACC,0BAAMpD,UAAWuD,EAAiB,wBADvB,GATjB,IAoBIM,EAAmB,CACvBrG,eAAgBQ,+BADO,oDAIvBgC,UAAWhC,+BAJY,aAKvBb,MAAOa,+BALgB,aAMvBiF,KAAMjF,kDANiB,WAOvBkF,cAAelF,qFAPQ,GAUvBmF,SAAUnF,qEAVa,QAavBoF,aAAcpF,8EAbS,GAgBvBqF,cAAerF,kBAAgB,CAAC,OAAQ,SAAzBA,sDAhBQ,QAmBvBsF,UAAWtF,mFAKbgF,cAE8B5E,mBAAS,GACvC0F,Y,cCvGA,SAAoB,GAOjB,QANDC,kBAMC,MANY,GAMZ,MALDC,aAKC,MALO,IAKP,MAJDC,cAIC,MAJQ,GAIR,EAHDC,EAGC,EAHDA,YAGC,IAFDC,sBAEC,aADDC,qBACC,SACKC,EAAN,EAGMC,EAASC,WAAf,GACMC,EAAcF,EAApB,IAEMG,EAAmBJ,EAAzB,EAEIK,EAAJ,EACIC,EAAJ,EACIC,EAAJ,EACIC,EAAJ,EAkEA,OAhEA,IACEH,KACAE,IAAqBN,GAEvB,IACEI,KACAC,IAAoBL,KAGhBF,GAAF,GAAuCD,GAA3C,KACEU,KA2BE,KAECL,EA/CL,EA6CI,YAMCR,EACC,EADDA,IAnDL,EA6CI,KAtBDG,EACG,IAAMG,EAAS,IAAMA,EAAS,UAAYA,EAAS,IADxC,EADf,SAKCL,GAAU,EAAIO,GAAeI,EAL9B,QAMCT,EACG,IAAMG,EAAS,IAAMA,EAAS,WAA9B,MADW,EANf,SAUU,EAAT,EAACN,EAVF,IAWCI,EACG,IAAME,EAAS,IAAMA,EAAS,WAA9B,OADU,EAXd,SAeY,EAAIE,GAAeG,EAf/B,KAeEV,IACDG,EACG,IAAME,EAAS,IAAMA,EAAS,UAAYA,EAAS,KADzC,EAjBhB,KAwBI,M,gqBClDN,IAEMQ,EAAU,OAAA5E,EAAA,UAFhB,kBAEgB,MAA0C,kBAAiB,CACzE,YADwD,aAGpD6E,EAAgB7E,qBALtB,kBAKA,SACM8E,EAAc9E,mBANpB,kBAMA,QACM+E,EAAU/E,mBAPhB,kBAOA,WACMgF,EAAchF,oBARpB,kBAQA,iBAQMiF,c,4BAOJ,cAAmB,iCACjB,iBADiB,4CANF,IAAIC,EAAJ,gBAAmB,kBAAM,EAAN,iBAMjB,uCAJP,IAMV,aAAkBhJ,IAAlB,YACA,iBAAsBA,IAAtB,YACA,iBAAsBA,IAAtB,YACA,WAAgBA,IAAhB,YAEA,aAAkB,8BAAlB,IAPiB,E,qDAUnB,WACEiE,KAAA,uBAA4BA,KAAKgF,WAAjC,W,gCAGF,YA3B0B,SAAC,EAAD,GAA8C,IAA3CrB,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,OAAQF,EAA4B,EAA5BA,WAC5C,OAAIC,IAAUsB,EAAd,QACIrB,IAAWqB,EAAf,QACOvB,IAAeuB,EAAtB,aAyBOC,CAAoBlF,KAAD,MAAaA,KAArC,YACAA,KAAA,e,kCAGF,WACEA,KAAA,yBAA8BA,KAAKgF,WAAnC,W,iBAGF,WAAY,IACOG,EAAYnF,KADnB,iBAEOoF,EAAcpF,KAFrB,mBAGOqF,EAAkBrF,KAHzB,uBAIJsF,EAAW9J,wBAAjB,GACM+J,EAAaD,mBAAnB,0BACME,EAAcF,mBAApB,2BACMvB,EAAN,IAAsBG,cAChBJ,EAAN,IAAuBI,cACvB,MAAO,CACLR,WADK,GACOyB,cACZxB,MAAOyB,EAFF,YAGLxB,OAAQwB,EAHH,aAILvB,YAJK,EAKLE,cALK,EAMLD,oB,oBAIJ,WAAe,MACsB9D,KADtB,MACLyF,EADK,UACIC,EADJ,SACYjL,EADZ,QAEb,OACEgL,IAAYE,mBAAyBlL,EAAzBkL,SAAZF,IADF,I,sBAKF,YAAgB,IACNG,EAAkB5F,KADZ,oBAEd,SAA0B4F,EAFZ,GAIVnL,GAASA,EAAb,OAAkCA,SAAP,MAE3B,I,wBAGF,WACE,IAAMoL,EAAOC,EAAW9F,KAAxB,OACAA,KAAA,UAAiBA,KAAjB,MACAA,KAAA,6C,oBAGF,WAAS,MAkBHA,KAlBG,MAEL+F,EAFK,YAGLvH,EAHK,WAILC,EAJK,WAKLN,EALK,WAMLgC,EANK,iBAOL6F,EAPK,YAQLC,EARK,SASLC,EATK,UAULxH,EAVK,WAWLyH,EAXK,kBAYLlH,EAZK,WAaLxE,EAbK,QAcLsH,EAdK,WAeLqE,EAfK,OAgBLC,EAhBK,YAiBL3G,EAjBK,WAoBD4G,E,yWAAa,CAAH,CACdP,UADc,EAEdpG,UAFc,kCAGdxB,SAHc,EAIdK,SAJc,EAKdyH,OALc,EAMdlE,SANc,EAOdmE,QAPc,EAQdzH,SARc,EASdhE,MATc,EAUdiE,SAVc,EAWd0H,KAXc,EAYdC,aAZF,GAeME,EAAiBC,YAAsBrG,EAA7C,GACMuF,EAAS1F,KAAf,SAEA,OACE,qBACEyG,WAAY,CACVjI,SADU,EAEVkH,OAFU,EAGVjH,SAHU,EAIVN,YAEFO,SAAUsB,KAPZ,WAQEiG,OAAQ,wBACRC,QAAS,wBACTQ,WAAY1G,KAVd,eAWE2G,YAAa3G,KAAK4G,iBAXpB,EAcE,qBAAeH,WAAY,CAAEf,UAAUhH,SAAUsB,KAAK6G,UACpD,qBAAe/D,SAAf,OAA+BF,KAAMoD,IACrC,uBAActG,SAAd,EAAkCT,SAAUA,KAE9C,yBACE,6BACE,qBAAaP,SAAUsB,KAAK8G,mBAGhC,qBAAapI,SAAUsB,KAAK+G,sB,EArI9BjC,CAA+BzE,a,YAA/ByE,iBAKkB,CAAE/C,SAAU,0B,QCzB9BiF,EAAO,a,EACgB,SAAC,GAAD,oCAE3BC,OAF2B,wBAQ3BvI,OAR2B,wBAY3BiB,OAZ2B,+BAkB3BwG,OAlB2B,8BAwB3BhG,OAxB2B,sBA8B3B1F,OA9B2B,8BAoC3ByM,OApC2B,wBA0C3BlB,OA1C2B,0BAgD3BjE,OAhD2B,qBAiD3BkE,OAjD2B,sBAkD3BC,OAlD2B,qBAwD3BR,OAxD2B,sBA8D3BlH,OA9D2B,sBAoE3BC,OApE2B,sBA0E3BN,OA1E2B,sBAgF3Bc,OAhF2B,sBAiF3BS,OAjF2B,kBAkF3B0G,OAlF2B,2BAmF3BC,OAnF2B,kBAqF3B,qBACEY,WADF,EAEEtH,UAFF,EAGExB,SAHF,EAIEgI,gBAJF,EAKE3H,SALF,EAMEE,SANF,EAOEyB,eAPF,EAQEuF,OARF,EASEwB,eATF,EAUElB,UAVF,EAWEI,KAXF,EAYEH,OAZF,EAaElE,SAbF,EAcEmE,QAdF,EAeExG,SAfF,EAgBEjB,SAhBF,EAiBEQ,SAjBF,EAkBEoH,UAlBF,EAmBE5L,MAAOA,KCzGL0M,EAAetH,oBAFrB,YAEA,Y,EAEiB,SAAC,GAAuB,IAArB+C,EAAqB,EAArBA,KAAMpE,EAAe,EAAfA,SACxB,SACO,qBAAciI,WAAYjI,GAAjC,GADkB,M,QCLP4I,GAASnK,UAAH,wCAAGA,CAAH,wDAIf,SAAAqC,GACA,OAAIA,UAAgBA,EAApB,aACE,uCAIGA,EAAD,OAAiBA,EAArB,oBACE,wCAOO+H,GAAqBpK,UAAH,wCAAGA,CAAH,mCAIlBqK,GAAgBrK,UAAH,wCAAGA,CAAH,sC,6kBCP1B,IAEMwH,GAAU,OAAA5E,EAAA,UAFhB,YAEgB,MAGd,gBAAG0H,EAAH,YAAcrI,EAAd,8BACE,kBAAmBqI,GADrB,QAKIC,GAAiB3H,6BAVvB,YAUA,aACM4H,GAAsB5H,kCAX5B,YAWA,aAIa6H,GAA2B,kBAA3BA,GAA2B,gBAA3BA,GAA2B,iBAA3BA,GAA2B,mBAA3BA,GAA2B,oBAA3BA,GAMD,mBAGNC,GAAmB,SAAC,GAsCpB,QArCJJ,iBAqCI,aApCJK,qBAoCI,SAnCJC,EAmCI,EAnCJA,KACAC,EAkCI,EAlCJA,GACArN,EAiCI,EAjCJA,MAiCI,IAhCJ0F,eAAgBoG,OAgCZ,MAhC6BtI,IAgC7B,MA/BJiJ,eAAgBa,OA+BZ,MA/B6B1F,EA+B7B,MA9BJ2F,kBAAmBC,OA8Bf,MA9BmCC,EA8BnC,EA7BJlC,EA6BI,EA7BJA,UACAxD,EA4BI,EA5BJA,aA4BI,IA3BJhE,gBA2BI,SAzBJ2J,EAyBI,EAzBJA,gBAyBI,IAxBJC,yBAwBI,MAxBgB,GAwBhB,MAvBJC,uBAuBI,MAvBc,GAuBd,EAtBJ5J,EAsBI,EAtBJA,SAsBI,IArBJgH,eAqBI,SApBJ9G,EAoBI,EApBJA,KAoBI,IAnBJT,iBAmBI,MAnBQ,aAmBR,MAlBJC,gBAkBI,aAjBJ4D,gBAiBI,MAjBO,aAiBP,MAhBJkE,cAgBI,MAhBK,aAgBL,MAfJC,eAeI,MAfM,aAeN,MAdJoC,eAcI,MAdM,aAcN,MAbJC,eAaI,MAbM,aAaN,MAZJpC,uBAYI,MAZc,GAYd,EAXJqC,EAWI,EAXJA,aAWI,KAVJvI,kBAUI,OAVQ,KAUR,QATJC,mBASI,OATS,KAST,QARJjB,iBAQI,gBAPJS,iBAOI,WANJ0G,GAMI,EANJA,KAMI,KALJC,kBAKI,OALQ,GAKR,QAJJoC,eAII,OAJK,GAIL,QAHJvJ,gBAGI,OAHMwI,GAGN,QAFJvK,uBAEI,OAFa,GAEb,GADD+E,GACC,icACEO,GAAU8D,SAAyB,oBAAD,MAAxC,KACMmC,GAAN,WAA8Bd,EACxBe,GAAsBlG,GAHxB,GAGkC+E,GAGhClB,GAAa,GAAH,aAEdnI,SAFc,EAGdK,SAAUA,GAHI,UAGQ2J,EACtBL,GAJc,EAKdD,KALc,EAMdlJ,KANc,EAOdiK,UAPc,EAQd3C,OARc,EASdlE,SATc,EAUdmE,QAVc,EAWdoC,QAXc,EAYdC,QAZc,EAad9J,SAbc,EAcdhE,MAdc,EAed2L,KAfc,GAgBdC,UAhBc,GAiBdnH,QAjBc,GAkBdD,aAlBF,IAsBM4J,GAAc,SAACC,GAAD,OAClB7I,OACE,uBACEA,UADF,GAEEC,WAFF,GAGEhB,QAASA,IAJbe,GADkB,GAad8I,GACJ,uCAEE5C,gBAFF,EAGEV,QAHF,EAIEtF,eAJF,EAKE+G,eALF,EAMElB,UANF,EAOEtG,SAPF,GAQET,SARF,GASEC,QAASA,MAIP8J,GAAiBN,GACrBG,GAD0C,IAG1C,oCACE,qBACEtG,QAASuF,GADX,EAEExF,MAFF,EAGE5C,SAHF,GAIET,SAJF,GAKEwD,QALF,GAMED,aAAcA,IAEfqG,GAAYrC,YAAsBD,EAZvC,MAgBA,UAEI,kCACEE,WAAY,CACVtI,SADU,EAEVM,SAFU,EAGVD,SAHU,EAIV+I,UAJU,EAKVrI,aANJ,IAUE,sBAAeS,UAAU,kBACvB,sBAAoBA,UAAU,wBAC5B,6BADF,GAKE,qBACEnB,SADF,EAEEoE,KACEuF,OAEIE,KAIV,sBACE1I,UADF,eAEE2C,QAFF,EAGE2G,aAAcC,QAAQd,GAAD,IA7B7B,MAuCA,kCACE3B,WAAY,CACVtI,SADU,EAEVM,SAFU,EAGVD,SAHU,EAIV+I,UAJU,EAKVrI,aANJ,IAUE,6BAVF,GAcE,qBACEV,SADF,EAEEoE,KAAMuF,OAAkDE,MAM1D/I,GAAQ,CAEZnC,eAAgBQ,+BAFJ,+CAMZ4J,UAAW5J,6BANC,8BAQZiK,cAAejK,6BARH,0BAUZmK,GAAInK,+BAVQ,2BAYZkK,KAAMlK,+BAZM,gCAcZlD,MAAOkD,sBAAoB,CACzBA,YADyB,OAEzBA,YAFyB,OAGzBA,YAHKA,qBAdK,kCAoBZwC,eAAgBxC,sBAAoB,CAClCA,YADkC,KAElCA,YAFcA,sBApBJ,uBAyBZuJ,eAAgBvJ,gCAzBJ,mBA2BZqK,kBAAmBrK,6BA3BP,4CA+BZqI,UAAWrI,sBAAoB,CAC7BA,YAD6B,OAE7BA,YAFSA,sBA/BC,cAoCZa,SAAUb,6BApCE,eAsCZwK,gBAAiBxK,kBAAgB,CAAC,UAAW,QAA5BA,wBAtCL,oBA0CZyK,kBAAmBzK,+BA1CP,sBA4CZ0K,gBAAiB1K,+BA5CL,oBA8CZc,SAAUd,6BA9CE,uBAgDZ8H,QAAS9H,6BAhDG,iBAkDZgB,KAAMhB,+BAlDM,cAoDZO,UAAWP,6BApDC,oBAsDZQ,SAAUR,6BAtDE,kBAwDZoE,SAAUpE,6BAxDE,qBA0DZsI,OAAQtI,6BA1DI,mBA4DZwI,gBAAiBxI,+BA5DL,+BA8DZ6K,aAAc7K,gCA9DF,iBAgEZsC,UAAWtC,gCAhEC,4BAkEZuC,WAAYvC,gCAlEA,6BAoEZsB,SAAUtB,6BApEE,qBAsEZ+B,SAAU/B,6BAtEE,qBAwEZuI,QAASvI,6BAxEG,oBA0EZ2K,QAAS3K,6BA1EG,oBA4EZ6E,aAAc7E,6BA5EF,+BA8EZ4K,QAAS5K,6BA9EG,2BAgFZyI,KAAMzI,sBAAoB,CAExBA,YAFwB,OAGxBA,YAHIA,mBAhFM,iCAsFZ0I,UAAW1I,+BAtFC,uBAwFZ8K,OAAQ9K,+BAxFI,oBA0FZuB,QAASvB,kBAAgB,CACvB+J,GACAA,GACAA,GACAA,GACAA,GACAA,KANO/J,sCAUXgK,gBACmC5J,mBAAS,IAC5CoL,a","file":"static/js/5.60c69128.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react';\nimport { throttle } from 'lodash';\nimport { useExecutionTimer } from '@elliemae/ds-utilities/hooks';\n\nfunction usePopoverProviderState({\n  initialState = {\n    reference: null,\n    visible: false,\n    value: '',\n    options: {},\n  },\n  delay,\n}) {\n  const triggerRef = useRef();\n  const [tooltipState, setTooltipState] = useState(initialState);\n\n  const show = state => {\n    setTooltipState(prevState => ({\n      ...prevState,\n      ...state,\n      visible: true,\n    }));\n  };\n  const hide = state => {\n    setTooltipState(prevState => ({\n      ...prevState,\n      ...state,\n      visible: false,\n    }));\n  };\n\n  const [showTooltip, hideTooltip] = useExecutionTimer(show, hide, delay);\n\n  const handleShowTooltip = (state, e) => {\n    triggerRef.current = e.target;\n    showTooltip({ ...state, reference: e.target });\n  };\n\n  const handleHideTooltip = state => {\n    hideTooltip(state);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', throttle(handleHideTooltip, 300), true);\n    window.addEventListener('click', handleHideTooltip, true);\n    return () => {\n      window.removeEventListener(\n        'scroll',\n        throttle(handleHideTooltip, 300),\n        true,\n      );\n      window.addEventListener('click', handleHideTooltip, true);\n    };\n  }, [tooltipState.reference]);\n\n  return {\n    show: handleShowTooltip,\n    hide: handleHideTooltip,\n    state: tooltipState,\n  };\n}\n\nexport default usePopoverProviderState;\n","/* eslint-disable react/prop-types */\nimport React, { useMemo, useState } from 'react';\nimport DSPopover, { usePopoverProviderState } from '../Popover';\n\nexport const TruncatedTooltipContext = React.createContext();\n\nconst { Provider } = TruncatedTooltipContext;\n\nfunction TooltipTextProvider({\n  children,\n  tooltipDelay = 200,\n  placement = 'top',\n  ...tooltipOptions\n}) {\n  const {\n    show: showTooltip,\n    hide: hideTooltip,\n    state: tooltipState,\n  } = usePopoverProviderState({ delay: tooltipDelay });\n  const [zIndex, setZIndex] = useState(110);\n\n  const value = useMemo(\n    () => ({\n      showTooltip,\n      hideTooltip,\n      setZIndex,\n    }),\n    [],\n  );\n\n  return (\n    <Provider value={value}>\n      {children}\n      {tooltipState.visible ? (\n        <DSPopover\n          boundaries=\"window\"\n          placement={placement}\n          showArrow\n          {...tooltipOptions}\n          {...(tooltipState.options || {})}\n          content={tooltipState.value}\n          referenceEl={tooltipState.reference}\n          style={{ pointerEvents: 'none', zIndex }}\n          visible={tooltipState.visible}\n        />\n      ) : null}\n    </Provider>\n  );\n}\n\nTooltipTextProvider.propTypes = {};\nTooltipTextProvider.defaultProps = {};\n\nexport default TooltipTextProvider;\n","import React, { useContext, useEffect } from 'react';\nimport { describe, PropTypes } from 'react-desc';\nimport styled from 'styled-components';\nimport { PopperPositions as positions } from '../Popper';\nimport { TruncatedTooltipContext } from './TooltipTextProvider';\n\nconst isEllipsisActive = ({ offsetWidth, scrollWidth }) =>\n  offsetWidth < scrollWidth;\n\n// reduce the possibility of error showing the tooltip (text-overflow: ellipsis) https://jira.elliemae.io/browse/PUI-1755\nconst Text = styled.span`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: inline-block;\n  max-width: 100%;\n`;\n\nconst DSTruncatedTooltipText = ({\n  containerProps = {},\n  value = '',\n  zIndex = 110, // https://jira.elliemae.io/browse/PUI-1755\n  ...otherTextProps\n}) => {\n  const tooltipContext = useContext(TruncatedTooltipContext);\n  useEffect(() => {\n    if (zIndex && tooltipContext) tooltipContext.setZIndex(zIndex);\n  }, [zIndex]);\n\n  if (!tooltipContext) return value;\n\n  const { showTooltip, hideTooltip } = tooltipContext;\n\n  const handleMouseEnter = (e) => {\n    const { target } = e;\n    if (target && isEllipsisActive(target, target.getBoundingClientRect())) {\n      showTooltip(\n        {\n          value,\n          reference: target,\n        },\n        e,\n      );\n    }\n  };\n\n  const handleMouseLeave = (e) => {\n    hideTooltip({ reference: e.target });\n  };\n\n  const handlers = showTooltip\n    ? { onMouseEnter: handleMouseEnter, onMouseLeave: handleMouseLeave }\n    : {};\n  return (\n    <Text {...containerProps} {...otherTextProps} {...handlers}>\n      {value}\n    </Text>\n  );\n};\n\nconst truncatedTooltipTextProps = {\n  containerProps: PropTypes.object.description(\n    'Set of Properties attached to the main container',\n  ),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).description(\n    'Text that when truncated will trigger the tooltip interaction',\n  ),\n  tooltipPlacement: PropTypes.oneOf([\n    positions.AUTO_START,\n    positions.AUTO_END,\n    positions.AUTO,\n    positions.TOP_START,\n    positions.TOP,\n    positions.TOP_END,\n    positions.RIGHT_START,\n    positions.RIGHT,\n    positions.RIGHT_END,\n    positions.BOTTOM_START,\n    positions.BOTTOM,\n    positions.BOTTOM_END,\n    positions.LEFT_START,\n    positions.LEFT,\n    positions.LEFT_END,\n  ]).description('Position of the tooltip'),\n  tooltipDelay: PropTypes.number.description('Delay to show the tooltip'),\n  zIndex: PropTypes.number\n    .description('override default zIndex')\n    .defaultValue(110),\n};\n\nDSTruncatedTooltipText.defaultProps = {\n  containerProps: {},\n  value: '',\n  tooltipPlacement: undefined,\n  tooltipDelay: undefined,\n};\n\nDSTruncatedTooltipText.propTypes = truncatedTooltipTextProps;\n\nconst TruncatedTooltipTextWithSchema = describe(DSTruncatedTooltipText);\nTruncatedTooltipTextWithSchema.propTypes = truncatedTooltipTextProps;\n\nexport { TruncatedTooltipTextWithSchema };\nexport default DSTruncatedTooltipText;\n","import React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport DSInput from '../Input';\n\nconst DSTextBox = ({\n  containerProps = {},\n  autoFocus = false,\n  disabled = false,\n  maxLength = 255,\n  minLength = 0,\n  fluidWidth = false,\n  placeholder,\n  value = '',\n  hasError = false,\n  readOnly = false,\n  innerRef = null,\n  type = 'text',\n  min = undefined,\n  max = undefined,\n  clearable = false,\n  leftComponent = null,\n  rightComponent = null,\n  required = false,\n  variant,\n  ...otherProps\n}) => (\n  <DSInput\n    {...otherProps}\n    aria-label={otherProps['aria-label'] || 'Text Box'}\n    autoFocus={autoFocus}\n    clearable={clearable}\n    containerProps={containerProps}\n    disabled={disabled}\n    fluidWidth={fluidWidth}\n    hasError={hasError}\n    innerRef={innerRef}\n    leftComponent={leftComponent}\n    max={max}\n    maxLength={maxLength}\n    min={min}\n    minLength={minLength}\n    placeholder={placeholder}\n    readOnly={readOnly}\n    required={required}\n    rightComponent={rightComponent}\n    role=\"textbox\"\n    type={type}\n    value={value}\n    variant={variant}\n  />\n);\n\nconst props = {\n  /** inject props at textbox wrapper */\n  containerProps: PropTypes.shape({}).description(\n    'inject props at textbox wrapper',\n  ),\n  /**\n   * Whether the text box uses auto focus or not\n   */\n  autoFocus: PropTypes.bool.description(\n    'Whether the text box uses auto focus or not',\n  ),\n  /**\n   * Whether the text box is disabled or not\n   */\n  disabled: PropTypes.bool.description(\n    'Whether the text box is disabled or not',\n  ),\n  /**\n   * Max length for the text box\n   */\n  maxLength: PropTypes.number.description('Max length for the text box'),\n  /**\n   * Min length for the text box\n   */\n  minLength: PropTypes.number.description('Min length for the text box'),\n  /**\n   * Make the content of the text box fit the container or not\n   */\n  fluidWidth: PropTypes.bool.description(\n    'Make the content of the text box fit the container or not',\n  ),\n  /**\n   * Placeholder for the text box\n   */\n  placeholder: PropTypes.string.description('Placeholder for the text box'),\n  /**\n   * Default value once the component is initialized\n   */\n  value: PropTypes.string.description(\n    'Default value once the component is initialized',\n  ),\n  /**\n   * Whether the text box has error or not\n   */\n  hasError: PropTypes.bool.description('Whether the text box has error or not'),\n  /**\n   * Whether the text box is read only or not\n   */\n  readOnly: PropTypes.bool.description(\n    'Whether the text box is read only or not',\n  ),\n  /** html min prop for input */\n  min: PropTypes.number.description('html min prop for input'),\n  /** html max prop for input */\n  max: PropTypes.number.description('html max prop for input'),\n  /**\n   * Whether the text box is clearable or not\n   */\n  clearable: PropTypes.bool.description(\n    'Whether the text box is clearable or not',\n  ),\n  /**\n   * Component to be added at the left side of the text box\n   */\n  leftComponent: PropTypes.element.description(\n    'Component to be added at the left side of the text box',\n  ),\n  /**\n   * Component to be added at the right side of the text box\n   */\n  rightComponent: PropTypes.element.description(\n    'Component to be added at the right side of the text box',\n  ),\n  /**\n   * Whether the text box is required or not\n   */\n  required: PropTypes.bool.description(\n    'Whether the text box is required or not',\n  ),\n  /**\n   * [\n   *  'variant-default',\n   *  'variant-focus',\n   *  'variant-active',\n   *  'variant-disabled',\n   * ]\n   */\n  variant: PropTypes.string.description(\n    \"variant-default','variant-focus','variant-active','variant-disabled'\",\n  ),\n  /** html input type */\n  type: PropTypes.string.description('html input type'),\n  /** Internal ref */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).description(\n    'internal ref',\n  ),\n};\n\nDSTextBox.propTypes = props;\n\nconst DSTextBoxWithSchema = describe(DSTextBox);\n\nDSTextBoxWithSchema.propTypes = props;\n\nexport default DSTextBox;\nexport { DSTextBoxWithSchema };\n","import React from 'react';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\n\nconst { cssClassName } = convertPropToCssClassName('form-required-mark');\nconst RequiredMark = ({ required = false, optional = false }) => {\n  if (!required && !optional) return null;\n  if (required) {\n    return <span className={`${cssClassName}`}>&#9679;</span>;\n  }\n  return <span className={`${cssClassName} optional-mark`}>&#9900;</span>;\n};\n\nexport default RequiredMark;\n","import React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'input-addon-group';\n\nconst Container = aggregatedClasses('div')(blockName);\nconst InputAddon = aggregatedClasses('span')(blockName, 'addon');\n\nexport default class AddonWrapper extends Component {\n  static defaultProps = {};\n\n  state = {};\n\n  render() {\n    const {\n      leftAddon,\n      rightAddon,\n      children: inputComponent,\n      className,\n      containerProps,\n    } = this.props;\n    const childType =\n      inputComponent && inputComponent.type && inputComponent.type.name\n        ? inputComponent.type.name.toLowerCase()\n        : 'default';\n    return (\n      <Container\n        className={`${className} ${blockName}--${childType}`}\n        {...containerProps}\n      >\n        {leftAddon && <InputAddon>{leftAddon}</InputAddon>}\n        {inputComponent}\n        {rightAddon && <InputAddon>{rightAddon}</InputAddon>}\n      </Container>\n    );\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ResizeObservation_1 = require(\"./ResizeObservation\");\nvar ResizeObserverEntry_1 = require(\"./ResizeObserverEntry\");\nvar resizeObservers = [];\nvar ResizeObserver = /** @class */ (function () {\n    function ResizeObserver(callback) {\n        /** @internal */\n        this.$$observationTargets = [];\n        /** @internal */\n        this.$$activeTargets = [];\n        /** @internal */\n        this.$$skippedTargets = [];\n        var message = callbackGuard(callback);\n        if (message) {\n            throw TypeError(message);\n        }\n        this.$$callback = callback;\n        resizeObservers.push(this);\n    }\n    ResizeObserver.prototype.observe = function (target) {\n        var message = targetGuard('observe', target);\n        if (message) {\n            throw TypeError(message);\n        }\n        var index = findTargetIndex(this.$$observationTargets, target);\n        if (index > 0) {\n            return;\n        }\n        this.$$observationTargets.push(new ResizeObservation_1.ResizeObservation(target));\n        startLoop();\n    };\n    ResizeObserver.prototype.unobserve = function (target) {\n        var message = targetGuard('unobserve', target);\n        if (message) {\n            throw TypeError(message);\n        }\n        var index = findTargetIndex(this.$$observationTargets, target);\n        if (index < 0) {\n            return;\n        }\n        this.$$observationTargets.splice(index, 1);\n        checkStopLoop();\n    };\n    ResizeObserver.prototype.disconnect = function () {\n        this.$$observationTargets = [];\n        this.$$activeTargets = [];\n    };\n    return ResizeObserver;\n}());\nexports.ResizeObserver = ResizeObserver;\nfunction callbackGuard(callback) {\n    if (typeof (callback) === 'undefined') {\n        return \"Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.\";\n    }\n    if (typeof (callback) !== 'function') {\n        return \"Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.\";\n    }\n}\nfunction targetGuard(functionName, target) {\n    if (typeof (target) === 'undefined') {\n        return \"Failed to execute '\" + functionName + \"' on 'ResizeObserver': 1 argument required, but only 0 present.\";\n    }\n    if (!(target instanceof window.Element)) {\n        return \"Failed to execute '\" + functionName + \"' on 'ResizeObserver': parameter 1 is not of type 'Element'.\";\n    }\n}\nfunction findTargetIndex(collection, target) {\n    for (var index = 0; index < collection.length; index += 1) {\n        if (collection[index].target === target) {\n            return index;\n        }\n    }\n    return -1;\n}\nvar gatherActiveObservationsAtDepth = function (depth) {\n    resizeObservers.forEach(function (ro) {\n        ro.$$activeTargets = [];\n        ro.$$skippedTargets = [];\n        ro.$$observationTargets.forEach(function (ot) {\n            if (ot.isActive()) {\n                var targetDepth = calculateDepthForNode(ot.target);\n                if (targetDepth > depth) {\n                    ro.$$activeTargets.push(ot);\n                }\n                else {\n                    ro.$$skippedTargets.push(ot);\n                }\n            }\n        });\n    });\n};\nvar hasActiveObservations = function () {\n    return resizeObservers.some(function (ro) { return !!ro.$$activeTargets.length; });\n};\nvar hasSkippedObservations = function () {\n    return resizeObservers.some(function (ro) { return !!ro.$$skippedTargets.length; });\n};\nvar broadcastActiveObservations = function () {\n    var shallowestTargetDepth = Infinity;\n    resizeObservers.forEach(function (ro) {\n        if (!ro.$$activeTargets.length) {\n            return;\n        }\n        var entries = [];\n        ro.$$activeTargets.forEach(function (obs) {\n            var entry = new ResizeObserverEntry_1.ResizeObserverEntry(obs.target);\n            entries.push(entry);\n            obs.$$broadcastWidth = entry.contentRect.width;\n            obs.$$broadcastHeight = entry.contentRect.height;\n            var targetDepth = calculateDepthForNode(obs.target);\n            if (targetDepth < shallowestTargetDepth) {\n                shallowestTargetDepth = targetDepth;\n            }\n        });\n        ro.$$callback(entries, ro);\n        ro.$$activeTargets = [];\n    });\n    return shallowestTargetDepth;\n};\nvar deliverResizeLoopErrorNotification = function () {\n    var errorEvent = new window.ErrorEvent('ResizeLoopError', {\n        message: 'ResizeObserver loop completed with undelivered notifications.',\n    });\n    window.dispatchEvent(errorEvent);\n};\nvar calculateDepthForNode = function (target) {\n    var depth = 0;\n    while (target.parentNode) {\n        target = target.parentNode;\n        depth += 1;\n    }\n    return depth;\n};\nvar notificationIteration = function () {\n    var depth = 0;\n    gatherActiveObservationsAtDepth(depth);\n    while (hasActiveObservations()) {\n        depth = broadcastActiveObservations();\n        gatherActiveObservationsAtDepth(depth);\n    }\n    if (hasSkippedObservations()) {\n        deliverResizeLoopErrorNotification();\n    }\n};\nvar animationFrameCancelToken;\nvar startLoop = function () {\n    if (animationFrameCancelToken)\n        return;\n    runLoop();\n};\nvar runLoop = function () {\n    animationFrameCancelToken = window.requestAnimationFrame(function () {\n        notificationIteration();\n        runLoop();\n    });\n};\nvar checkStopLoop = function () {\n    if (animationFrameCancelToken && !resizeObservers.some(function (ro) { return !!ro.$$observationTargets.length; })) {\n        window.cancelAnimationFrame(animationFrameCancelToken);\n        animationFrameCancelToken = undefined;\n    }\n};\nvar install = function () {\n    return window.ResizeObserver = ResizeObserver;\n};\nexports.install = install;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplT2JzZXJ2ZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvUmVzaXplT2JzZXJ2ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSx5REFBd0Q7QUFFeEQsNkRBQTREO0FBRTVELElBQU0sZUFBZSxHQUFHLEVBQXNCLENBQUM7QUFFL0M7SUFVSSx3QkFBWSxRQUFnQztRQVA1QyxnQkFBZ0I7UUFDVCx5QkFBb0IsR0FBRyxFQUF5QixDQUFDO1FBQ3hELGdCQUFnQjtRQUNULG9CQUFlLEdBQUcsRUFBeUIsQ0FBQztRQUNuRCxnQkFBZ0I7UUFDVCxxQkFBZ0IsR0FBRyxFQUF5QixDQUFDO1FBR2hELElBQU0sT0FBTyxHQUFHLGFBQWEsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUN4QyxJQUFJLE9BQU8sRUFBRTtZQUNULE1BQU0sU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVCO1FBQ0QsSUFBSSxDQUFDLFVBQVUsR0FBRyxRQUFRLENBQUM7UUFDM0IsZUFBZSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQixDQUFDO0lBRU0sZ0NBQU8sR0FBZCxVQUFlLE1BQWU7UUFDMUIsSUFBTSxPQUFPLEdBQUcsV0FBVyxDQUFDLFNBQVMsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUMvQyxJQUFJLE9BQU8sRUFBRTtZQUNULE1BQU0sU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1NBQzVCO1FBQ0QsSUFBTSxLQUFLLEdBQUcsZUFBZSxDQUFDLElBQUksQ0FBQyxvQkFBb0IsRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNqRSxJQUFJLEtBQUssR0FBRyxDQUFDLEVBQUU7WUFDWCxPQUFPO1NBQ1Y7UUFDRCxJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLElBQUkscUNBQWlCLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztRQUM5RCxTQUFTLEVBQUUsQ0FBQztJQUNoQixDQUFDO0lBRU0sa0NBQVMsR0FBaEIsVUFB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","import { useRef } from 'react';\n\nexport default function useExecutionDelay(startFn, cleanFn, delayTime) {\n  const startTimer = useRef();\n  const closeTimer = useRef();\n\n  const startFunction = (...args) => {\n    clearTimeout(closeTimer.current);\n    startTimer.current = setTimeout(() => startFn(...args), delayTime);\n  };\n\n  const cleanFunction = (...args) => {\n    clearTimeout(startTimer.current);\n    closeTimer.current = setTimeout(() => cleanFn(...args), 30);\n  };\n  return [startFunction, cleanFunction];\n}\n","import React from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport AddonWrapper from './AddonWrapper';\n\nconst DSInputGroup = ({\n  containerProps = {},\n  innerRef = null,\n  className = '',\n  style = {},\n  leftAddon = null,\n  rightAddon = null,\n  children: InputComponents, // as InputComponents,\n}) => (\n  <AddonWrapper\n    ref={innerRef}\n    className={className}\n    containerProps={containerProps}\n    leftAddon={leftAddon}\n    rightAddon={rightAddon}\n    style={style}\n  >\n    {InputComponents}\n  </AddonWrapper>\n);\n\nconst props = {\n  /** props injected to wrapper of page header */\n  containerProps: PropTypes.shape({}).description(\n    'props injected to wrapper of page header',\n  ),\n  /** inner ref for input group wrapper */\n  innerRef: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any }),\n  ]).description('inner ref for input group wrapper'),\n  /** class for input group wrapper */\n  className: PropTypes.string.description('class for input group wrapper'),\n  /**\n   * Set style for the input group\n   */\n  style: PropTypes.object.description('Set style for the input group'),\n  /**\n   * Component to be added at the left side of the input\n   */\n  leftAddon: PropTypes.element.description(\n    'Component to be added at the left side of the input',\n  ),\n  /**\n   * Component to be added at the right side of the input\n   */\n  rightAddon: PropTypes.element.description(\n    'Component to be added at the right side of the input',\n  ),\n  /**\n   * Input components to show\n   */\n  children: PropTypes.element.description('Input components to show'),\n};\n\nDSInputGroup.propTypes = props;\nconst DSInputGroupWithSchema = describe(DSInputGroup);\n\nDSInputGroupWithSchema.propTypes = props;\n\nexport default DSInputGroup;\nexport { DSInputGroupWithSchema };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentRect = function (target) {\n    if ('getBBox' in target) {\n        var box = target.getBBox();\n        return Object.freeze({\n            height: box.height,\n            left: 0,\n            top: 0,\n            width: box.width,\n        });\n    }\n    else { // if (target instanceof HTMLElement) { // also includes all other non-SVGGraphicsElements\n        var styles = window.getComputedStyle(target);\n        return Object.freeze({\n            height: parseFloat(styles.height || '0'),\n            left: parseFloat(styles.paddingLeft || '0'),\n            top: parseFloat(styles.paddingTop || '0'),\n            width: parseFloat(styles.width || '0'),\n        });\n    }\n};\nexports.ContentRect = ContentRect;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQ29udGVudFJlY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvQ29udGVudFJlY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFPQSxJQUFNLFdBQVcsR0FBRyxVQUFDLE1BQWU7SUFDaEMsSUFBSSxTQUFTLElBQUssTUFBNkIsRUFBRTtRQUM3QyxJQUFNLEdBQUcsR0FBSSxNQUE2QixDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3JELE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQztZQUNqQixNQUFNLEVBQUUsR0FBRyxDQUFDLE1BQU07WUFDbEIsSUFBSSxFQUFFLENBQUM7WUFDUCxHQUFHLEVBQUUsQ0FBQztZQUNOLEtBQUssRUFBRSxHQUFHLENBQUMsS0FBSztTQUNuQixDQUFDLENBQUM7S0FDTjtTQUFNLEVBQUUsMEZBQTBGO1FBQy9GLElBQU0sTUFBTSxHQUFHLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMvQyxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUM7WUFDakIsTUFBTSxFQUFFLFVBQVUsQ0FBQyxNQUFNLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FBQztZQUN4QyxJQUFJLEVBQUUsVUFBVSxDQUFDLE1BQU0sQ0FBQyxXQUFXLElBQUksR0FBRyxDQUFDO1lBQzNDLEdBQUcsRUFBRSxVQUFVLENBQUMsTUFBTSxDQUFDLFVBQVUsSUFBSSxHQUFHLENBQUM7WUFDekMsS0FBSyxFQUFFLFVBQVUsQ0FBQyxNQUFNLENBQUMsS0FBSyxJQUFJLEdBQUcsQ0FBQztTQUN6QyxDQUFDLENBQUM7S0FDTjtBQUNMLENBQUMsQ0FBQztBQUVPLGtDQUFXIn0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentRect_1 = require(\"./ContentRect\");\nvar ResizeObservation = /** @class */ (function () {\n    function ResizeObservation(target) {\n        this.target = target;\n        this.$$broadcastWidth = this.$$broadcastHeight = 0;\n    }\n    Object.defineProperty(ResizeObservation.prototype, \"broadcastWidth\", {\n        get: function () {\n            return this.$$broadcastWidth;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ResizeObservation.prototype, \"broadcastHeight\", {\n        get: function () {\n            return this.$$broadcastHeight;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ResizeObservation.prototype.isActive = function () {\n        var cr = ContentRect_1.ContentRect(this.target);\n        return !!cr\n            && (cr.width !== this.broadcastWidth\n                || cr.height !== this.broadcastHeight);\n    };\n    return ResizeObservation;\n}());\nexports.ResizeObservation = ResizeObservation;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplT2JzZXJ2YXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvUmVzaXplT2JzZXJ2YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2Q0FBNEM7QUFFNUM7SUFlSSwyQkFBWSxNQUFlO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1FBQ3JCLElBQUksQ0FBQyxnQkFBZ0IsR0FBRyxJQUFJLENBQUMsaUJBQWlCLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZELENBQUM7SUFWRCxzQkFBVyw2Q0FBYzthQUF6QjtZQUNJLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDO1FBQ2pDLENBQUM7OztPQUFBO0lBQ0Qsc0JBQVcsOENBQWU7YUFBMUI7WUFDSSxPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQztRQUNsQyxDQUFDOzs7T0FBQTtJQU9NLG9DQUFRLEdBQWY7UUFDSSxJQUFNLEVBQUUsR0FBRyx5QkFBVyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUVwQyxPQUFPLENBQUMsQ0FBQyxFQUFFO2VBQ0osQ0FDQyxFQUFFLENBQUMsS0FBSyxLQUFLLElBQUksQ0FBQyxjQUFjO21CQUM3QixFQUFFLENBQUMsTUFBTSxLQUFLLElBQUksQ0FBQyxlQUFlLENBQ3hDLENBQUM7SUFDVixDQUFDO0lBQ0wsd0JBQUM7QUFBRCxDQUFDLEFBN0JELElBNkJDO0FBRVEsOENBQWlCIn0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentRect_1 = require(\"./ContentRect\");\nvar ResizeObserverEntry = /** @class */ (function () {\n    function ResizeObserverEntry(target) {\n        this.target = target;\n        this.contentRect = ContentRect_1.ContentRect(target);\n    }\n    return ResizeObserverEntry;\n}());\nexports.ResizeObserverEntry = ResizeObserverEntry;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVzaXplT2JzZXJ2ZXJFbnRyeS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9SZXNpemVPYnNlcnZlckVudHJ5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQTRDO0FBRTVDO0lBR0ksNkJBQVksTUFBZTtRQUN2QixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsV0FBVyxHQUFHLHlCQUFXLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUNMLDBCQUFDO0FBQUQsQ0FBQyxBQVBELElBT0M7QUFFUSxrREFBbUIifQ==","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GroupContext } from './GroupContext';\n\nconst getValueItem = (e) => {\n  const { target, currentTarget } = e;\n  if (target) {\n    const { value } = target;\n    return value;\n  }\n  if (currentTarget) {\n    const { value } = currentTarget;\n    return value;\n  }\n  return e;\n};\n\nconst toggleItemValue = (array, e) => {\n  const newvalue = getValueItem(e);\n  const res = array;\n  const index = array.indexOf(newvalue);\n\n  if (index === -1) {\n    res.push(newvalue);\n  } else {\n    res.splice(index, 1);\n  }\n\n  return res;\n};\n\nconst { Provider } = GroupContext;\n/** deprecated use CheckableGroup instead */\nclass Group extends Component {\n  constructor(props) {\n    super(props);\n    const { activeValue, disabled } = props;\n    this.state = {\n      activeValue,\n      disabled,\n      prevValue: null,\n      onChange: this.handleChange.bind(this),\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, { prevValue }) {\n    if (nextProps.activeValue === prevValue) return null;\n    return {\n      activeValue: nextProps.activeValue,\n      prevValue: nextProps.activeValue,\n    };\n  }\n\n  handleChange(e, ...rest) {\n    const { multiple, onChange } = this.props;\n    const { activeValue } = this.state;\n    const value = getValueItem(e);\n    let newValue;\n    if (multiple) {\n      newValue = toggleItemValue(activeValue || [], value);\n    } else if (activeValue !== value) {\n      // default behaviour it will be toggle the active value\n      newValue = value;\n    }\n\n    this.setState({\n      activeValue: newValue,\n    });\n\n    if (onChange) onChange(newValue, ...rest);\n  }\n\n  render() {\n    const { children } = this.props;\n    return <Provider value={this.state}>{children}</Provider>;\n  }\n}\n\nGroup.defaultProps = {\n  multiple: false,\n};\n\nGroup.propTypes = {\n  children: PropTypes.array,\n  multiple: PropTypes.bool,\n  onChange: PropTypes.func,\n  activeValue: PropTypes.oneOfType([PropTypes.array, PropTypes.number]),\n  disabled: PropTypes.bool,\n};\n\nexport default Group;\n","import React from 'react';\n\nexport const GroupContext = React.createContext();\n","/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable react/no-unknown-property, jsx-a11y/label-has-for */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport DSTruncatedTooltipText from '../../../TruncatedTooltipText';\nimport RequiredMark from '../../RequiredMark';\n\nconst blockName = 'em-ds-label';\n\nconst Text = aggregatedClasses('span')(blockName, 'text');\n\nconst DSLabel = ({\n  children,\n  label,\n  htmlFor,\n  required,\n  optional,\n  truncateText = true,\n  isGroup = false,\n}) => {\n  const Tag = isGroup ? 'legend' : 'label';\n\n  return (\n    <Tag\n      className={`${blockName}${isGroup ? ` ${blockName}--group` : ''}`}\n      htmlFor={htmlFor}\n    >\n      {truncateText ? (\n        <DSTruncatedTooltipText value={children || label} />\n      ) : (\n        <Text>{label}</Text>\n      )}\n      <RequiredMark optional={optional} required={required} />\n    </Tag>\n  );\n};\n\nDSLabel.propTypes = {\n  children: PropTypes.string,\n  label: PropTypes.string,\n  htmlFor: PropTypes.string,\n  required: PropTypes.bool,\n  optional: PropTypes.bool,\n  truncateText: PropTypes.bool,\n  isGroup: PropTypes.bool,\n};\n\nexport default DSLabel;\n","/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport { describe, PropTypes } from 'react-desc';\nimport { convertPropToCssClassName } from '@elliemae/ds-classnames';\n\n/**\n * if we don't care about word break\n * const regx = new RegExp(`.{1,${maxCharacters}}`, 'g')\n * text.match(regx)\n *\n * @param {*} param0\n */\nconst DSTextWrapper = ({\n  containerProps = {},\n  className = '',\n  style = {},\n  text = '',\n  maxCharacters = 0,\n  maxWidth = '100%',\n  textEllipsis = false,\n  textAlignment = 'left',\n  wordBreak = true,\n}) => {\n  const { cssClassName, classNameElement } = convertPropToCssClassName(\n    'text-wrapperRef',\n    className,\n    {\n      textEllipsis,\n      textAlignment,\n      wordBreak,\n    },\n  );\n  const limitPerCharacter = () =>\n    text.split(' ').reduce(\n      (result, word) => {\n        let resultIndex = result.length - 1;\n        if (result[resultIndex].length + word.length > maxCharacters)\n          resultIndex += 1;\n        result[resultIndex] = `${result[resultIndex] || ''} ${word}`;\n        return result;\n      },\n      [''],\n    );\n\n  let displayText = text;\n\n  if (textEllipsis)\n    displayText =\n      maxCharacters > 0 ? displayText.substring(0, maxCharacters) : displayText;\n  else if (maxCharacters > 0) {\n    displayText = limitPerCharacter().map((textpart, index) => (\n      <span key={index} className={classNameElement('line')}>\n        {textpart}\n      </span>\n    ));\n  }\n\n  return (\n    <span\n      {...containerProps}\n      className={cssClassName}\n      style={{\n        maxWidth: maxCharacters < 1 ? maxWidth : null,\n        ...style,\n      }}\n    >\n      {textEllipsis ? (\n        <span className={classNameElement('ellipsis-wrapperRef')}>\n          {displayText}\n        </span>\n      ) : (\n        displayText\n      )}\n    </span>\n  );\n};\n\nconst textWrapperProps = {\n  containerProps: PropTypes.object.description(\n    'Set of Properties attached to the main container',\n  ),\n  className: PropTypes.string.description('css class'),\n  style: PropTypes.object.description('css style'),\n  text: PropTypes.string.description('Text to display').isRequired,\n  maxCharacters: PropTypes.number\n    .description('Maximum amount of charachters allowed')\n    .defaultValue(0),\n  maxWidth: PropTypes.string\n    .description('Maximum width allowed')\n    .defaultValue('100%'),\n  textEllipsis: PropTypes.bool\n    .description('Whether to show ellipsis or not')\n    .defaultValue(false),\n  textAlignment: PropTypes.oneOf(['left', 'center', 'right'])\n    .description('Text alignement')\n    .defaultValue('left'),\n  wordBreak: PropTypes.bool\n    .description('Whether to break the line or not')\n    .defaultValue(true),\n};\n\nDSTextWrapper.propTypes = textWrapperProps;\n\nconst TextWrapperWithSchema = describe(DSTextWrapper);\nTextWrapperWithSchema.propTypes = textWrapperProps;\n\nexport { TextWrapperWithSchema };\nexport default DSTextWrapper;\n","/* eslint-disable prefer-template,max-statements,no-nested-ternary */\nfunction getSvgPath({\n  labelWidth = 50,\n  width = 200,\n  height = 35,\n  radiusStyle,\n  hasRightRadius = true,\n  hasLeftRadius = true,\n}) {\n  const notchWidth = labelWidth;\n  const isRtl = false;\n\n  const radius = parseFloat(radiusStyle);\n  const cornerWidth = radius + 1.3;\n  const leadingStrokeLength = 4;\n  const paddedNotchWidth = notchWidth + 8;\n\n  let extraSizeForH = 0;\n  let extraSizeForLeftV = 0;\n  let extraSizeForRightV = 0;\n  let extraSizeForTopH = radius;\n\n  if (!hasRightRadius) {\n    extraSizeForH += radius;\n    extraSizeForRightV = radius * 2;\n  }\n  if (!hasLeftRadius) {\n    extraSizeForH += radius;\n    extraSizeForLeftV = radius * 2;\n  }\n\n  if ((!hasLeftRadius && hasRightRadius) || (hasRightRadius && hasLeftRadius)) {\n    extraSizeForTopH = 0;\n  }\n\n  const pathMiddle =\n    '' +\n    (hasRightRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + radius\n      : '') +\n    'v' +\n    (height - (2 * cornerWidth - (extraSizeForRightV + 1.5))) + // right vertical line\n    (hasRightRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + radius\n      : '') +\n    'h' +\n    (-width + 2 * cornerWidth - extraSizeForH) +\n    (hasLeftRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + -radius + ',' + -radius\n      : '') +\n    'v' +\n    (-height + (2 * cornerWidth - (extraSizeForLeftV + 1.5))) + // left vertical line\n    (hasLeftRadius\n      ? 'a' + radius + ',' + radius + ' 0 0 1 ' + radius + ',' + -radius\n      : '');\n\n  let path;\n  if (!isRtl) {\n    path =\n      '' +\n      'M' +\n      (cornerWidth + leadingStrokeLength + paddedNotchWidth) +\n      ',' +\n      0.5 +\n      'h' +\n      (width -\n        2 * cornerWidth -\n        paddedNotchWidth -\n        leadingStrokeLength +\n        extraSizeForTopH) +\n      pathMiddle +\n      'h' +\n      leadingStrokeLength;\n  } else {\n    path =\n      '' +\n      'M' +\n      (width - cornerWidth - leadingStrokeLength) +\n      ',' +\n      0.5 +\n      'h' +\n      leadingStrokeLength +\n      pathMiddle +\n      'h' +\n      (width - 2 * cornerWidth - paddedNotchWidth - leadingStrokeLength);\n  }\n  return path;\n}\n\nexport default getSvgPath;\n","/* eslint-disable react/no-unused-state */\nimport React, { Component } from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport { ResizeObserver } from 'resize-observer';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport getSvgPath from './getSvgPath';\nimport DSTextWrapper from '../../TextWrapper/DSTextWrapper';\nimport RequiredMark from '../RequiredMark/RequiredMark';\n\nconst blockName = 'labeled-outline';\n\nconst Wrapper = aggregatedClasses('div')(blockName, null, ({ isOpen }) => ({\n  'has-value': isOpen,\n}));\nconst FloatingLabel = aggregatedClasses('label')(blockName, 'label');\nconst OutlineIdle = aggregatedClasses('div')(blockName, 'idle');\nconst Outline = aggregatedClasses('div')(blockName, 'outline');\nconst OutlinePath = aggregatedClasses('path')(blockName, 'outline__path');\n\nconst shouldUpdateSvgPath = ({ width, height, labelWidth }, prevSizes) => {\n  if (width !== prevSizes.width) return true;\n  if (height !== prevSizes.height) return true;\n  return labelWidth !== prevSizes.labelWidth;\n};\n\nclass FloatingLabelInputImpl extends Component {\n  resizeObserver = new ResizeObserver(() => this.updatePath());\n\n  prevSizes = {};\n\n  static defaultProps = { onChange: () => null };\n\n  constructor(props) {\n    super(props);\n    this.wrapperRef = React.createRef();\n    this.outlinePathRef = React.createRef();\n    this.outlineIdleRef = React.createRef();\n    this.labelRef = React.createRef();\n\n    this.updatePath = this.updatePath.bind(this);\n  }\n\n  componentDidMount() {\n    this.resizeObserver.observe(this.wrapperRef.current);\n  }\n\n  componentDidUpdate() {\n    if (!shouldUpdateSvgPath(this.sizes, this.prevSizes)) return;\n    this.updatePath();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver.unobserve(this.wrapperRef.current);\n  }\n\n  get sizes() {\n    const { current: labelEl } = this.labelRef;\n    const { current: wrapperEl } = this.wrapperRef;\n    const { current: outlineIdleEl } = this.outlineIdleRef;\n    const elStyles = window.getComputedStyle(outlineIdleEl);\n    const leftRadius = elStyles.getPropertyValue('border-top-left-radius');\n    const rightRadius = elStyles.getPropertyValue('border-top-right-radius');\n    const hasLeftRadius = parseFloat(leftRadius) !== 0;\n    const hasRightRadius = parseFloat(rightRadius) !== 0;\n    return {\n      labelWidth: labelEl.offsetWidth * 0.9,\n      width: wrapperEl.offsetWidth,\n      height: wrapperEl.offsetHeight,\n      radiusStyle: leftRadius,\n      hasLeftRadius,\n      hasRightRadius,\n    };\n  }\n\n  get isOpened() {\n    const { focused, isOpen, value } = this.props;\n    return (\n      focused || (Array.isArray(value) ? !!value.length : !!value) || isOpen\n    );\n  }\n\n  getValue(value) {\n    const { valueAccessor } = this.props;\n    if (valueAccessor) return valueAccessor(value);\n    // is an event\n    if (value && value.target) return value.target.value;\n\n    return value;\n  }\n\n  updatePath() {\n    const path = getSvgPath(this.sizes);\n    this.prevSizes = this.sizes;\n    this.outlinePathRef.current.setAttribute('d', path);\n  }\n\n  render() {\n    const {\n      ariaLabel,\n      hasError,\n      readOnly,\n      disabled,\n      inputComponent,\n      labelText,\n      onBlur,\n      onFocus,\n      innerRef,\n      extraInputProps,\n      required,\n      value,\n      onChange,\n      mask,\n      useSubfix,\n      optional,\n    } = this.props;\n\n    const inputProps = {\n      ariaLabel,\n      className: 'floating-label-input-controller',\n      disabled,\n      hasError,\n      onBlur,\n      onChange,\n      onFocus,\n      readOnly,\n      value,\n      innerRef,\n      mask,\n      useSubfix,\n      ...extraInputProps,\n    };\n    const InputComponent = getComponentFromProps(inputComponent, inputProps);\n    const isOpen = this.isOpened;\n\n    return (\n      <Wrapper\n        classProps={{\n          hasError,\n          isOpen,\n          readOnly,\n          disabled,\n        }}\n        innerRef={this.wrapperRef}\n        onBlur={() => null}\n        onFocus={() => null}\n        onMouseOut={this.handleMouseOut}\n        onMouseOver={this.handleMouseOver}\n      >\n        {InputComponent}\n        <FloatingLabel classProps={{ isOpen }} innerRef={this.labelRef}>\n          <DSTextWrapper maxWidth=\"100%\" text={labelText} />\n          <RequiredMark optional={optional} required={required} />\n        </FloatingLabel>\n        <Outline>\n          <svg>\n            <OutlinePath innerRef={this.outlinePathRef} />\n          </svg>\n        </Outline>\n        <OutlineIdle innerRef={this.outlineIdleRef} />\n      </Wrapper>\n    );\n  }\n}\n\nexport default FloatingLabelInputImpl;\n","import React from 'react';\nimport FloatingLabelInputImpl from './FloatingLabelInputImpl';\nimport DSLabel from '../FormItem/Label/DSLabel';\nimport DSTextBox from '../TextBox/DSTextBox';\n\nconst noop = () => {};\nconst DSFloatingLabelInput = ({\n  containerProps = {},\n  arialLabel = '',\n  /**\n   * Gets the reference for the input controller\n   *\n   * @param {HTMLElement} node\n   */\n  innerRef = noop,\n  /**\n   * Custom className for floatingLabelInput\n   */\n  className = '',\n  /**\n   * Props injected to the input component\n   *\n   * @type Object\n   */\n  extraInputProps = {},\n  /**\n   * Input controller\n   *\n   * @type {element}\n   */\n  inputComponent = DSTextBox,\n  /**\n   * Input value\n   *\n   * @type {string}\n   */\n  value = '',\n  /**\n   * Label component\n   *\n   * @type {element}\n   */\n  labelComponent = DSLabel,\n  /**\n   * Label text\n   *\n   * @type {string | element}\n   */\n  labelText = null,\n  /**\n   * Callback when input controller has changed\n   *\n   * @param event\n   */\n  onChange = noop,\n  onBlur = noop,\n  onFocus = noop,\n  /**\n   * Whether the label is floating or not\n   *\n   * @type {boolean}\n   */\n  isOpen = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  hasError = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  readOnly = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  disabled = false,\n  /**\n   * Whether ...\n   *\n   * @type {boolean}\n   */\n  required = false,\n  optional = false,\n  mask = null,\n  useSubfix = '',\n}) => (\n  <FloatingLabelInputImpl\n    arialLabel={arialLabel}\n    className={className}\n    disabled={disabled}\n    extraInputProps={extraInputProps}\n    hasError={hasError}\n    innerRef={innerRef}\n    inputComponent={inputComponent}\n    isOpen={isOpen}\n    labelComponent={labelComponent}\n    labelText={labelText}\n    mask={mask}\n    onBlur={onBlur}\n    onChange={onChange}\n    onFocus={onFocus}\n    optional={optional}\n    readOnly={readOnly}\n    required={required}\n    useSubfix={useSubfix}\n    value={value}\n  />\n);\n\nexport default DSFloatingLabelInput;\n","import React from 'react';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\n\nconst blockName = 'form-item';\n\nconst FeedbackSpan = aggregatedClasses('span')(blockName, 'feedback');\n\nconst Feedback = ({ text, hasError }) => {\n  if (!text) return null;\n  return <FeedbackSpan classProps={hasError}>{text}</FeedbackSpan>;\n};\n\nexport default Feedback;\n","/* eslint-disable consistent-return */\nimport styled from 'styled-components';\n\nexport const Suffix = styled.div`\n  height: 2.16rem;\n  align-items: center;\n  display: flex;\n  ${props => {\n    if (props.label && !props.withFeedback) {\n      return `\n      padding-top: 1.2rem;\n      `;\n    }\n    if (!props.label && !props.withFeedback) {\n      return `\n      padding-top: 1rem;\n      `;\n    }\n  }}\n`;\n\nexport const SuffixInputWrapper = styled.div`\n  padding-right: 0.32rem;\n  flex: 1;\n`;\nexport const SuffixWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport default Suffix;\n","/* eslint-disable complexity */\n/* eslint-disable max-lines */\nimport React, { Fragment } from 'react';\nimport { PropTypes, describe } from 'react-desc';\nimport { aggregatedClasses } from '@elliemae/ds-classnames';\nimport getComponentFromProps from '@elliemae/ds-utilities/getComponentFromProps';\nimport Group from '@elliemae/ds-shared/GroupContext/Group';\nimport DSInputGroup from '../InputGroup';\nimport DSFloatingLabelInput from '../FloatingLabelInput';\nimport DSTextBox from '../TextBox';\nimport DSLabel from './Label/DSLabel';\nimport Feedback from './Feedback';\nimport DSError from './Error/DSError';\nimport { Suffix, SuffixInputWrapper, SuffixWrapper } from './Suffix/Suffix';\n// import { maskTypes } from '../InputMask/MaskTypes';\n\nexport { DSError };\n\nconst blockName = 'form-item';\n\nconst Wrapper = aggregatedClasses('div')(\n  blockName,\n  null,\n  ({ leftLabel, variant }) => ({\n    'with-left-label': leftLabel,\n    [variant]: variant,\n  }),\n);\nconst WrapperContent = aggregatedClasses('div')(`${blockName}-content`);\nconst WrapperContentGroup = aggregatedClasses('fieldset')(\n  `${blockName}-content`,\n);\n\nexport const FORMITEM_LAYOUT_VARIANTS = {\n  DEFAULT: 'variant-default',\n  FOCUS: 'variant-focus',\n  ACTIVE: 'variant-active',\n  DISABLED: 'variant-disabled',\n  READ_ONLY: 'variant-read-only',\n  OPTIONAL: 'variant-optional',\n};\n\nconst DSFormItemLayout = ({\n  leftLabel = false,\n  floatingLabel = false,\n  name,\n  id,\n  value,\n  inputComponent: InputComponent = DSTextBox,\n  labelComponent: LabelComponent = DSLabel,\n  feedbackComponent: FeedbackComponent = Feedback,\n  labelText,\n  truncateText,\n  hasError = false,\n  // orientation = 'vertical', // one of [ vertical, horizontal ]\n  validationState, // one of [ success, error, warning ]\n  validationMessage = '',\n  feedbackMessage = '',\n  readOnly,\n  focused = false,\n  type,\n  autoFocus = () => {},\n  disabled = false,\n  onChange = () => {},\n  onBlur = () => {},\n  onFocus = () => {},\n  onPaste = () => {},\n  onKeyUp = () => {},\n  extraInputProps = {},\n  extraContent,\n  leftAddon = null,\n  rightAddon = null,\n  required = false,\n  optional = false,\n  mask,\n  useSubfix = '',\n  suffix = '',\n  variant = FORMITEM_LAYOUT_VARIANTS.DEFAULT,\n  containerProps = {},\n  ...rest\n}) => {\n  const isGroup = InputComponent.type === (<Group />).type;\n  const floatingLabelOverride = floatingLabel === 'UNSAFE';\n  const WrapperContentComp = !isGroup ? WrapperContent : WrapperContentGroup;\n\n  // group the input props to not duplicate it inside the specific inputComponent (floating or not)\n  const inputProps = {\n    ...extraInputProps,\n    disabled,\n    hasError: hasError || validationState === 'error',\n    id,\n    name,\n    type,\n    autofocus: autoFocus,\n    onBlur,\n    onChange,\n    onFocus,\n    onPaste,\n    onKeyUp,\n    readOnly,\n    value,\n    mask,\n    useSubfix,\n    variant,\n    required,\n    ...rest,\n  };\n\n  const renderInput = (Input) =>\n    leftAddon || rightAddon ? (\n      <DSInputGroup\n        leftAddon={leftAddon}\n        rightAddon={rightAddon}\n        variant={variant}\n      >\n        {Input}\n      </DSInputGroup>\n    ) : (\n      Input\n    );\n\n  const renderFloating = (\n    <DSFloatingLabelInput\n      {...inputProps}\n      extraInputProps={extraInputProps}\n      focused={focused}\n      inputComponent={InputComponent}\n      labelComponent={LabelComponent}\n      labelText={labelText}\n      optional={optional}\n      required={required}\n      variant={variant}\n    />\n  );\n\n  const InputWithLabel = floatingLabelOverride ? (\n    renderInput(renderFloating)\n  ) : (\n    <>\n      <LabelComponent\n        htmlFor={id || name}\n        label={labelText}\n        optional={optional}\n        required={required}\n        isGroup={isGroup}\n        truncateText={truncateText}\n      />\n      {renderInput(getComponentFromProps(InputComponent, inputProps))}\n    </>\n  );\n\n  if (suffix) {\n    return (\n      <Wrapper\n        classProps={{\n          disabled,\n          readOnly,\n          hasError,\n          leftLabel,\n          variant,\n        }}\n        {...containerProps}\n      >\n        <SuffixWrapper className=\"suffix-wrapper\">\n          <SuffixInputWrapper className=\"suffix-input-wrapper\">\n            <WrapperContentComp>\n              {InputWithLabel}\n              {extraContent}\n            </WrapperContentComp>\n            <FeedbackComponent\n              hasError={hasError}\n              text={\n                validationState || hasError\n                  ? validationMessage\n                  : feedbackMessage\n              }\n            />\n          </SuffixInputWrapper>\n          <Suffix\n            className=\"suffix-label\"\n            label={!!labelText}\n            withFeedback={Boolean(validationMessage || feedbackMessage)}\n          >\n            {suffix}\n          </Suffix>\n        </SuffixWrapper>\n      </Wrapper>\n    );\n  }\n\n  return (\n    <Wrapper\n      classProps={{\n        disabled,\n        readOnly,\n        hasError,\n        leftLabel,\n        variant,\n      }}\n      {...containerProps}\n    >\n      <WrapperContentComp>\n        {InputWithLabel}\n        {extraContent}\n      </WrapperContentComp>\n      <FeedbackComponent\n        hasError={hasError}\n        text={validationState || hasError ? validationMessage : feedbackMessage}\n      />\n    </Wrapper>\n  );\n};\n\nconst props = {\n  /** props to inject to form item layout wrapper */\n  containerProps: PropTypes.object.description(\n    'props to inject to form item layout wrapper',\n  ),\n  /** position label on the left */\n  leftLabel: PropTypes.bool.description('position label on the left'),\n  /** turn on floating label */\n  floatingLabel: PropTypes.bool.description('turn on floating label'),\n  /** id for form item layout */\n  id: PropTypes.string.description('id for form item layout'),\n  /** html name prop for form tags */\n  name: PropTypes.string.description('html name prop for form tags'),\n  /** form item layout element value */\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.object,\n  ]).description('form item layout element value'),\n  /** Any input component */\n  inputComponent: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.element,\n  ]).description('Any input component'),\n  /** Label component  */\n  labelComponent: PropTypes.element.description('Label component'),\n  /** feedback component to embed on form item */\n  feedbackComponent: PropTypes.node.description(\n    'feedback component to embed on form item',\n  ),\n  /** label text */\n  labelText: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.element,\n  ]).description('label text'),\n  /** error state */\n  hasError: PropTypes.bool.description('error state'),\n  /** validation state */\n  validationState: PropTypes.oneOf(['success', 'error', 'warning']).description(\n    'validation state',\n  ),\n  /** validation message */\n  validationMessage: PropTypes.string.description('validation message'),\n  /** feedback message */\n  feedbackMessage: PropTypes.string.description('feedback message'),\n  /** read only form item */\n  readOnly: PropTypes.bool.description('read only form item'),\n  /** focused state */\n  focused: PropTypes.bool.description('focused state'),\n  /** input type */\n  type: PropTypes.string.description('input type'),\n  /** auto focus input */\n  autoFocus: PropTypes.func.description('auto focus input'),\n  /** disabled state */\n  disabled: PropTypes.bool.description('disabled state'),\n  /** on change handler */\n  onChange: PropTypes.func.description('on change handler'),\n  /** on blur handler */\n  onBlur: PropTypes.func.description('on blur handler'),\n  /** extra input props to inject */\n  extraInputProps: PropTypes.object.description('extra input props to inject'),\n  /** extra content */\n  extraContent: PropTypes.element.description('extra content'),\n  /** left addon for form item */\n  leftAddon: PropTypes.element.description('left addon for form item'),\n  /** right addon for form item */\n  rightAddon: PropTypes.element.description('right addon for form item'),\n  /** add required mark */\n  required: PropTypes.bool.description('add required mark'),\n  /** add optional mark */\n  optional: PropTypes.bool.description('add optional mark'),\n  /** on focus handler */\n  onFocus: PropTypes.func.description('on focus handler'),\n  /** on paste handler */\n  onPaste: PropTypes.func.description('on paste handler'),\n  /** add truncation and ellipsis */\n  truncateText: PropTypes.bool.description('add truncation and ellipsis'),\n  /** on key up event handler */\n  onKeyUp: PropTypes.func.description('on key up event handler'),\n  /** mask for input mask component */\n  mask: PropTypes.oneOfType([\n    // PropTypes.oneOf(maskTypes),\n    PropTypes.string,\n    PropTypes.func,\n  ]).description('mask for input mask component'),\n  /** add suffix to input */\n  useSubfix: PropTypes.string.description('add suffix to input'),\n  /** suffix for input */\n  suffix: PropTypes.string.description('suffix for input'),\n  /** form item layout type */\n  variant: PropTypes.oneOf([\n    FORMITEM_LAYOUT_VARIANTS.DEFAULT,\n    FORMITEM_LAYOUT_VARIANTS.FOCUS,\n    FORMITEM_LAYOUT_VARIANTS.ACTIVE,\n    FORMITEM_LAYOUT_VARIANTS.DISABLED,\n    FORMITEM_LAYOUT_VARIANTS.READ_ONLY,\n    FORMITEM_LAYOUT_VARIANTS.OPTIONAL,\n  ]).description('form item layout type'),\n};\n\nDSFormItemLayout.propTypes = props;\nconst DSFormItemLayoutWithSchema = describe(DSFormItemLayout);\nDSFormItemLayoutWithSchema.propTypes = props;\n\nexport default DSFormItemLayout;\nexport { DSFormItemLayoutWithSchema };\n"],"sourceRoot":""}